

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Feb 10 21:40:26 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.40
    26                           ; Generated 01/12/2016 GMT
    27                           ; 
    28                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  000638                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _deg0
    65  000638  0F                 	db	15
    66                           
    67                           ;initializer for _deg1
    68  000639  1E                 	db	30
    69                           
    70                           ;initializer for _deg2
    71  00063A  3C                 	db	60
    72                           
    73                           ;initializer for _deg3
    74  00063B  5A                 	db	90
    75                           
    76                           ;initializer for _deg4
    77  00063C  78                 	db	120
    78                           
    79                           	psect	nvCOMRAM
    80  000039                     __pnvCOMRAM:
    81                           	opt stack 0
    82  000039                     _val_inter:
    83                           	opt stack 0
    84  000039                     	ds	3
    85  00003C                     _val:
    86                           	opt stack 0
    87  00003C                     	ds	2
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _INTCONbits	set	4082
    92  0000                     _TMR0H	set	4055
    93  0000                     _TMR0L	set	4054
    94  0000                     _ACQT0	set	32259
    95  0000                     _ACQT1	set	32260
    96  0000                     _ACQT2	set	32261
    97  0000                     _ADCS0	set	32256
    98  0000                     _ADCS1	set	32257
    99  0000                     _ADCS2	set	32258
   100  0000                     _ADFM	set	32263
   101  0000                     _ADIF	set	31990
   102  0000                     _ADON	set	32272
   103  0000                     _CHS0	set	32274
   104  0000                     _CHS1	set	32275
   105  0000                     _CHS2	set	32276
   106  0000                     _CHS3	set	32277
   107  0000                     _IPEN	set	32391
   108  0000                     _PCFG0	set	32264
   109  0000                     _PCFG1	set	32265
   110  0000                     _PCFG2	set	32266
   111  0000                     _PCFG3	set	32267
   112  0000                     _PSA	set	32427
   113  0000                     _RB0	set	31752
   114  0000                     _RB1	set	31753
   115  0000                     _RB2	set	31754
   116  0000                     _RB3	set	31755
   117  0000                     _RB4	set	31756
   118  0000                     _T08BIT	set	32430
   119  0000                     _T0CS	set	32429
   120  0000                     _T0PS0	set	32424
   121  0000                     _T0PS1	set	32425
   122  0000                     _T0PS2	set	32426
   123  0000                     _TMR0IE	set	32661
   124  0000                     _TMR0IF	set	32658
   125  0000                     _TMR0ON	set	32431
   126  0000                     _TRISB0	set	31896
   127  0000                     _TRISB1	set	31897
   128  0000                     _TRISB2	set	31898
   129  0000                     _TRISB3	set	31899
   130  0000                     _TRISB4	set	31900
   131                           
   132                           ; #config settings
   133  0000                     
   134                           	psect	cinit
   135  0005BA                     __pcinit:
   136                           	opt stack 0
   137  0005BA                     start_initialization:
   138                           	opt stack 0
   139  0005BA                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (5 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  0005BA  0E38               	movlw	low __pidataCOMRAM
   145  0005BC  6EF6               	movwf	tblptrl,c
   146  0005BE  0E06               	movlw	high __pidataCOMRAM
   147  0005C0  6EF7               	movwf	tblptrh,c
   148  0005C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  0005C4  6EF8               	movwf	tblptru,c
   150  0005C6  EE00  F03E         	lfsr	0,__pdataCOMRAM
   151  0005CA  EE10 F005          	lfsr	1,5
   152  0005CE                     copy_data0:
   153  0005CE  0009               	tblrd		*+
   154  0005D0  CFF5 FFEE          	movff	tablat,postinc0
   155  0005D4  50E5               	movf	postdec1,w,c
   156  0005D6  50E1               	movf	fsr1l,w,c
   157  0005D8  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to COMRAM (1 bytes)
   160  0005DA  6A43               	clrf	__pbssCOMRAM& (0+255),c
   161  0005DC                     end_of_initialization:
   162                           	opt stack 0
   163  0005DC                     __end_of__initialization:
   164                           	opt stack 0
   165  0005DC  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  0005DE  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  0005E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168  0005E2  6EF8               	movwf	tblptru,c
   169  0005E4  0100               	movlb	0
   170  0005E6  EF09  F000         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           tblptrl	equ	0xFF6
   174                           tablat	equ	0xFF5
   175                           postinc0	equ	0xFEE
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	bssCOMRAM
   180  000043                     __pbssCOMRAM:
   181                           	opt stack 0
   182  000043                     _count_deg:
   183                           	opt stack 0
   184  000043                     	ds	1
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           postdec1	equ	0xFE5
   191                           fsr1l	equ	0xFE1
   192                           
   193                           	psect	dataCOMRAM
   194  00003E                     __pdataCOMRAM:
   195                           	opt stack 0
   196  00003E                     _deg0:
   197                           	opt stack 0
   198  00003E                     	ds	1
   199  00003F                     _deg1:
   200                           	opt stack 0
   201  00003F                     	ds	1
   202  000040                     _deg2:
   203                           	opt stack 0
   204  000040                     	ds	1
   205  000041                     _deg3:
   206                           	opt stack 0
   207  000041                     	ds	1
   208  000042                     _deg4:
   209                           	opt stack 0
   210  000042                     	ds	1
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           postdec1	equ	0xFE5
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	opt stack 0
   222  000001                     ??_CHECK:
   223                           
   224                           ; 1 bytes @ 0x0
   225  000001                     	ds	15
   226  000010                     ?_start_convert:
   227                           	opt stack 0
   228  000010                     ?___ftpack:
   229                           	opt stack 0
   230  000010                     ___ftpack@arg:
   231                           	opt stack 0
   232                           
   233                           ; 3 bytes @ 0xF
   234  000010                     	ds	2
   235  000012                     start_convert@pval2:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x11
   239  000012                     	ds	1
   240  000013                     ___ftpack@exp:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x12
   244  000013                     	ds	1
   245  000014                     start_convert@channel:
   246                           	opt stack 0
   247  000014                     ___ftpack@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x13
   251  000014                     	ds	1
   252  000015                     ??___ftpack:
   253  000015                     start_convert@pval1:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x14
   257  000015                     	ds	2
   258  000017                     start_convert@val:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x16
   262  000017                     	ds	1
   263  000018                     ?___lwtoft:
   264                           	opt stack 0
   265  000018                     ___lwtoft@c:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x17
   269  000018                     	ds	3
   270  00001B                     ?___ftmul:
   271                           	opt stack 0
   272  00001B                     ___ftmul@f1:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x1A
   276  00001B                     	ds	3
   277  00001E                     ___ftmul@f2:
   278                           	opt stack 0
   279                           
   280                           ; 3 bytes @ 0x1D
   281  00001E                     	ds	3
   282  000021                     ??___ftmul:
   283                           
   284                           ; 1 bytes @ 0x20
   285  000021                     	ds	3
   286  000024                     ___ftmul@exp:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x23
   290  000024                     	ds	1
   291  000025                     ___ftmul@f3_as_product:
   292                           	opt stack 0
   293                           
   294                           ; 3 bytes @ 0x24
   295  000025                     	ds	3
   296  000028                     ___ftmul@cntr:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x27
   300  000028                     	ds	1
   301  000029                     ___ftmul@sign:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x28
   305  000029                     	ds	1
   306  00002A                     ?___fttol:
   307                           	opt stack 0
   308  00002A                     ___fttol@f1:
   309                           	opt stack 0
   310                           
   311                           ; 3 bytes @ 0x29
   312  00002A                     	ds	4
   313  00002E                     ??___fttol:
   314                           
   315                           ; 1 bytes @ 0x2D
   316  00002E                     	ds	5
   317  000033                     ___fttol@sign1:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x32
   321  000033                     	ds	1
   322  000034                     ___fttol@lval:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0x33
   326  000034                     	ds	4
   327  000038                     ___fttol@exp1:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x37
   331  000038                     	ds	1
   332  000039                     tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           ; 1 bytes @ 0x38
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 50 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  count_deg       1    0        unsigned char 
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   360 ;;      Params:         0       0       0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called:    3
   366 ;; This function calls:
   367 ;;		_ADC_init
   368 ;;		___ftmul
   369 ;;		___fttol
   370 ;;		___lwtoft
   371 ;;		_start_convert
   372 ;;		_timer0_init
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  000012                     __ptext0:
   380                           	opt stack 0
   381  000012                     _main:
   382                           	opt stack 28
   383                           
   384                           ;main.c: 52: unsigned char count_deg;
   385                           ;main.c: 54: ADC_init();
   386                           
   387                           ;incstack = 0
   388  000012  EC07  F003         	call	_ADC_init	;wreg free
   389                           
   390                           ;main.c: 55: timer0_init();
   391  000016  EC14  F003         	call	_timer0_init	;wreg free
   392                           
   393                           ;main.c: 59: TRISB0 = 0;
   394  00001A  9093               	bcf	3987,0,c	;volatile
   395                           
   396                           ;main.c: 60: TRISB1 = 0;
   397  00001C  9293               	bcf	3987,1,c	;volatile
   398                           
   399                           ;main.c: 61: TRISB2 = 0;
   400  00001E  9493               	bcf	3987,2,c	;volatile
   401                           
   402                           ;main.c: 62: TRISB3 = 0;
   403  000020  9693               	bcf	3987,3,c	;volatile
   404                           
   405                           ;main.c: 63: TRISB4 = 0;
   406  000022  9893               	bcf	3987,4,c	;volatile
   407                           
   408                           ;main.c: 68: IPEN = 0;
   409  000024  9ED0               	bcf	4048,7,c	;volatile
   410                           
   411                           ;main.c: 75: INTCONbits.GIE = 1;
   412  000026  8EF2               	bsf	intcon,7,c	;volatile
   413                           
   414                           ;main.c: 80: TMR0IE = 1;
   415  000028  8AF2               	bsf	intcon,5,c	;volatile
   416                           
   417                           ;main.c: 98: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
   418  00002A  0E15               	movlw	21
   419  00002C  6ED7               	movwf	4055,c	;volatile
   420  00002E  0EA0               	movlw	160
   421  000030  6ED6               	movwf	4054,c	;volatile
   422                           
   423                           ;main.c: 104: val_inter = 180.0/1023.0;
   424  000032  0E2D               	movlw	45
   425  000034  6E39               	movwf	_val_inter,c
   426  000036  0E34               	movlw	52
   427  000038  6E3A               	movwf	_val_inter+1,c
   428  00003A  0E3E               	movlw	62
   429  00003C  6E3B               	movwf	_val_inter+2,c
   430  00003E                     l1190:
   431                           
   432                           ;main.c: 106: {
   433                           ;main.c: 108: val = start_convert(0);
   434  00003E  0E00               	movlw	0
   435  000040  EC93  F002         	call	_start_convert
   436  000044  C010  F03C         	movff	?_start_convert,_val
   437  000048  C011  F03D         	movff	?_start_convert+1,_val+1
   438                           
   439                           ;main.c: 109: deg0 = val*val_inter;
   440  00004C  C039  F01E         	movff	_val_inter,___ftmul@f2
   441  000050  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   442  000054  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   443  000058  C03C  F018         	movff	_val,___lwtoft@c
   444  00005C  C03D  F019         	movff	_val+1,___lwtoft@c+1
   445  000060  ECF5  F002         	call	___lwtoft	;wreg free
   446  000064  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   447  000068  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   448  00006C  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   449  000070  EC53  F001         	call	___ftmul	;wreg free
   450  000074  C01B  F02A         	movff	?___ftmul,___fttol@f1
   451  000078  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   452  00007C  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   453  000080  ECD9  F000         	call	___fttol	;wreg free
   454  000084  502A               	movf	?___fttol,w,c
   455  000086  6E3E               	movwf	_deg0,c
   456                           
   457                           ;main.c: 110: val = start_convert(1);
   458  000088  0E01               	movlw	1
   459  00008A  EC93  F002         	call	_start_convert
   460  00008E  C010  F03C         	movff	?_start_convert,_val
   461  000092  C011  F03D         	movff	?_start_convert+1,_val+1
   462                           
   463                           ;main.c: 111: deg1=val*val_inter;
   464  000096  C039  F01E         	movff	_val_inter,___ftmul@f2
   465  00009A  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   466  00009E  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   467  0000A2  C03C  F018         	movff	_val,___lwtoft@c
   468  0000A6  C03D  F019         	movff	_val+1,___lwtoft@c+1
   469  0000AA  ECF5  F002         	call	___lwtoft	;wreg free
   470  0000AE  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   471  0000B2  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   472  0000B6  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   473  0000BA  EC53  F001         	call	___ftmul	;wreg free
   474  0000BE  C01B  F02A         	movff	?___ftmul,___fttol@f1
   475  0000C2  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   476  0000C6  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   477  0000CA  ECD9  F000         	call	___fttol	;wreg free
   478  0000CE  502A               	movf	?___fttol,w,c
   479  0000D0  6E3F               	movwf	_deg1,c
   480                           
   481                           ;main.c: 112: val = start_convert(2);
   482  0000D2  0E02               	movlw	2
   483  0000D4  EC93  F002         	call	_start_convert
   484  0000D8  C010  F03C         	movff	?_start_convert,_val
   485  0000DC  C011  F03D         	movff	?_start_convert+1,_val+1
   486                           
   487                           ;main.c: 113: deg2=val*val_inter;
   488  0000E0  C039  F01E         	movff	_val_inter,___ftmul@f2
   489  0000E4  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   490  0000E8  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   491  0000EC  C03C  F018         	movff	_val,___lwtoft@c
   492  0000F0  C03D  F019         	movff	_val+1,___lwtoft@c+1
   493  0000F4  ECF5  F002         	call	___lwtoft	;wreg free
   494  0000F8  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   495  0000FC  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   496  000100  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   497  000104  EC53  F001         	call	___ftmul	;wreg free
   498  000108  C01B  F02A         	movff	?___ftmul,___fttol@f1
   499  00010C  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   500  000110  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   501  000114  ECD9  F000         	call	___fttol	;wreg free
   502  000118  502A               	movf	?___fttol,w,c
   503  00011A  6E40               	movwf	_deg2,c
   504                           
   505                           ;main.c: 114: val = start_convert(3);
   506  00011C  0E03               	movlw	3
   507  00011E  EC93  F002         	call	_start_convert
   508  000122  C010  F03C         	movff	?_start_convert,_val
   509  000126  C011  F03D         	movff	?_start_convert+1,_val+1
   510                           
   511                           ;main.c: 115: deg3=val*val_inter;
   512  00012A  C039  F01E         	movff	_val_inter,___ftmul@f2
   513  00012E  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   514  000132  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   515  000136  C03C  F018         	movff	_val,___lwtoft@c
   516  00013A  C03D  F019         	movff	_val+1,___lwtoft@c+1
   517  00013E  ECF5  F002         	call	___lwtoft	;wreg free
   518  000142  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   519  000146  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   520  00014A  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   521  00014E  EC53  F001         	call	___ftmul	;wreg free
   522  000152  C01B  F02A         	movff	?___ftmul,___fttol@f1
   523  000156  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   524  00015A  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   525  00015E  ECD9  F000         	call	___fttol	;wreg free
   526  000162  502A               	movf	?___fttol,w,c
   527  000164  6E41               	movwf	_deg3,c
   528                           
   529                           ;main.c: 116: val = start_convert(4);
   530  000166  0E04               	movlw	4
   531  000168  EC93  F002         	call	_start_convert
   532  00016C  C010  F03C         	movff	?_start_convert,_val
   533  000170  C011  F03D         	movff	?_start_convert+1,_val+1
   534                           
   535                           ;main.c: 117: deg4=val*val_inter;
   536  000174  C039  F01E         	movff	_val_inter,___ftmul@f2
   537  000178  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   538  00017C  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   539  000180  C03C  F018         	movff	_val,___lwtoft@c
   540  000184  C03D  F019         	movff	_val+1,___lwtoft@c+1
   541  000188  ECF5  F002         	call	___lwtoft	;wreg free
   542  00018C  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   543  000190  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   544  000194  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   545  000198  EC53  F001         	call	___ftmul	;wreg free
   546  00019C  C01B  F02A         	movff	?___ftmul,___fttol@f1
   547  0001A0  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   548  0001A4  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   549  0001A8  ECD9  F000         	call	___fttol	;wreg free
   550  0001AC  502A               	movf	?___fttol,w,c
   551  0001AE  6E42               	movwf	_deg4,c
   552  0001B0  D746               	goto	l1190
   553  0001B2                     __end_of_main:
   554                           	opt stack 0
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           intcon	equ	0xFF2
   560                           postinc0	equ	0xFEE
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           
   564 ;; *************** function _timer0_init *****************
   565 ;; Defined at:
   566 ;;		line 3 in file "timer0_init.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		None
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   580 ;;      Params:         0       0       0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text1
   595  000628                     __ptext1:
   596                           	opt stack 0
   597  000628                     _timer0_init:
   598                           	opt stack 29
   599                           
   600                           ;timer0_init.c: 10: T08BIT = 0;
   601                           
   602                           ;incstack = 0
   603  000628  9CD5               	bcf	4053,6,c	;volatile
   604                           
   605                           ;timer0_init.c: 16: T0CS = 0;
   606  00062A  9AD5               	bcf	4053,5,c	;volatile
   607                           
   608                           ;timer0_init.c: 28: PSA = 0;
   609  00062C  96D5               	bcf	4053,3,c	;volatile
   610                           
   611                           ;timer0_init.c: 41: T0PS0 = 1;
   612  00062E  80D5               	bsf	4053,0,c	;volatile
   613                           
   614                           ;timer0_init.c: 42: T0PS1 = 0;
   615  000630  92D5               	bcf	4053,1,c	;volatile
   616                           
   617                           ;timer0_init.c: 43: T0PS2 = 0;
   618  000632  94D5               	bcf	4053,2,c	;volatile
   619                           
   620                           ;timer0_init.c: 49: TMR0ON = 1;
   621  000634  8ED5               	bsf	4053,7,c	;volatile
   622  000636  0012               	return		;funcret
   623  000638                     __end_of_timer0_init:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           intcon	equ	0xFF2
   630                           postinc0	equ	0xFEE
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634 ;; *************** function _start_convert *****************
   635 ;; Defined at:
   636 ;;		line 47 in file "ADC_init.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  channel         1    wreg     unsigned char 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  channel         1   19[COMRAM] unsigned char 
   641 ;;  val             2   22[COMRAM] unsigned int 
   642 ;;  pval1           2   20[COMRAM] PTR unsigned char 
   643 ;;		 -> start_convert@val(2), 
   644 ;;  pval2           2   17[COMRAM] PTR unsigned char 
   645 ;;		 -> start_convert@val(2), 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  2   15[COMRAM] unsigned int 
   648 ;; Registers used:
   649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         2       0       0       0       0       0       0       0       0
   656 ;;      Locals:         7       0       0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0
   658 ;;      Totals:         9       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        9 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text2
   670  000526                     __ptext2:
   671                           	opt stack 0
   672  000526                     _start_convert:
   673                           	opt stack 29
   674                           
   675                           ;incstack = 0
   676                           ;start_convert@channel stored from wreg
   677  000526  6E14               	movwf	start_convert@channel,c
   678                           
   679                           ;ADC_init.c: 51: unsigned int val;
   680                           ;ADC_init.c: 52: unsigned char *pval1, *pval2;
   681                           ;ADC_init.c: 53: pval1 = &val;
   682  000528  0E17               	movlw	low start_convert@val
   683  00052A  6E15               	movwf	start_convert@pval1,c
   684  00052C  0E00               	movlw	high start_convert@val
   685  00052E  6E16               	movwf	start_convert@pval1+1,c
   686                           
   687                           ;ADC_init.c: 54: pval2 = pval1+1;
   688  000530  0E01               	movlw	1
   689  000532  2415               	addwf	start_convert@pval1,w,c
   690  000534  6E12               	movwf	start_convert@pval2,c
   691  000536  0E00               	movlw	0
   692  000538  2016               	addwfc	start_convert@pval1+1,w,c
   693  00053A  6E13               	movwf	start_convert@pval2+1,c
   694                           
   695                           ;ADC_init.c: 55: ADIF =0;
   696  00053C  9C9E               	bcf	3998,6,c	;volatile
   697                           
   698                           ;ADC_init.c: 57: switch(channel)
   699  00053E  D016               	goto	l1060
   700  000540                     l120:
   701                           
   702                           ;ADC_init.c: 60: CHS0 = 0;
   703  000540  94C2               	bcf	4034,2,c	;volatile
   704  000542  D001               	goto	L1
   705  000544                     l122:
   706                           
   707                           ;ADC_init.c: 66: CHS0 = 1;
   708  000544  84C2               	bsf	4034,2,c	;volatile
   709  000546                     L1:
   710                           
   711                           ;ADC_init.c: 67: CHS1 = 0;
   712  000546  96C2               	bcf	4034,3,c	;volatile
   713  000548  D002               	goto	L2
   714  00054A                     l123:
   715                           
   716                           ;ADC_init.c: 72: CHS0 = 0;
   717  00054A  94C2               	bcf	4034,2,c	;volatile
   718  00054C  D004               	goto	L3
   719  00054E                     L2:
   720                           
   721                           ;ADC_init.c: 74: CHS2 = 0;
   722  00054E  98C2               	bcf	4034,4,c	;volatile
   723  000550                     
   724                           ;ADC_init.c: 75: CHS3 = 0;
   725  000550  9AC2               	bcf	4034,5,c	;volatile
   726                           
   727                           ;ADC_init.c: 76: break;
   728  000552  D01D               	goto	l128
   729  000554                     l124:
   730                           
   731                           ;ADC_init.c: 78: CHS0 = 1;
   732  000554  84C2               	bsf	4034,2,c	;volatile
   733  000556                     L3:
   734                           
   735                           ;ADC_init.c: 79: CHS1 = 1;
   736  000556  86C2               	bsf	4034,3,c	;volatile
   737  000558  D7FA               	goto	L2
   738  00055A                     l125:
   739                           
   740                           ;ADC_init.c: 84: CHS0 = 0;
   741  00055A  94C2               	bcf	4034,2,c	;volatile
   742                           
   743                           ;ADC_init.c: 85: CHS1 = 0;
   744  00055C  96C2               	bcf	4034,3,c	;volatile
   745                           
   746                           ;ADC_init.c: 86: CHS2 = 1;
   747  00055E  88C2               	bsf	4034,4,c	;volatile
   748  000560  D7F7               	goto	L4
   749  000562                     l1054:
   750  000562  0E00               	movlw	0
   751  000564  6E11               	movwf	?_start_convert+1,c
   752  000566  0E00               	movlw	0
   753  000568  6E10               	movwf	?_start_convert,c
   754  00056A  0012               	return	
   755  00056C                     l1060:
   756  00056C  5014               	movf	start_convert@channel,w,c
   757                           
   758                           ; Switch size 1, requested type "space"
   759                           ; Number of cases is 5, Range of values is 0 to 4
   760                           ; switch strategies available:
   761                           ; Name         Instructions Cycles
   762                           ; simple_byte           16     9 (average)
   763                           ;	Chosen strategy is simple_byte
   764  00056E  0A00               	xorlw	0	; case 0
   765  000570  B4D8               	btfsc	status,2,c
   766  000572  D7E6               	goto	l120
   767  000574  0A01               	xorlw	1	; case 1
   768  000576  B4D8               	btfsc	status,2,c
   769  000578  D7E5               	goto	l122
   770  00057A  0A03               	xorlw	3	; case 2
   771  00057C  B4D8               	btfsc	status,2,c
   772  00057E  D7E5               	goto	l123
   773  000580  0A01               	xorlw	1	; case 3
   774  000582  B4D8               	btfsc	status,2,c
   775  000584  D7E7               	goto	l124
   776  000586  0A07               	xorlw	7	; case 4
   777  000588  B4D8               	btfsc	status,2,c
   778  00058A  D7E7               	goto	l125
   779  00058C  D7EA               	goto	l1054
   780  00058E                     l128:
   781  00058E  B2C2               	btfsc	4034,1,c	;volatile
   782  000590  D7FE               	goto	l128
   783                           
   784                           ;ADC_init.c: 93: ADCON0bits.GO =1;
   785  000592  82C2               	bsf	4034,1,c	;volatile
   786  000594                     l131:
   787  000594  B2C2               	btfsc	4034,1,c	;volatile
   788  000596  D7FE               	goto	l131
   789                           
   790                           ;ADC_init.c: 95: *pval1 = ADRESL;
   791  000598  C015  FFD9         	movff	start_convert@pval1,fsr2l
   792  00059C  C016  FFDA         	movff	start_convert@pval1+1,fsr2h
   793  0005A0  CFC3 FFDF          	movff	4035,indf2	;volatile
   794                           
   795                           ;ADC_init.c: 96: *pval2 = ADRESH;
   796  0005A4  C012  FFD9         	movff	start_convert@pval2,fsr2l
   797  0005A8  C013  FFDA         	movff	start_convert@pval2+1,fsr2h
   798  0005AC  CFC4 FFDF          	movff	4036,indf2	;volatile
   799                           
   800                           ;ADC_init.c: 97: return val;
   801  0005B0  C017  F010         	movff	start_convert@val,?_start_convert
   802  0005B4  C018  F011         	movff	start_convert@val+1,?_start_convert+1
   803  0005B8  0012               	return	
   804  0005BA                     __end_of_start_convert:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           intcon	equ	0xFF2
   811                           postinc0	equ	0xFEE
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           indf2	equ	0xFDF
   815                           fsr2h	equ	0xFDA
   816                           fsr2l	equ	0xFD9
   817                           status	equ	0xFD8
   818                           
   819 ;; *************** function ___lwtoft *****************
   820 ;; Defined at:
   821 ;;		line 28 in file "/opt/microchip/xc8/v1.40/sources/common/lwtoft.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  c               2   23[COMRAM] unsigned int 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  3   23[COMRAM] float 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         3       0       0       0       0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0
   838 ;;      Totals:         3       0       0       0       0       0       0       0       0
   839 ;;Total ram usage:        3 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		___ftpack
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text3
   850  0005EA                     __ptext3:
   851                           	opt stack 0
   852  0005EA                     ___lwtoft:
   853                           	opt stack 28
   854                           
   855                           ;incstack = 0
   856  0005EA  C018  F010         	movff	___lwtoft@c,___ftpack@arg
   857  0005EE  C019  F011         	movff	___lwtoft@c+1,___ftpack@arg+1
   858  0005F2  6A12               	clrf	___ftpack@arg+2,c
   859  0005F4  0E8E               	movlw	142
   860  0005F6  6E13               	movwf	___ftpack@exp,c
   861  0005F8  0E00               	movlw	0
   862  0005FA  6E14               	movwf	___ftpack@sign,c
   863  0005FC  EC3C  F002         	call	___ftpack	;wreg free
   864  000600  C010  F018         	movff	?___ftpack,?___lwtoft
   865  000604  C011  F019         	movff	?___ftpack+1,?___lwtoft+1
   866  000608  C012  F01A         	movff	?___ftpack+2,?___lwtoft+2
   867  00060C  0012               	return	
   868  00060E                     __end_of___lwtoft:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           intcon	equ	0xFF2
   875                           postinc0	equ	0xFEE
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           indf2	equ	0xFDF
   879                           fsr2h	equ	0xFDA
   880                           fsr2l	equ	0xFD9
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function ___fttol *****************
   884 ;; Defined at:
   885 ;;		line 44 in file "/opt/microchip/xc8/v1.40/sources/common/fttol.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  f1              3   41[COMRAM] float 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  lval            4   51[COMRAM] unsigned long 
   890 ;;  exp1            1   55[COMRAM] unsigned char 
   891 ;;  sign1           1   50[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  4   41[COMRAM] long 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         4       0       0       0       0       0       0       0       0
   902 ;;      Locals:         6       0       0       0       0       0       0       0       0
   903 ;;      Temps:          5       0       0       0       0       0       0       0       0
   904 ;;      Totals:        15       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:       15 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text4
   916  0001B2                     __ptext4:
   917                           	opt stack 0
   918  0001B2                     ___fttol:
   919                           	opt stack 29
   920                           
   921                           ;incstack = 0
   922  0001B2  C02C  F02E         	movff	___fttol@f1+2,??___fttol
   923  0001B6  6A2F               	clrf	(??___fttol+1)& (0+255),c
   924  0001B8  6A30               	clrf	(??___fttol+2)& (0+255),c
   925  0001BA  342B               	rlcf	___fttol@f1+1,w,c
   926  0001BC  362E               	rlcf	??___fttol& (0+255),f,c
   927  0001BE  E301               	bnc	u491
   928  0001C0  802F               	bsf	(??___fttol+1)& (0+255),0,c
   929  0001C2                     u491:
   930  0001C2  502E               	movf	??___fttol,w,c
   931  0001C4  6E38               	movwf	___fttol@exp1,c
   932  0001C6  5038               	movf	___fttol@exp1,w,c
   933  0001C8  A4D8               	btfss	status,2,c
   934  0001CA  D009               	goto	l1122
   935  0001CC  0E00               	movlw	0
   936  0001CE  6E2A               	movwf	?___fttol,c
   937  0001D0  0E00               	movlw	0
   938  0001D2  6E2B               	movwf	?___fttol+1,c
   939  0001D4  0E00               	movlw	0
   940  0001D6  6E2C               	movwf	?___fttol+2,c
   941  0001D8  0E00               	movlw	0
   942  0001DA  6E2D               	movwf	?___fttol+3,c
   943  0001DC  0012               	return	
   944  0001DE                     l1122:
   945  0001DE  0E17               	movlw	23
   946  0001E0  6E2E               	movwf	??___fttol& (0+255),c
   947  0001E2  C02A  F02F         	movff	___fttol@f1,??___fttol+1
   948  0001E6  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
   949  0001EA  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
   950  0001EE  282E               	incf	??___fttol,w,c
   951  0001F0  6E32               	movwf	(??___fttol+4)& (0+255),c
   952  0001F2  D004               	goto	u510
   953  0001F4                     u515:
   954  0001F4  90D8               	bcf	status,0,c
   955  0001F6  3231               	rrcf	??___fttol+3,f,c
   956  0001F8  3230               	rrcf	??___fttol+2,f,c
   957  0001FA  322F               	rrcf	??___fttol+1,f,c
   958  0001FC                     u510:
   959  0001FC  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
   960  0001FE  D7FA               	goto	u515
   961  000200  502F               	movf	??___fttol+1,w,c
   962  000202  6E33               	movwf	___fttol@sign1,c
   963  000204  8E2B               	bsf	___fttol@f1+1,7,c
   964  000206  0EFF               	movlw	255
   965  000208  162A               	andwf	___fttol@f1,f,c
   966  00020A  0EFF               	movlw	255
   967  00020C  162B               	andwf	___fttol@f1+1,f,c
   968  00020E  0E00               	movlw	0
   969  000210  162C               	andwf	___fttol@f1+2,f,c
   970  000212  502A               	movf	___fttol@f1,w,c
   971  000214  6E34               	movwf	___fttol@lval,c
   972  000216  502B               	movf	___fttol@f1+1,w,c
   973  000218  6E35               	movwf	___fttol@lval+1,c
   974  00021A  502C               	movf	___fttol@f1+2,w,c
   975  00021C  6E36               	movwf	___fttol@lval+2,c
   976  00021E  6A37               	clrf	___fttol@lval+3,c
   977  000220  0E8E               	movlw	142
   978  000222  5E38               	subwf	___fttol@exp1,f,c
   979  000224  AE38               	btfss	___fttol@exp1,7,c
   980  000226  D016               	goto	l1144
   981  000228  5038               	movf	___fttol@exp1,w,c
   982  00022A  0A80               	xorlw	128
   983  00022C  0F8F               	addlw	143
   984  00022E  B0D8               	btfsc	status,0,c
   985  000230  D009               	goto	l1140
   986  000232  0E00               	movlw	0
   987  000234  6E2A               	movwf	?___fttol,c
   988  000236  0E00               	movlw	0
   989  000238  6E2B               	movwf	?___fttol+1,c
   990  00023A  0E00               	movlw	0
   991  00023C  6E2C               	movwf	?___fttol+2,c
   992  00023E  0E00               	movlw	0
   993  000240  6E2D               	movwf	?___fttol+3,c
   994  000242  0012               	return	
   995  000244                     l1140:
   996  000244  90D8               	bcf	status,0,c
   997  000246  3237               	rrcf	___fttol@lval+3,f,c
   998  000248  3236               	rrcf	___fttol@lval+2,f,c
   999  00024A  3235               	rrcf	___fttol@lval+1,f,c
  1000  00024C  3234               	rrcf	___fttol@lval,f,c
  1001  00024E  3E38               	incfsz	___fttol@exp1,f,c
  1002  000250  D7F9               	goto	l1140
  1003  000252  D015               	goto	l1154
  1004  000254                     l1144:
  1005  000254  0E17               	movlw	23
  1006  000256  6438               	cpfsgt	___fttol@exp1,c
  1007  000258  D00F               	goto	l1152
  1008  00025A  0E00               	movlw	0
  1009  00025C  6E2A               	movwf	?___fttol,c
  1010  00025E  0E00               	movlw	0
  1011  000260  6E2B               	movwf	?___fttol+1,c
  1012  000262  0E00               	movlw	0
  1013  000264  6E2C               	movwf	?___fttol+2,c
  1014  000266  0E00               	movlw	0
  1015  000268  6E2D               	movwf	?___fttol+3,c
  1016  00026A  0012               	return	
  1017  00026C                     l1150:
  1018  00026C  90D8               	bcf	status,0,c
  1019  00026E  3634               	rlcf	___fttol@lval,f,c
  1020  000270  3635               	rlcf	___fttol@lval+1,f,c
  1021  000272  3636               	rlcf	___fttol@lval+2,f,c
  1022  000274  3637               	rlcf	___fttol@lval+3,f,c
  1023  000276  0638               	decf	___fttol@exp1,f,c
  1024  000278                     l1152:
  1025  000278  5038               	movf	___fttol@exp1,w,c
  1026  00027A  A4D8               	btfss	status,2,c
  1027  00027C  D7F7               	goto	l1150
  1028  00027E                     l1154:
  1029  00027E  5033               	movf	___fttol@sign1,w,c
  1030  000280  B4D8               	btfsc	status,2,c
  1031  000282  D008               	goto	l1158
  1032  000284  1E37               	comf	___fttol@lval+3,f,c
  1033  000286  1E36               	comf	___fttol@lval+2,f,c
  1034  000288  1E35               	comf	___fttol@lval+1,f,c
  1035  00028A  6C34               	negf	___fttol@lval,c
  1036  00028C  0E00               	movlw	0
  1037  00028E  2235               	addwfc	___fttol@lval+1,f,c
  1038  000290  2236               	addwfc	___fttol@lval+2,f,c
  1039  000292  2237               	addwfc	___fttol@lval+3,f,c
  1040  000294                     l1158:
  1041  000294  C034  F02A         	movff	___fttol@lval,?___fttol
  1042  000298  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1043  00029C  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1044  0002A0  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1045  0002A4  0012               	return	
  1046  0002A6                     __end_of___fttol:
  1047                           	opt stack 0
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           intcon	equ	0xFF2
  1053                           postinc0	equ	0xFEE
  1054                           postdec1	equ	0xFE5
  1055                           fsr1l	equ	0xFE1
  1056                           indf2	equ	0xFDF
  1057                           fsr2h	equ	0xFDA
  1058                           fsr2l	equ	0xFD9
  1059                           status	equ	0xFD8
  1060                           
  1061 ;; *************** function ___ftmul *****************
  1062 ;; Defined at:
  1063 ;;		line 62 in file "/opt/microchip/xc8/v1.40/sources/common/ftmul.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  f1              3   26[COMRAM] float 
  1066 ;;  f2              3   29[COMRAM] float 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1069 ;;  sign            1   40[COMRAM] unsigned char 
  1070 ;;  cntr            1   39[COMRAM] unsigned char 
  1071 ;;  exp             1   35[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  3   26[COMRAM] float 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         6       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1084 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:       15 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    2
  1088 ;; This function calls:
  1089 ;;		___ftpack
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text5
  1096  0002A6                     __ptext5:
  1097                           	opt stack 0
  1098  0002A6                     ___ftmul:
  1099                           	opt stack 28
  1100                           
  1101                           ;incstack = 0
  1102  0002A6  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1103  0002AA  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1104  0002AC  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1105  0002AE  341C               	rlcf	___ftmul@f1+1,w,c
  1106  0002B0  3621               	rlcf	??___ftmul& (0+255),f,c
  1107  0002B2  E301               	bnc	u431
  1108  0002B4  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1109  0002B6                     u431:
  1110  0002B6  5021               	movf	??___ftmul,w,c
  1111  0002B8  6E24               	movwf	___ftmul@exp,c
  1112  0002BA  5024               	movf	___ftmul@exp,w,c
  1113  0002BC  A4D8               	btfss	status,2,c
  1114  0002BE  D007               	goto	l1074
  1115  0002C0  0E00               	movlw	0
  1116  0002C2  6E1B               	movwf	?___ftmul,c
  1117  0002C4  0E00               	movlw	0
  1118  0002C6  6E1C               	movwf	?___ftmul+1,c
  1119  0002C8  0E00               	movlw	0
  1120  0002CA  6E1D               	movwf	?___ftmul+2,c
  1121  0002CC  0012               	return	
  1122  0002CE                     l1074:
  1123  0002CE  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  1124  0002D2  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1125  0002D4  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1126  0002D6  341F               	rlcf	___ftmul@f2+1,w,c
  1127  0002D8  3621               	rlcf	??___ftmul& (0+255),f,c
  1128  0002DA  E301               	bnc	u451
  1129  0002DC  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1130  0002DE                     u451:
  1131  0002DE  5021               	movf	??___ftmul,w,c
  1132  0002E0  6E29               	movwf	___ftmul@sign,c
  1133  0002E2  5029               	movf	___ftmul@sign,w,c
  1134  0002E4  A4D8               	btfss	status,2,c
  1135  0002E6  D007               	goto	l1080
  1136  0002E8  0E00               	movlw	0
  1137  0002EA  6E1B               	movwf	?___ftmul,c
  1138  0002EC  0E00               	movlw	0
  1139  0002EE  6E1C               	movwf	?___ftmul+1,c
  1140  0002F0  0E00               	movlw	0
  1141  0002F2  6E1D               	movwf	?___ftmul+2,c
  1142  0002F4  0012               	return	
  1143  0002F6                     l1080:
  1144  0002F6  5029               	movf	___ftmul@sign,w,c
  1145  0002F8  0F7B               	addlw	123
  1146  0002FA  2624               	addwf	___ftmul@exp,f,c
  1147  0002FC  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  1148  000300  5020               	movf	___ftmul@f2+2,w,c
  1149  000302  1A29               	xorwf	___ftmul@sign,f,c
  1150  000304  0E80               	movlw	128
  1151  000306  1629               	andwf	___ftmul@sign,f,c
  1152  000308  8E1C               	bsf	___ftmul@f1+1,7,c
  1153  00030A  8E1F               	bsf	___ftmul@f2+1,7,c
  1154  00030C  0EFF               	movlw	255
  1155  00030E  161E               	andwf	___ftmul@f2,f,c
  1156  000310  0EFF               	movlw	255
  1157  000312  161F               	andwf	___ftmul@f2+1,f,c
  1158  000314  0E00               	movlw	0
  1159  000316  1620               	andwf	___ftmul@f2+2,f,c
  1160  000318  0E00               	movlw	0
  1161  00031A  6E25               	movwf	___ftmul@f3_as_product,c
  1162  00031C  0E00               	movlw	0
  1163  00031E  6E26               	movwf	___ftmul@f3_as_product+1,c
  1164  000320  0E00               	movlw	0
  1165  000322  6E27               	movwf	___ftmul@f3_as_product+2,c
  1166  000324  0E07               	movlw	7
  1167  000326  6E28               	movwf	___ftmul@cntr,c
  1168  000328                     l1094:
  1169  000328  A01B               	btfss	___ftmul@f1,0,c
  1170  00032A  D006               	goto	l1098
  1171  00032C  501E               	movf	___ftmul@f2,w,c
  1172  00032E  2625               	addwf	___ftmul@f3_as_product,f,c
  1173  000330  501F               	movf	___ftmul@f2+1,w,c
  1174  000332  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1175  000334  5020               	movf	___ftmul@f2+2,w,c
  1176  000336  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1177  000338                     l1098:
  1178  000338  90D8               	bcf	status,0,c
  1179  00033A  321D               	rrcf	___ftmul@f1+2,f,c
  1180  00033C  321C               	rrcf	___ftmul@f1+1,f,c
  1181  00033E  321B               	rrcf	___ftmul@f1,f,c
  1182  000340  90D8               	bcf	status,0,c
  1183  000342  361E               	rlcf	___ftmul@f2,f,c
  1184  000344  361F               	rlcf	___ftmul@f2+1,f,c
  1185  000346  3620               	rlcf	___ftmul@f2+2,f,c
  1186  000348  2E28               	decfsz	___ftmul@cntr,f,c
  1187  00034A  D7EE               	goto	l1094
  1188  00034C  0E09               	movlw	9
  1189  00034E  6E28               	movwf	___ftmul@cntr,c
  1190  000350                     l1104:
  1191  000350  A01B               	btfss	___ftmul@f1,0,c
  1192  000352  D006               	goto	l1108
  1193  000354  501E               	movf	___ftmul@f2,w,c
  1194  000356  2625               	addwf	___ftmul@f3_as_product,f,c
  1195  000358  501F               	movf	___ftmul@f2+1,w,c
  1196  00035A  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1197  00035C  5020               	movf	___ftmul@f2+2,w,c
  1198  00035E  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1199  000360                     l1108:
  1200  000360  90D8               	bcf	status,0,c
  1201  000362  321D               	rrcf	___ftmul@f1+2,f,c
  1202  000364  321C               	rrcf	___ftmul@f1+1,f,c
  1203  000366  321B               	rrcf	___ftmul@f1,f,c
  1204  000368  90D8               	bcf	status,0,c
  1205  00036A  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1206  00036C  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1207  00036E  3225               	rrcf	___ftmul@f3_as_product,f,c
  1208  000370  2E28               	decfsz	___ftmul@cntr,f,c
  1209  000372  D7EE               	goto	l1104
  1210  000374  C025  F010         	movff	___ftmul@f3_as_product,___ftpack@arg
  1211  000378  C026  F011         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1212  00037C  C027  F012         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1213  000380  C024  F013         	movff	___ftmul@exp,___ftpack@exp
  1214  000384  C029  F014         	movff	___ftmul@sign,___ftpack@sign
  1215  000388  EC3C  F002         	call	___ftpack	;wreg free
  1216  00038C  C010  F01B         	movff	?___ftpack,?___ftmul
  1217  000390  C011  F01C         	movff	?___ftpack+1,?___ftmul+1
  1218  000394  C012  F01D         	movff	?___ftpack+2,?___ftmul+2
  1219  000398  0012               	return	
  1220  00039A                     __end_of___ftmul:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           postdec1	equ	0xFE5
  1229                           fsr1l	equ	0xFE1
  1230                           indf2	equ	0xFDF
  1231                           fsr2h	equ	0xFDA
  1232                           fsr2l	equ	0xFD9
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function ___ftpack *****************
  1236 ;; Defined at:
  1237 ;;		line 62 in file "/opt/microchip/xc8/v1.40/sources/common/float.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  arg             3   15[COMRAM] unsigned um
  1240 ;;  exp             1   18[COMRAM] unsigned char 
  1241 ;;  sign            1   19[COMRAM] unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  3   15[COMRAM] float 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1253 ;;      Params:         5       0       0       0       0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1255 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1256 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1257 ;;Total ram usage:        8 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		___ftmul
  1264 ;;		___lwtoft
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text6
  1269  000478                     __ptext6:
  1270                           	opt stack 0
  1271  000478                     ___ftpack:
  1272                           	opt stack 28
  1273                           
  1274                           ;incstack = 0
  1275  000478  5013               	movf	___ftpack@exp,w,c
  1276  00047A  B4D8               	btfsc	status,2,c
  1277  00047C  D005               	goto	l1016
  1278  00047E  5010               	movf	___ftpack@arg,w,c
  1279  000480  1011               	iorwf	___ftpack@arg+1,w,c
  1280  000482  1012               	iorwf	___ftpack@arg+2,w,c
  1281  000484  A4D8               	btfss	status,2,c
  1282  000486  D00C               	goto	l1022
  1283  000488                     l1016:
  1284  000488  0E00               	movlw	0
  1285  00048A  6E10               	movwf	?___ftpack,c
  1286  00048C  0E00               	movlw	0
  1287  00048E  6E11               	movwf	?___ftpack+1,c
  1288  000490  0E00               	movlw	0
  1289  000492  6E12               	movwf	?___ftpack+2,c
  1290  000494  0012               	return	
  1291  000496                     l1020:
  1292  000496  2A13               	incf	___ftpack@exp,f,c
  1293  000498  90D8               	bcf	status,0,c
  1294  00049A  3212               	rrcf	___ftpack@arg+2,f,c
  1295  00049C  3211               	rrcf	___ftpack@arg+1,f,c
  1296  00049E  3210               	rrcf	___ftpack@arg,f,c
  1297  0004A0                     l1022:
  1298  0004A0  0E00               	movlw	0
  1299  0004A2  1410               	andwf	___ftpack@arg,w,c
  1300  0004A4  6E15               	movwf	??___ftpack& (0+255),c
  1301  0004A6  0E00               	movlw	0
  1302  0004A8  1411               	andwf	___ftpack@arg+1,w,c
  1303  0004AA  6E16               	movwf	(??___ftpack+1)& (0+255),c
  1304  0004AC  0EFE               	movlw	254
  1305  0004AE  1412               	andwf	___ftpack@arg+2,w,c
  1306  0004B0  6E17               	movwf	(??___ftpack+2)& (0+255),c
  1307  0004B2  5015               	movf	??___ftpack,w,c
  1308  0004B4  1016               	iorwf	??___ftpack+1,w,c
  1309  0004B6  1017               	iorwf	??___ftpack+2,w,c
  1310  0004B8  B4D8               	btfsc	status,2,c
  1311  0004BA  D00C               	goto	l1028
  1312  0004BC  D7EC               	goto	l1020
  1313  0004BE                     l1024:
  1314  0004BE  2A13               	incf	___ftpack@exp,f,c
  1315  0004C0  0E01               	movlw	1
  1316  0004C2  2610               	addwf	___ftpack@arg,f,c
  1317  0004C4  0E00               	movlw	0
  1318  0004C6  2211               	addwfc	___ftpack@arg+1,f,c
  1319  0004C8  0E00               	movlw	0
  1320  0004CA  2212               	addwfc	___ftpack@arg+2,f,c
  1321  0004CC  90D8               	bcf	status,0,c
  1322  0004CE  3212               	rrcf	___ftpack@arg+2,f,c
  1323  0004D0  3211               	rrcf	___ftpack@arg+1,f,c
  1324  0004D2  3210               	rrcf	___ftpack@arg,f,c
  1325  0004D4                     l1028:
  1326  0004D4  0E00               	movlw	0
  1327  0004D6  1410               	andwf	___ftpack@arg,w,c
  1328  0004D8  6E15               	movwf	??___ftpack& (0+255),c
  1329  0004DA  0E00               	movlw	0
  1330  0004DC  1411               	andwf	___ftpack@arg+1,w,c
  1331  0004DE  6E16               	movwf	(??___ftpack+1)& (0+255),c
  1332  0004E0  0EFF               	movlw	255
  1333  0004E2  1412               	andwf	___ftpack@arg+2,w,c
  1334  0004E4  6E17               	movwf	(??___ftpack+2)& (0+255),c
  1335  0004E6  5015               	movf	??___ftpack,w,c
  1336  0004E8  1016               	iorwf	??___ftpack+1,w,c
  1337  0004EA  1017               	iorwf	??___ftpack+2,w,c
  1338  0004EC  B4D8               	btfsc	status,2,c
  1339  0004EE  D006               	goto	l1032
  1340  0004F0  D7E6               	goto	l1024
  1341  0004F2                     l1030:
  1342  0004F2  0613               	decf	___ftpack@exp,f,c
  1343  0004F4  90D8               	bcf	status,0,c
  1344  0004F6  3610               	rlcf	___ftpack@arg,f,c
  1345  0004F8  3611               	rlcf	___ftpack@arg+1,f,c
  1346  0004FA  3612               	rlcf	___ftpack@arg+2,f,c
  1347  0004FC                     l1032:
  1348  0004FC  BE11               	btfsc	___ftpack@arg+1,7,c
  1349  0004FE  D003               	goto	l375
  1350  000500  0E02               	movlw	2
  1351  000502  6013               	cpfslt	___ftpack@exp,c
  1352  000504  D7F6               	goto	l1030
  1353  000506                     l375:
  1354  000506  A013               	btfss	___ftpack@exp,0,c
  1355  000508  9E11               	bcf	___ftpack@arg+1,7,c
  1356  00050A  90D8               	bcf	status,0,c
  1357  00050C  3213               	rrcf	___ftpack@exp,f,c
  1358  00050E  5013               	movf	___ftpack@exp,w,c
  1359  000510  1212               	iorwf	___ftpack@arg+2,f,c
  1360  000512  5014               	movf	___ftpack@sign,w,c
  1361  000514  A4D8               	btfss	status,2,c
  1362  000516  8E12               	bsf	___ftpack@arg+2,7,c
  1363  000518  C010  F010         	movff	___ftpack@arg,?___ftpack
  1364  00051C  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  1365  000520  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  1366  000524  0012               	return	
  1367  000526                     __end_of___ftpack:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           intcon	equ	0xFF2
  1374                           postinc0	equ	0xFEE
  1375                           postdec1	equ	0xFE5
  1376                           fsr1l	equ	0xFE1
  1377                           indf2	equ	0xFDF
  1378                           fsr2h	equ	0xFDA
  1379                           fsr2l	equ	0xFD9
  1380                           status	equ	0xFD8
  1381                           
  1382 ;; *************** function _ADC_init *****************
  1383 ;; Defined at:
  1384 ;;		line 3 in file "ADC_init.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		None
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text7
  1413  00060E                     __ptext7:
  1414                           	opt stack 0
  1415  00060E                     _ADC_init:
  1416                           	opt stack 29
  1417                           
  1418                           ;ADC_init.c: 13: ADCS0 = 0;
  1419                           
  1420                           ;incstack = 0
  1421  00060E  90C0               	bcf	4032,0,c	;volatile
  1422                           
  1423                           ;ADC_init.c: 14: ADCS1 = 1;
  1424  000610  82C0               	bsf	4032,1,c	;volatile
  1425                           
  1426                           ;ADC_init.c: 15: ADCS2 = 1;
  1427  000612  84C0               	bsf	4032,2,c	;volatile
  1428                           
  1429                           ;ADC_init.c: 18: ACQT0 = 1;
  1430  000614  86C0               	bsf	4032,3,c	;volatile
  1431                           
  1432                           ;ADC_init.c: 19: ACQT1 = 1;
  1433  000616  88C0               	bsf	4032,4,c	;volatile
  1434                           
  1435                           ;ADC_init.c: 20: ACQT2 = 1;
  1436  000618  8AC0               	bsf	4032,5,c	;volatile
  1437                           
  1438                           ;ADC_init.c: 24: ADFM = 1;
  1439  00061A  8EC0               	bsf	4032,7,c	;volatile
  1440                           
  1441                           ;ADC_init.c: 30: PCFG0 = 0;
  1442  00061C  90C1               	bcf	4033,0,c	;volatile
  1443                           
  1444                           ;ADC_init.c: 31: PCFG1 = 1;
  1445  00061E  82C1               	bsf	4033,1,c	;volatile
  1446                           
  1447                           ;ADC_init.c: 32: PCFG2 = 0;
  1448  000620  94C1               	bcf	4033,2,c	;volatile
  1449                           
  1450                           ;ADC_init.c: 33: PCFG3 = 1;
  1451  000622  86C1               	bsf	4033,3,c	;volatile
  1452                           
  1453                           ;ADC_init.c: 39: ADON = 1;
  1454  000624  80C2               	bsf	4034,0,c	;volatile
  1455  000626  0012               	return		;funcret
  1456  000628                     __end_of_ADC_init:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           intcon	equ	0xFF2
  1463                           postinc0	equ	0xFEE
  1464                           postdec1	equ	0xFE5
  1465                           fsr1l	equ	0xFE1
  1466                           indf2	equ	0xFDF
  1467                           fsr2h	equ	0xFDA
  1468                           fsr2l	equ	0xFD9
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _CHECK *****************
  1472 ;; Defined at:
  1473 ;;		line 128 in file "main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1489 ;;      Temps:         15       0       0       0       0       0       0       0       0
  1490 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1491 ;;Total ram usage:       15 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		Interrupt level 2
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	intcode
  1501  000008                     __pintcode:
  1502                           	opt stack 0
  1503  000008                     _CHECK:
  1504                           	opt stack 28
  1505                           
  1506                           ;incstack = 0
  1507  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1508  00000A  EDCD  F001         	call	int_func,f	;refresh shadow registers
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           intcon	equ	0xFF2
  1514                           postinc0	equ	0xFEE
  1515                           postdec1	equ	0xFE5
  1516                           fsr1l	equ	0xFE1
  1517                           indf2	equ	0xFDF
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8
  1521                           
  1522                           	psect	intcode_body
  1523  00039A                     __pintcode_body:
  1524                           	opt stack 28
  1525  00039A                     int_func:
  1526                           	opt stack 28
  1527  00039A  0006               	pop		; remove dummy address from shadow register refresh
  1528  00039C  CFFA F002          	movff	pclath,??_CHECK+1
  1529  0003A0  CFFB F003          	movff	pclatu,??_CHECK+2
  1530  0003A4  CFE9 F004          	movff	fsr0l,??_CHECK+3
  1531  0003A8  CFEA F005          	movff	fsr0h,??_CHECK+4
  1532  0003AC  CFE1 F006          	movff	fsr1l,??_CHECK+5
  1533  0003B0  CFE2 F007          	movff	fsr1h,??_CHECK+6
  1534  0003B4  CFD9 F008          	movff	fsr2l,??_CHECK+7
  1535  0003B8  CFDA F009          	movff	fsr2h,??_CHECK+8
  1536  0003BC  CFF3 F00A          	movff	prodl,??_CHECK+9
  1537  0003C0  CFF4 F00B          	movff	prodh,??_CHECK+10
  1538  0003C4  CFF6 F00C          	movff	tblptrl,??_CHECK+11
  1539  0003C8  CFF7 F00D          	movff	tblptrh,??_CHECK+12
  1540  0003CC  CFF8 F00E          	movff	tblptru,??_CHECK+13
  1541  0003D0  CFF5 F00F          	movff	tablat,??_CHECK+14
  1542                           
  1543                           ;main.c: 134: if (TMR0IF == 1)
  1544  0003D4  A4F2               	btfss	intcon,2,c	;volatile
  1545  0003D6  D032               	goto	i2l73
  1546                           
  1547                           ;main.c: 135: {
  1548                           ;main.c: 136: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
  1549  0003D8  0E15               	movlw	21
  1550  0003DA  6ED7               	movwf	4055,c	;volatile
  1551  0003DC  0EA0               	movlw	160
  1552  0003DE  6ED6               	movwf	4054,c	;volatile
  1553                           
  1554                           ;main.c: 138: RB0 = 1;
  1555  0003E0  8081               	bsf	3969,0,c	;volatile
  1556                           
  1557                           ;main.c: 139: RB1 = 1;
  1558  0003E2  8281               	bsf	3969,1,c	;volatile
  1559                           
  1560                           ;main.c: 140: RB2 = 1;
  1561  0003E4  8481               	bsf	3969,2,c	;volatile
  1562                           
  1563                           ;main.c: 141: RB3 = 1;
  1564  0003E6  8681               	bsf	3969,3,c	;volatile
  1565                           
  1566                           ;main.c: 142: RB4 = 1;
  1567  0003E8  8881               	bsf	3969,4,c	;volatile
  1568                           
  1569                           ;main.c: 143: _delay((unsigned long)((1000)*(48000000/4000000.0)));
  1570  0003EA  0E10               	movlw	16
  1571  0003EC  6E01               	movwf	??_CHECK& (0+255),c
  1572  0003EE  0E94               	movlw	148
  1573  0003F0                     i2u57_47:
  1574  0003F0  2EE8               	decfsz	wreg,f,c
  1575  0003F2  D7FE               	bra	i2u57_47
  1576  0003F4  2E01               	decfsz	??_CHECK& (0+255),f,c
  1577  0003F6  D7FC               	bra	i2u57_47
  1578  0003F8  D000               	nop2	
  1579                           
  1580                           ;main.c: 147: for(count_deg=0;count_deg<=180;count_deg++)
  1581  0003FA  0E00               	movlw	0
  1582  0003FC  6E43               	movwf	_count_deg,c
  1583  0003FE                     i2l984:
  1584  0003FE  0EB4               	movlw	180
  1585  000400  6443               	cpfsgt	_count_deg,c
  1586  000402  D001               	goto	i2l988
  1587  000404  D01A               	goto	i2l67
  1588  000406                     i2l988:
  1589                           
  1590                           ;main.c: 148: {
  1591                           ;main.c: 150: if(deg0 == count_deg) RB0 = 0;
  1592  000406  5043               	movf	_count_deg,w,c
  1593  000408  183E               	xorwf	_deg0,w,c
  1594  00040A  B4D8               	btfsc	status,2,c
  1595  00040C  9081               	bcf	3969,0,c	;volatile
  1596                           
  1597                           ;main.c: 151: if(deg1 == count_deg) RB1 = 0;
  1598  00040E  5043               	movf	_count_deg,w,c
  1599  000410  183F               	xorwf	_deg1,w,c
  1600  000412  B4D8               	btfsc	status,2,c
  1601  000414  9281               	bcf	3969,1,c	;volatile
  1602                           
  1603                           ;main.c: 152: if(deg2 == count_deg) RB2 = 0;
  1604  000416  5043               	movf	_count_deg,w,c
  1605  000418  1840               	xorwf	_deg2,w,c
  1606  00041A  B4D8               	btfsc	status,2,c
  1607  00041C  9481               	bcf	3969,2,c	;volatile
  1608                           
  1609                           ;main.c: 153: if(deg3 == count_deg) RB3 = 0;
  1610  00041E  5043               	movf	_count_deg,w,c
  1611  000420  1841               	xorwf	_deg3,w,c
  1612  000422  B4D8               	btfsc	status,2,c
  1613  000424  9681               	bcf	3969,3,c	;volatile
  1614                           
  1615                           ;main.c: 154: if(deg4 == count_deg) RB4 = 0;
  1616  000426  5043               	movf	_count_deg,w,c
  1617  000428  1842               	xorwf	_deg4,w,c
  1618  00042A  B4D8               	btfsc	status,2,c
  1619  00042C  9881               	bcf	3969,4,c	;volatile
  1620                           
  1621                           ;main.c: 157: _delay(40);
  1622  00042E  0E0D               	movlw	13
  1623  000430                     i2u58_47:
  1624  000430  2EE8               	decfsz	wreg,f,c
  1625  000432  D7FE               	bra	i2u58_47
  1626  000434  F000               	nop	
  1627  000436  2A43               	incf	_count_deg,f,c
  1628  000438  D7E2               	goto	i2l984
  1629  00043A                     i2l67:
  1630                           
  1631                           ;main.c: 163: }
  1632                           ;main.c: 170: TMR0IF = 0;
  1633  00043A  94F2               	bcf	intcon,2,c	;volatile
  1634  00043C                     i2l73:
  1635  00043C  C00F  FFF5         	movff	??_CHECK+14,tablat
  1636  000440  C00E  FFF8         	movff	??_CHECK+13,tblptru
  1637  000444  C00D  FFF7         	movff	??_CHECK+12,tblptrh
  1638  000448  C00C  FFF6         	movff	??_CHECK+11,tblptrl
  1639  00044C  C00B  FFF4         	movff	??_CHECK+10,prodh
  1640  000450  C00A  FFF3         	movff	??_CHECK+9,prodl
  1641  000454  C009  FFDA         	movff	??_CHECK+8,fsr2h
  1642  000458  C008  FFD9         	movff	??_CHECK+7,fsr2l
  1643  00045C  C007  FFE2         	movff	??_CHECK+6,fsr1h
  1644  000460  C006  FFE1         	movff	??_CHECK+5,fsr1l
  1645  000464  C005  FFEA         	movff	??_CHECK+4,fsr0h
  1646  000468  C004  FFE9         	movff	??_CHECK+3,fsr0l
  1647  00046C  C003  FFFB         	movff	??_CHECK+2,pclatu
  1648  000470  C002  FFFA         	movff	??_CHECK+1,pclath
  1649  000474  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1650  000476  0011               	retfie		f
  1651  000478                     __end_of_CHECK:
  1652                           	opt stack 0
  1653  0000                     pclatu	equ	0xFFB
  1654                           pclath	equ	0xFFA
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           postinc0	equ	0xFEE
  1663                           fsr0h	equ	0xFEA
  1664                           fsr0l	equ	0xFE9
  1665                           wreg	equ	0xFE8
  1666                           postdec1	equ	0xFE5
  1667                           fsr1h	equ	0xFE2
  1668                           fsr1l	equ	0xFE1
  1669                           indf2	equ	0xFDF
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           pclatu	equ	0xFFB
  1674                           pclath	equ	0xFFA
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           intcon	equ	0xFF2
  1682                           postinc0	equ	0xFEE
  1683                           fsr0h	equ	0xFEA
  1684                           fsr0l	equ	0xFE9
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           indf2	equ	0xFDF
  1690                           fsr2h	equ	0xFDA
  1691                           fsr2l	equ	0xFD9
  1692                           status	equ	0xFD8
  1693                           
  1694                           	psect	rparam
  1695  0000                     pclatu	equ	0xFFB
  1696                           pclath	equ	0xFFA
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           postinc0	equ	0xFEE
  1705                           fsr0h	equ	0xFEA
  1706                           fsr0l	equ	0xFE9
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           indf2	equ	0xFDF
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8
  1715                           
  1716                           	psect	temp
  1717  000044                     btemp:
  1718                           	opt stack 0
  1719  000044                     	ds	1
  1720  0000                     int$flags	set	btemp
  1721                           pclatu	equ	0xFFB
  1722                           pclath	equ	0xFFA
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           intcon	equ	0xFF2
  1730                           postinc0	equ	0xFEE
  1731                           fsr0h	equ	0xFEA
  1732                           fsr0l	equ	0xFE9
  1733                           wreg	equ	0xFE8
  1734                           postdec1	equ	0xFE5
  1735                           fsr1h	equ	0xFE2
  1736                           fsr1l	equ	0xFE1
  1737                           indf2	equ	0xFDF
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         1
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    start_convert@pval2	PTR unsigned char  size(2) Largest target is 2
		 -> start_convert@val(COMRAM[2]), 

    start_convert@pval1	PTR unsigned char  size(2) Largest target is 2
		 -> start_convert@val(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _CHECK in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CHECK in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CHECK in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CHECK in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CHECK in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CHECK in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CHECK in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CHECK in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CHECK in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6104
                           _ADC_init
                            ___ftmul
                            ___fttol
                           ___lwtoft
                      _start_convert
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_convert                                        9     7      2     138
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2334
                                             23 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     572
                                             41 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3060
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1992
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _CHECK                                               15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _start_convert
   _timer0_init

 _CHECK (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      43       1       71.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      20        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Feb 10 21:40:26 2017

            __CFG_BOR$ON 000000       start_convert@pval1 0015       start_convert@pval2 0012  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l120 0540  
                    l122 0544                      l131 0594                      l123 054A  
                    l124 0554                      l125 055A                      l128 058E  
                    l375 0506             __CFG_CPB$OFF 000000                      _RB0 007C08  
                    _RB1 007C09                      _RB2 007C0A                      _RB3 007C0B  
                    _RB4 007C0C                      u510 01FC                      u431 02B6  
           __CFG_CPD$OFF 000000                      u451 02DE                      u515 01F4  
                    u491 01C2                      _PSA 007EAB                      _val 003C  
                    wreg 000FE8             __CFG_LVP$OFF 000000     start_convert@channel 0014  
           __CFG_WDT$OFF 000000                     l1020 0496                     l1030 04F2  
                   l1022 04A0                     l1032 04FC                     l1024 04BE  
                   l1016 0488                     l1104 0350                     l1122 01DE  
                   l1028 04D4                     l1108 0360                     l1140 0244  
                   l1060 056C                     l1150 026C                     l1054 0562  
                   l1080 02F6                     l1152 0278                     l1144 0254  
                   l1074 02CE                     l1154 027E                     l1094 0328  
                   l1158 0294                     l1190 003E                     l1098 0338  
                   _ADIF 007CF6                     _ADFM 007E07                     _ADON 007E10  
                   _CHS0 007E12                     _CHS1 007E13                     _CHS2 007E14  
                   _CHS3 007E15                     _T0CS 007EAD                     _IPEN 007E87  
                   i2l73 043C                     i2l67 043A                     _deg0 003E  
                   _deg1 003F                     _deg2 0040                     _deg3 0041  
                   _deg4 0042                     _main 0012             ___ftpack@arg 0010  
           ___ftpack@exp 0013                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0044  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
       __end_of_ADC_init 0628            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___ftmul@cntr 0028             ___param_bank 000000             ___ftmul@sign 0029  
           ___fttol@exp1 0038             ___fttol@lval 0034            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    _ADCS0 007E00                    _ADCS1 007E01  
                  _ADCS2 007E02                    ?_main 0001                    _ACQT0 007E03  
                  _ACQT1 007E04                    _ACQT2 007E05                    _CHECK 0008  
        __end_of___ftmul 039A          __end_of___fttol 02A6                    _T0PS0 007EA8  
                  _T0PS1 007EA9                    _T0PS2 007EAA                    _PCFG0 007E08  
                  _PCFG1 007E09                    _PCFG2 007E0A                    _PCFG3 007E0B  
                  i2l984 03FE                    i2l988 0406                    _TMR0H 000FD7  
                  _TMR0L 000FD6            __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          _start_convert 0526            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___ftpack@sign 0014  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 05BA             __end_of_main 01B2  
                 ??_main 0039            ___fttol@sign1 0033                   ?_CHECK 0001  
          __activetblptr 000002           ?_start_convert 0010                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _T08BIT 007EAE         __end_of___ftpack 0526  
       __end_of___lwtoft 060E                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR0ON 007EAF                   _TRISB0 007C98                   _TRISB1 007C99  
                 _TRISB2 007C9A                   _TRISB3 007C9B                   _TRISB4 007C9C  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___ftmul 0021  
           ?_timer0_init 0001                ??___fttol 002E    ___ftmul@f3_as_product 0025  
           __pdataCOMRAM 003E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ?_ADC_init 0001               __accesstop 0060  
__end_of__initialization 05DC          __CFG_PBADEN$OFF 000000            __end_of_CHECK 0478  
          ___rparam_used 000001               ___ftmul@f1 001B               ___ftmul@f2 001E  
             ___fttol@f1 002A           __pcstackCOMRAM 0001               ___lwtoft@c 0018  
                ??_CHECK 0001          ??_start_convert 0012               ??_ADC_init 0010  
             __pnvCOMRAM 0039                ?___ftpack 0010                ?___lwtoft 0018  
                i2u57_47 03F0                  i2u58_47 0430          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___ftmul 02A6  
                ___fttol 01B2                  __pcinit 05BA               ??___ftpack 0015  
                __ramtop 0800     __size_of_timer0_init 0010                  __ptext0 0012  
                __ptext1 0628                  __ptext2 0526                  __ptext3 05EA  
                __ptext4 01B2                  __ptext5 02A6                  __ptext6 0478  
                __ptext7 060E               ??___lwtoft 001B           __pintcode_body 039A  
   end_of_initialization 05DC            __Lmediumconst 0000                  int_func 039A  
                postdec1 000FE5                  postinc0 000FEE        __size_of_ADC_init 001A  
            ___ftmul@exp 0024            __pidataCOMRAM 0638      start_initialization 05BA  
       __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE    __end_of_start_convert 05BA  
            __pbssCOMRAM 0043        __size_of___lwtoft 0024                __pintcode 0008  
               ?___ftmul 001B                 ?___fttol 002A           __size_of_CHECK 0470  
              _count_deg 0043                 _ADC_init 060E                _val_inter 0039  
       __CFG_WDTPS$32768 000000            ??_timer0_init 0010               _ADCON0bits 000FC2  
       start_convert@val 0017                copy_data0 05CE                 __Hrparam 0000  
               __Lrparam 0000         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___ftpack 0478                 ___lwtoft 05EA      __end_of_timer0_init 0638  
          __size_of_main 01A0                 int$flags 0044    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000              _timer0_init 0628  
     __CFG_FOSC$HSPLL_HS 000000   __size_of_start_convert 0094  
