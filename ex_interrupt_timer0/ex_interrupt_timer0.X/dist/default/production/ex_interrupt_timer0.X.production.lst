

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Feb  8 22:47:24 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.40
    18                           ; Generated 01/12/2016 GMT
    19                           ; 
    20                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000142                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _deg0
    57  000142  0F                 	db	15
    58                           
    59                           ;initializer for _deg1
    60  000143  1E                 	db	30
    61                           
    62                           ;initializer for _deg2
    63  000144  3C                 	db	60
    64                           
    65                           ;initializer for _deg3
    66  000145  5A                 	db	90
    67                           
    68                           ;initializer for _deg4
    69  000146  78                 	db	120
    70  0000                     _INTCONbits	set	4082
    71  0000                     _TMR0H	set	4055
    72  0000                     _TMR0L	set	4054
    73  0000                     _IPEN	set	32391
    74  0000                     _PSA	set	32427
    75  0000                     _RB0	set	31752
    76  0000                     _RB1	set	31753
    77  0000                     _RB2	set	31754
    78  0000                     _RB3	set	31755
    79  0000                     _RB4	set	31756
    80  0000                     _T08BIT	set	32430
    81  0000                     _T0CS	set	32429
    82  0000                     _T0PS0	set	32424
    83  0000                     _T0PS1	set	32425
    84  0000                     _T0PS2	set	32426
    85  0000                     _TMR0IE	set	32661
    86  0000                     _TMR0IF	set	32658
    87  0000                     _TMR0ON	set	32431
    88  0000                     _TRISB0	set	31896
    89  0000                     _TRISB1	set	31897
    90  0000                     _TRISB2	set	31898
    91  0000                     _TRISB3	set	31899
    92  0000                     _TRISB4	set	31900
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  0000EE                     __pcinit:
    98                           	opt stack 0
    99  0000EE                     start_initialization:
   100                           	opt stack 0
   101  0000EE                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Initialize objects allocated to COMRAM (5 bytes)
   105                           ; load TBLPTR registers with __pidataCOMRAM
   106  0000EE  0E42               	movlw	low __pidataCOMRAM
   107  0000F0  6EF6               	movwf	tblptrl,c
   108  0000F2  0E01               	movlw	high __pidataCOMRAM
   109  0000F4  6EF7               	movwf	tblptrh,c
   110  0000F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   111  0000F8  6EF8               	movwf	tblptru,c
   112  0000FA  EE00  F010         	lfsr	0,__pdataCOMRAM
   113  0000FE  EE10 F005          	lfsr	1,5
   114  000102                     copy_data0:
   115  000102  0009               	tblrd		*+
   116  000104  CFF5 FFEE          	movff	tablat,postinc0
   117  000108  50E5               	movf	postdec1,w,c
   118  00010A  50E1               	movf	fsr1l,w,c
   119  00010C  E1FA               	bnz	copy_data0
   120                           
   121                           ; Clear objects allocated to COMRAM (1 bytes)
   122  00010E  6A15               	clrf	__pbssCOMRAM& (0+255),c
   123  000110                     end_of_initialization:
   124                           	opt stack 0
   125  000110                     __end_of__initialization:
   126                           	opt stack 0
   127  000110  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   128  000112  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   129  000114  0100               	movlb	0
   130  000116  EF8D  F000         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           postdec1	equ	0xFE5
   137                           fsr1l	equ	0xFE1
   138                           
   139                           	psect	bssCOMRAM
   140  000015                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000015                     _count_deg:
   143                           	opt stack 0
   144  000015                     	ds	1
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           postinc0	equ	0xFEE
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	dataCOMRAM
   154  000010                     __pdataCOMRAM:
   155                           	opt stack 0
   156  000010                     _deg0:
   157                           	opt stack 0
   158  000010                     	ds	1
   159  000011                     _deg1:
   160                           	opt stack 0
   161  000011                     	ds	1
   162  000012                     _deg2:
   163                           	opt stack 0
   164  000012                     	ds	1
   165  000013                     _deg3:
   166                           	opt stack 0
   167  000013                     	ds	1
   168  000014                     _deg4:
   169                           	opt stack 0
   170  000014                     	ds	1
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           tblptrl	equ	0xFF6
   174                           tablat	equ	0xFF5
   175                           postinc0	equ	0xFEE
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	cstackCOMRAM
   180  000001                     __pcstackCOMRAM:
   181                           	opt stack 0
   182  000001                     ??_CHECK:
   183                           
   184                           ; 1 bytes @ 0x0
   185  000001                     	ds	15
   186  000010                     tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           ; 1 bytes @ 0xF
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 45 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  count_deg       1    0        unsigned char 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, status,2
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   214 ;;      Params:         0       0       0       0       0       0       0       0       0
   215 ;;      Locals:         0       0       0       0       0       0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0       0       0
   217 ;;      Totals:         0       0       0       0       0       0       0       0       0
   218 ;;Total ram usage:        0 bytes
   219 ;; Hardware stack levels required when called:    1
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text0
   228  00011A                     __ptext0:
   229                           	opt stack 0
   230  00011A                     _main:
   231                           	opt stack 30
   232                           
   233                           ;main.c: 47: unsigned char count_deg;
   234                           ;main.c: 49: TRISB0 = 0;
   235                           
   236                           ;incstack = 0
   237  00011A  9093               	bcf	3987,0,c	;volatile
   238                           
   239                           ;main.c: 50: TRISB1 = 0;
   240  00011C  9293               	bcf	3987,1,c	;volatile
   241                           
   242                           ;main.c: 51: TRISB2 = 0;
   243  00011E  9493               	bcf	3987,2,c	;volatile
   244                           
   245                           ;main.c: 52: TRISB3 = 0;
   246  000120  9693               	bcf	3987,3,c	;volatile
   247                           
   248                           ;main.c: 53: TRISB4 = 0;
   249  000122  9893               	bcf	3987,4,c	;volatile
   250                           
   251                           ;main.c: 58: IPEN = 0;
   252  000124  9ED0               	bcf	4048,7,c	;volatile
   253                           
   254                           ;main.c: 65: INTCONbits.GIE = 1;
   255  000126  8EF2               	bsf	intcon,7,c	;volatile
   256                           
   257                           ;main.c: 70: TMR0IE = 1;
   258  000128  8AF2               	bsf	intcon,5,c	;volatile
   259                           
   260                           ;main.c: 76: T08BIT = 0;
   261  00012A  9CD5               	bcf	4053,6,c	;volatile
   262                           
   263                           ;main.c: 82: T0CS = 0;
   264  00012C  9AD5               	bcf	4053,5,c	;volatile
   265                           
   266                           ;main.c: 94: PSA = 0;
   267  00012E  96D5               	bcf	4053,3,c	;volatile
   268                           
   269                           ;main.c: 107: T0PS0 = 1;
   270  000130  80D5               	bsf	4053,0,c	;volatile
   271                           
   272                           ;main.c: 108: T0PS1 = 0;
   273  000132  92D5               	bcf	4053,1,c	;volatile
   274                           
   275                           ;main.c: 109: T0PS2 = 0;
   276  000134  94D5               	bcf	4053,2,c	;volatile
   277                           
   278                           ;main.c: 126: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
   279  000136  0E15               	movlw	21
   280  000138  6ED7               	movwf	4055,c	;volatile
   281  00013A  0EA0               	movlw	160
   282  00013C  6ED6               	movwf	4054,c	;volatile
   283                           
   284                           ;main.c: 135: TMR0ON = 1;
   285  00013E  8ED5               	bsf	4053,7,c	;volatile
   286  000140                     l63:
   287  000140  D7FF               	goto	l63
   288  000142                     __end_of_main:
   289                           	opt stack 0
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           intcon	equ	0xFF2
   295                           postinc0	equ	0xFEE
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299 ;; *************** function _CHECK *****************
   300 ;; Defined at:
   301 ;;		line 144 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:         15       0       0       0       0       0       0       0       0
   318 ;;      Totals:        15       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:       15 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		Interrupt level 2
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	intcode
   329  000008                     __pintcode:
   330                           	opt stack 0
   331  000008                     _CHECK:
   332                           	opt stack 30
   333                           
   334                           ;incstack = 0
   335  000008  8216               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   336  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           intcon	equ	0xFF2
   342                           postinc0	equ	0xFEE
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346                           	psect	intcode_body
   347  000012                     __pintcode_body:
   348                           	opt stack 30
   349  000012                     int_func:
   350                           	opt stack 30
   351  000012  0006               	pop		; remove dummy address from shadow register refresh
   352  000014  CFFA F002          	movff	pclath,??_CHECK+1
   353  000018  CFFB F003          	movff	pclatu,??_CHECK+2
   354  00001C  CFE9 F004          	movff	fsr0l,??_CHECK+3
   355  000020  CFEA F005          	movff	fsr0h,??_CHECK+4
   356  000024  CFE1 F006          	movff	fsr1l,??_CHECK+5
   357  000028  CFE2 F007          	movff	fsr1h,??_CHECK+6
   358  00002C  CFD9 F008          	movff	fsr2l,??_CHECK+7
   359  000030  CFDA F009          	movff	fsr2h,??_CHECK+8
   360  000034  CFF3 F00A          	movff	prodl,??_CHECK+9
   361  000038  CFF4 F00B          	movff	prodh,??_CHECK+10
   362  00003C  CFF6 F00C          	movff	tblptrl,??_CHECK+11
   363  000040  CFF7 F00D          	movff	tblptrh,??_CHECK+12
   364  000044  CFF8 F00E          	movff	tblptru,??_CHECK+13
   365  000048  CFF5 F00F          	movff	tablat,??_CHECK+14
   366                           
   367                           ;main.c: 150: if (TMR0IF == 1)
   368  00004C  A4F2               	btfss	intcon,2,c	;volatile
   369  00004E  D031               	goto	i2l77
   370                           
   371                           ;main.c: 151: {
   372                           ;main.c: 152: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
   373  000050  0E15               	movlw	21
   374  000052  6ED7               	movwf	4055,c	;volatile
   375  000054  0EA0               	movlw	160
   376  000056  6ED6               	movwf	4054,c	;volatile
   377                           
   378                           ;main.c: 154: RB0 = 1;
   379  000058  8081               	bsf	3969,0,c	;volatile
   380                           
   381                           ;main.c: 155: RB1 = 1;
   382  00005A  8281               	bsf	3969,1,c	;volatile
   383                           
   384                           ;main.c: 156: RB2 = 1;
   385  00005C  8481               	bsf	3969,2,c	;volatile
   386                           
   387                           ;main.c: 157: RB3 = 1;
   388  00005E  8681               	bsf	3969,3,c	;volatile
   389                           
   390                           ;main.c: 158: RB4 = 1;
   391  000060  8881               	bsf	3969,4,c	;volatile
   392                           
   393                           ;main.c: 159: _delay((unsigned long)((1)*(48000000/4000.0)));
   394  000062  0E10               	movlw	16
   395  000064  6E01               	movwf	??_CHECK& (0+255),c
   396  000066  0E94               	movlw	148
   397  000068                     i2u9_47:
   398  000068  2EE8               	decfsz	wreg,f,c
   399  00006A  D7FE               	bra	i2u9_47
   400  00006C  2E01               	decfsz	??_CHECK& (0+255),f,c
   401  00006E  D7FC               	bra	i2u9_47
   402  000070  D000               	nop2	
   403                           
   404                           ;main.c: 163: for(count_deg=0;count_deg<=180;count_deg++)
   405  000072  0E00               	movlw	0
   406  000074  6E15               	movwf	_count_deg,c
   407  000076                     i2l699:
   408  000076  0EB4               	movlw	180
   409  000078  6415               	cpfsgt	_count_deg,c
   410  00007A  D001               	goto	i2l703
   411  00007C  D019               	goto	i2l71
   412  00007E                     i2l703:
   413                           
   414                           ;main.c: 164: {
   415                           ;main.c: 166: if(deg0 == count_deg) RB0 = 0;
   416  00007E  5015               	movf	_count_deg,w,c
   417  000080  1810               	xorwf	_deg0,w,c
   418  000082  B4D8               	btfsc	status,2,c
   419  000084  9081               	bcf	3969,0,c	;volatile
   420                           
   421                           ;main.c: 167: if(deg1 == count_deg) RB1 = 0;
   422  000086  5015               	movf	_count_deg,w,c
   423  000088  1811               	xorwf	_deg1,w,c
   424  00008A  B4D8               	btfsc	status,2,c
   425  00008C  9281               	bcf	3969,1,c	;volatile
   426                           
   427                           ;main.c: 168: if(deg2 == count_deg) RB2 = 0;
   428  00008E  5015               	movf	_count_deg,w,c
   429  000090  1812               	xorwf	_deg2,w,c
   430  000092  B4D8               	btfsc	status,2,c
   431  000094  9481               	bcf	3969,2,c	;volatile
   432                           
   433                           ;main.c: 169: if(deg3 == count_deg) RB3 = 0;
   434  000096  5015               	movf	_count_deg,w,c
   435  000098  1813               	xorwf	_deg3,w,c
   436  00009A  B4D8               	btfsc	status,2,c
   437  00009C  9681               	bcf	3969,3,c	;volatile
   438                           
   439                           ;main.c: 170: if(deg4 == count_deg) RB4 = 0;
   440  00009E  5015               	movf	_count_deg,w,c
   441  0000A0  1814               	xorwf	_deg4,w,c
   442  0000A2  B4D8               	btfsc	status,2,c
   443  0000A4  9881               	bcf	3969,4,c	;volatile
   444                           
   445                           ;main.c: 173: _delay(39);
   446  0000A6  0E0D               	movlw	13
   447  0000A8                     i2u10_47:
   448  0000A8  2EE8               	decfsz	wreg,f,c
   449  0000AA  D7FE               	bra	i2u10_47
   450  0000AC  2A15               	incf	_count_deg,f,c
   451  0000AE  D7E3               	goto	i2l699
   452  0000B0                     i2l71:
   453                           
   454                           ;main.c: 179: }
   455                           ;main.c: 186: TMR0IF = 0;
   456  0000B0  94F2               	bcf	intcon,2,c	;volatile
   457  0000B2                     i2l77:
   458  0000B2  C00F  FFF5         	movff	??_CHECK+14,tablat
   459  0000B6  C00E  FFF8         	movff	??_CHECK+13,tblptru
   460  0000BA  C00D  FFF7         	movff	??_CHECK+12,tblptrh
   461  0000BE  C00C  FFF6         	movff	??_CHECK+11,tblptrl
   462  0000C2  C00B  FFF4         	movff	??_CHECK+10,prodh
   463  0000C6  C00A  FFF3         	movff	??_CHECK+9,prodl
   464  0000CA  C009  FFDA         	movff	??_CHECK+8,fsr2h
   465  0000CE  C008  FFD9         	movff	??_CHECK+7,fsr2l
   466  0000D2  C007  FFE2         	movff	??_CHECK+6,fsr1h
   467  0000D6  C006  FFE1         	movff	??_CHECK+5,fsr1l
   468  0000DA  C005  FFEA         	movff	??_CHECK+4,fsr0h
   469  0000DE  C004  FFE9         	movff	??_CHECK+3,fsr0l
   470  0000E2  C003  FFFB         	movff	??_CHECK+2,pclatu
   471  0000E6  C002  FFFA         	movff	??_CHECK+1,pclath
   472  0000EA  9216               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   473  0000EC  0011               	retfie		f
   474  0000EE                     __end_of_CHECK:
   475                           	opt stack 0
   476  0000                     pclatu	equ	0xFFB
   477                           pclath	equ	0xFFA
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           prodh	equ	0xFF4
   483                           prodl	equ	0xFF3
   484                           intcon	equ	0xFF2
   485                           postinc0	equ	0xFEE
   486                           fsr0h	equ	0xFEA
   487                           fsr0l	equ	0xFE9
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1h	equ	0xFE2
   491                           fsr1l	equ	0xFE1
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8
   495                           pclatu	equ	0xFFB
   496                           pclath	equ	0xFFA
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           prodh	equ	0xFF4
   502                           prodl	equ	0xFF3
   503                           intcon	equ	0xFF2
   504                           postinc0	equ	0xFEE
   505                           fsr0h	equ	0xFEA
   506                           fsr0l	equ	0xFE9
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1h	equ	0xFE2
   510                           fsr1l	equ	0xFE1
   511                           fsr2h	equ	0xFDA
   512                           fsr2l	equ	0xFD9
   513                           status	equ	0xFD8
   514                           
   515                           	psect	rparam
   516  0000                     pclatu	equ	0xFFB
   517                           pclath	equ	0xFFA
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           prodh	equ	0xFF4
   523                           prodl	equ	0xFF3
   524                           intcon	equ	0xFF2
   525                           postinc0	equ	0xFEE
   526                           fsr0h	equ	0xFEA
   527                           fsr0l	equ	0xFE9
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           status	equ	0xFD8
   535                           
   536                           	psect	temp
   537  000016                     btemp:
   538                           	opt stack 0
   539  000016                     	ds	1
   540  0000                     int$flags	set	btemp
   541                           pclatu	equ	0xFFB
   542                           pclath	equ	0xFFA
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           prodh	equ	0xFF4
   548                           prodl	equ	0xFF3
   549                           intcon	equ	0xFF2
   550                           postinc0	equ	0xFEE
   551                           fsr0h	equ	0xFEA
   552                           fsr0l	equ	0xFE9
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           fsr2h	equ	0xFDA
   558                           fsr2l	equ	0xFD9
   559                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _CHECK in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CHECK in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CHECK in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CHECK in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CHECK in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CHECK in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CHECK in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CHECK in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CHECK in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _CHECK                                               15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _CHECK (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Feb  8 22:47:24 2017

                     l63 0140              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000                      _RB0 007C08  
                    _RB1 007C09                      _RB2 007C0A                      _RB3 007C0B  
                    _RB4 007C0C             __CFG_CPD$OFF 000000                      _PSA 007EAB  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _T0CS 007EAD                     _IPEN 007E87                     i2l71 00B0  
                   i2l77 00B2                     _deg0 0010                     _deg1 0011  
                   _deg2 0012                     _deg3 0013                     _deg4 0014  
                   _main 011A                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0016                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _CHECK 0008  
                  _T0PS0 007EA8                    _T0PS1 007EA9                    _T0PS2 007EAA  
                  i2l703 007E                    i2l699 0076                    _TMR0H 000FD7  
                  _TMR0L 000FD6            __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 00EE  
           __end_of_main 0142                   ??_main 0010                   ?_CHECK 0001  
          __activetblptr 000000                   _T08BIT 007EAE                   _TMR0IE 007F95  
                 _TMR0IF 007F92                   _TMR0ON 007EAF                   _TRISB0 007C98  
                 _TRISB1 007C99                   _TRISB2 007C9A                   _TRISB3 007C9B  
                 _TRISB4 007C9C                   i2u9_47 0068           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000             __pdataCOMRAM 0010                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0110          __CFG_PBADEN$OFF 000000            __end_of_CHECK 00EE  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ??_CHECK 0001  
                i2u10_47 00A8          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00EE                  __ramtop 0800  
                __ptext0 011A           __pintcode_body 0012     end_of_initialization 0110  
                int_func 0012                  postdec1 000FE5                  postinc0 000FEE  
          __pidataCOMRAM 0142      start_initialization 00EE         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0015                __pintcode 0008           __size_of_CHECK 00E6  
              _count_deg 0015         __CFG_WDTPS$32768 000000                copy_data0 0102  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0028  
               int$flags 0016    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000       __CFG_FOSC$HSPLL_HS 000000  
