

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Feb  9 23:59:03 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.40
    25                           ; Generated 01/12/2016 GMT
    26                           ; 
    27                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  000632                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _deg0
    64  000632  0F                 	db	15
    65                           
    66                           ;initializer for _deg1
    67  000633  1E                 	db	30
    68                           
    69                           ;initializer for _deg2
    70  000634  3C                 	db	60
    71                           
    72                           ;initializer for _deg3
    73  000635  5A                 	db	90
    74                           
    75                           ;initializer for _deg4
    76  000636  78                 	db	120
    77                           
    78                           	psect	nvCOMRAM
    79  000039                     __pnvCOMRAM:
    80                           	opt stack 0
    81  000039                     _val_inter:
    82                           	opt stack 0
    83  000039                     	ds	3
    84  00003C                     _val:
    85                           	opt stack 0
    86  00003C                     	ds	2
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADRESH	set	4036
    89  0000                     _ADRESL	set	4035
    90  0000                     _INTCONbits	set	4082
    91  0000                     _TMR0H	set	4055
    92  0000                     _TMR0L	set	4054
    93  0000                     _ACQT0	set	32259
    94  0000                     _ACQT1	set	32260
    95  0000                     _ACQT2	set	32261
    96  0000                     _ADCS0	set	32256
    97  0000                     _ADCS1	set	32257
    98  0000                     _ADCS2	set	32258
    99  0000                     _ADFM	set	32263
   100  0000                     _ADIF	set	31990
   101  0000                     _ADON	set	32272
   102  0000                     _CHS0	set	32274
   103  0000                     _CHS1	set	32275
   104  0000                     _CHS2	set	32276
   105  0000                     _CHS3	set	32277
   106  0000                     _IPEN	set	32391
   107  0000                     _PCFG0	set	32264
   108  0000                     _PCFG1	set	32265
   109  0000                     _PCFG2	set	32266
   110  0000                     _PCFG3	set	32267
   111  0000                     _PSA	set	32427
   112  0000                     _RB0	set	31752
   113  0000                     _RB1	set	31753
   114  0000                     _RB2	set	31754
   115  0000                     _RB3	set	31755
   116  0000                     _RB4	set	31756
   117  0000                     _T08BIT	set	32430
   118  0000                     _T0CS	set	32429
   119  0000                     _T0PS0	set	32424
   120  0000                     _T0PS1	set	32425
   121  0000                     _T0PS2	set	32426
   122  0000                     _TMR0IE	set	32661
   123  0000                     _TMR0IF	set	32658
   124  0000                     _TMR0ON	set	32431
   125  0000                     _TRISB0	set	31896
   126  0000                     _TRISB1	set	31897
   127  0000                     _TRISB2	set	31898
   128  0000                     _TRISB3	set	31899
   129  0000                     _TRISB4	set	31900
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  0005C4                     __pcinit:
   135                           	opt stack 0
   136  0005C4                     start_initialization:
   137                           	opt stack 0
   138  0005C4                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (5 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143  0005C4  0E32               	movlw	low __pidataCOMRAM
   144  0005C6  6EF6               	movwf	tblptrl,c
   145  0005C8  0E06               	movlw	high __pidataCOMRAM
   146  0005CA  6EF7               	movwf	tblptrh,c
   147  0005CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148  0005CE  6EF8               	movwf	tblptru,c
   149  0005D0  EE00  F03E         	lfsr	0,__pdataCOMRAM
   150  0005D4  EE10 F005          	lfsr	1,5
   151  0005D8                     copy_data0:
   152  0005D8  0009               	tblrd		*+
   153  0005DA  CFF5 FFEE          	movff	tablat,postinc0
   154  0005DE  50E5               	movf	postdec1,w,c
   155  0005E0  50E1               	movf	fsr1l,w,c
   156  0005E2  E1FA               	bnz	copy_data0
   157                           
   158                           ; Clear objects allocated to COMRAM (1 bytes)
   159  0005E4  6A43               	clrf	__pbssCOMRAM& (0+255),c
   160  0005E6                     end_of_initialization:
   161                           	opt stack 0
   162  0005E6                     __end_of__initialization:
   163                           	opt stack 0
   164  0005E6  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   165  0005E8  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   166  0005EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167  0005EC  6EF8               	movwf	tblptru,c
   168  0005EE  0100               	movlb	0
   169  0005F0  EF09  F000         	goto	_main	;jump to C main() function
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssCOMRAM
   179  000043                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000043                     _count_deg:
   182                           	opt stack 0
   183  000043                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	dataCOMRAM
   193  00003E                     __pdataCOMRAM:
   194                           	opt stack 0
   195  00003E                     _deg0:
   196                           	opt stack 0
   197  00003E                     	ds	1
   198  00003F                     _deg1:
   199                           	opt stack 0
   200  00003F                     	ds	1
   201  000040                     _deg2:
   202                           	opt stack 0
   203  000040                     	ds	1
   204  000041                     _deg3:
   205                           	opt stack 0
   206  000041                     	ds	1
   207  000042                     _deg4:
   208                           	opt stack 0
   209  000042                     	ds	1
   210                           tblptru	equ	0xFF8
   211                           tblptrh	equ	0xFF7
   212                           tblptrl	equ	0xFF6
   213                           tablat	equ	0xFF5
   214                           postinc0	equ	0xFEE
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	opt stack 0
   221  000001                     ??_CHECK:
   222                           
   223                           ; 1 bytes @ 0x0
   224  000001                     	ds	15
   225  000010                     ?_start_convert:
   226                           	opt stack 0
   227  000010                     ?___ftpack:
   228                           	opt stack 0
   229  000010                     ___ftpack@arg:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0xF
   233  000010                     	ds	2
   234  000012                     start_convert@pval2:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x11
   238  000012                     	ds	1
   239  000013                     ___ftpack@exp:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x12
   243  000013                     	ds	1
   244  000014                     start_convert@channel:
   245                           	opt stack 0
   246  000014                     ___ftpack@sign:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x13
   250  000014                     	ds	1
   251  000015                     ??___ftpack:
   252  000015                     start_convert@pval1:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x14
   256  000015                     	ds	2
   257  000017                     start_convert@val:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x16
   261  000017                     	ds	1
   262  000018                     ?___lwtoft:
   263                           	opt stack 0
   264  000018                     ___lwtoft@c:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x17
   268  000018                     	ds	3
   269  00001B                     ?___ftmul:
   270                           	opt stack 0
   271  00001B                     ___ftmul@f1:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x1A
   275  00001B                     	ds	3
   276  00001E                     ___ftmul@f2:
   277                           	opt stack 0
   278                           
   279                           ; 3 bytes @ 0x1D
   280  00001E                     	ds	3
   281  000021                     ??___ftmul:
   282                           
   283                           ; 1 bytes @ 0x20
   284  000021                     	ds	3
   285  000024                     ___ftmul@exp:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x23
   289  000024                     	ds	1
   290  000025                     ___ftmul@f3_as_product:
   291                           	opt stack 0
   292                           
   293                           ; 3 bytes @ 0x24
   294  000025                     	ds	3
   295  000028                     ___ftmul@cntr:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x27
   299  000028                     	ds	1
   300  000029                     ___ftmul@sign:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x28
   304  000029                     	ds	1
   305  00002A                     ?___fttol:
   306                           	opt stack 0
   307  00002A                     ___fttol@f1:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x29
   311  00002A                     	ds	4
   312  00002E                     ??___fttol:
   313                           
   314                           ; 1 bytes @ 0x2D
   315  00002E                     	ds	5
   316  000033                     ___fttol@sign1:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x32
   320  000033                     	ds	1
   321  000034                     ___fttol@lval:
   322                           	opt stack 0
   323                           
   324                           ; 4 bytes @ 0x33
   325  000034                     	ds	4
   326  000038                     ___fttol@exp1:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x37
   330  000038                     	ds	1
   331  000039                     tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           ; 1 bytes @ 0x38
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 49 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  count_deg       1    0        unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels required when called:    3
   365 ;; This function calls:
   366 ;;		___ftmul
   367 ;;		___fttol
   368 ;;		___lwtoft
   369 ;;		_int_converter
   370 ;;		_start_convert
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377  000012                     __ptext0:
   378                           	opt stack 0
   379  000012                     _main:
   380                           	opt stack 28
   381                           
   382                           ;main.c: 52: int_converter();
   383                           
   384                           ;incstack = 0
   385  000012  EC0C  F003         	call	_int_converter	;wreg free
   386                           
   387                           ;main.c: 54: unsigned char count_deg;
   388                           ;main.c: 56: TRISB0 = 0;
   389  000016  9093               	bcf	3987,0,c	;volatile
   390                           
   391                           ;main.c: 57: TRISB1 = 0;
   392  000018  9293               	bcf	3987,1,c	;volatile
   393                           
   394                           ;main.c: 58: TRISB2 = 0;
   395  00001A  9493               	bcf	3987,2,c	;volatile
   396                           
   397                           ;main.c: 59: TRISB3 = 0;
   398  00001C  9693               	bcf	3987,3,c	;volatile
   399                           
   400                           ;main.c: 60: TRISB4 = 0;
   401  00001E  9893               	bcf	3987,4,c	;volatile
   402                           
   403                           ;main.c: 65: IPEN = 0;
   404  000020  9ED0               	bcf	4048,7,c	;volatile
   405                           
   406                           ;main.c: 72: INTCONbits.GIE = 1;
   407  000022  8EF2               	bsf	intcon,7,c	;volatile
   408                           
   409                           ;main.c: 77: TMR0IE = 1;
   410  000024  8AF2               	bsf	intcon,5,c	;volatile
   411                           
   412                           ;main.c: 83: T08BIT = 0;
   413  000026  9CD5               	bcf	4053,6,c	;volatile
   414                           
   415                           ;main.c: 89: T0CS = 0;
   416  000028  9AD5               	bcf	4053,5,c	;volatile
   417                           
   418                           ;main.c: 101: PSA = 0;
   419  00002A  96D5               	bcf	4053,3,c	;volatile
   420                           
   421                           ;main.c: 114: T0PS0 = 1;
   422  00002C  80D5               	bsf	4053,0,c	;volatile
   423                           
   424                           ;main.c: 115: T0PS1 = 0;
   425  00002E  92D5               	bcf	4053,1,c	;volatile
   426                           
   427                           ;main.c: 116: T0PS2 = 0;
   428  000030  94D5               	bcf	4053,2,c	;volatile
   429                           
   430                           ;main.c: 133: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
   431  000032  0E15               	movlw	21
   432  000034  6ED7               	movwf	4055,c	;volatile
   433  000036  0EA0               	movlw	160
   434  000038  6ED6               	movwf	4054,c	;volatile
   435                           
   436                           ;main.c: 142: TMR0ON = 1;
   437  00003A  8ED5               	bsf	4053,7,c	;volatile
   438                           
   439                           ;main.c: 145: val_inter = 180.0/1023.0;
   440  00003C  0E2D               	movlw	45
   441  00003E  6E39               	movwf	_val_inter,c
   442  000040  0E34               	movlw	52
   443  000042  6E3A               	movwf	_val_inter+1,c
   444  000044  0E3E               	movlw	62
   445  000046  6E3B               	movwf	_val_inter+2,c
   446  000048                     l1211:
   447                           
   448                           ;main.c: 147: {
   449                           ;main.c: 149: val = start_convert(0);
   450  000048  0E00               	movlw	0
   451  00004A  EC98  F002         	call	_start_convert
   452  00004E  C010  F03C         	movff	?_start_convert,_val
   453  000052  C011  F03D         	movff	?_start_convert+1,_val+1
   454                           
   455                           ;main.c: 150: deg0 = val*val_inter;
   456  000056  C039  F01E         	movff	_val_inter,___ftmul@f2
   457  00005A  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   458  00005E  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   459  000062  C03C  F018         	movff	_val,___lwtoft@c
   460  000066  C03D  F019         	movff	_val+1,___lwtoft@c+1
   461  00006A  ECFA  F002         	call	___lwtoft	;wreg free
   462  00006E  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   463  000072  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   464  000076  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   465  00007A  EC58  F001         	call	___ftmul	;wreg free
   466  00007E  C01B  F02A         	movff	?___ftmul,___fttol@f1
   467  000082  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   468  000086  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   469  00008A  ECDE  F000         	call	___fttol	;wreg free
   470  00008E  502A               	movf	?___fttol,w,c
   471  000090  6E3E               	movwf	_deg0,c
   472                           
   473                           ;main.c: 151: val = start_convert(1);
   474  000092  0E01               	movlw	1
   475  000094  EC98  F002         	call	_start_convert
   476  000098  C010  F03C         	movff	?_start_convert,_val
   477  00009C  C011  F03D         	movff	?_start_convert+1,_val+1
   478                           
   479                           ;main.c: 152: deg1=val*val_inter;
   480  0000A0  C039  F01E         	movff	_val_inter,___ftmul@f2
   481  0000A4  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   482  0000A8  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   483  0000AC  C03C  F018         	movff	_val,___lwtoft@c
   484  0000B0  C03D  F019         	movff	_val+1,___lwtoft@c+1
   485  0000B4  ECFA  F002         	call	___lwtoft	;wreg free
   486  0000B8  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   487  0000BC  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   488  0000C0  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   489  0000C4  EC58  F001         	call	___ftmul	;wreg free
   490  0000C8  C01B  F02A         	movff	?___ftmul,___fttol@f1
   491  0000CC  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   492  0000D0  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   493  0000D4  ECDE  F000         	call	___fttol	;wreg free
   494  0000D8  502A               	movf	?___fttol,w,c
   495  0000DA  6E3F               	movwf	_deg1,c
   496                           
   497                           ;main.c: 153: val = start_convert(2);
   498  0000DC  0E02               	movlw	2
   499  0000DE  EC98  F002         	call	_start_convert
   500  0000E2  C010  F03C         	movff	?_start_convert,_val
   501  0000E6  C011  F03D         	movff	?_start_convert+1,_val+1
   502                           
   503                           ;main.c: 154: deg2=val*val_inter;
   504  0000EA  C039  F01E         	movff	_val_inter,___ftmul@f2
   505  0000EE  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   506  0000F2  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   507  0000F6  C03C  F018         	movff	_val,___lwtoft@c
   508  0000FA  C03D  F019         	movff	_val+1,___lwtoft@c+1
   509  0000FE  ECFA  F002         	call	___lwtoft	;wreg free
   510  000102  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   511  000106  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   512  00010A  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   513  00010E  EC58  F001         	call	___ftmul	;wreg free
   514  000112  C01B  F02A         	movff	?___ftmul,___fttol@f1
   515  000116  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   516  00011A  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   517  00011E  ECDE  F000         	call	___fttol	;wreg free
   518  000122  502A               	movf	?___fttol,w,c
   519  000124  6E40               	movwf	_deg2,c
   520                           
   521                           ;main.c: 155: val = start_convert(3);
   522  000126  0E03               	movlw	3
   523  000128  EC98  F002         	call	_start_convert
   524  00012C  C010  F03C         	movff	?_start_convert,_val
   525  000130  C011  F03D         	movff	?_start_convert+1,_val+1
   526                           
   527                           ;main.c: 156: deg3=val*val_inter;
   528  000134  C039  F01E         	movff	_val_inter,___ftmul@f2
   529  000138  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   530  00013C  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   531  000140  C03C  F018         	movff	_val,___lwtoft@c
   532  000144  C03D  F019         	movff	_val+1,___lwtoft@c+1
   533  000148  ECFA  F002         	call	___lwtoft	;wreg free
   534  00014C  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   535  000150  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   536  000154  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   537  000158  EC58  F001         	call	___ftmul	;wreg free
   538  00015C  C01B  F02A         	movff	?___ftmul,___fttol@f1
   539  000160  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   540  000164  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   541  000168  ECDE  F000         	call	___fttol	;wreg free
   542  00016C  502A               	movf	?___fttol,w,c
   543  00016E  6E41               	movwf	_deg3,c
   544                           
   545                           ;main.c: 157: val = start_convert(4);
   546  000170  0E04               	movlw	4
   547  000172  EC98  F002         	call	_start_convert
   548  000176  C010  F03C         	movff	?_start_convert,_val
   549  00017A  C011  F03D         	movff	?_start_convert+1,_val+1
   550                           
   551                           ;main.c: 158: deg4=val*val_inter;
   552  00017E  C039  F01E         	movff	_val_inter,___ftmul@f2
   553  000182  C03A  F01F         	movff	_val_inter+1,___ftmul@f2+1
   554  000186  C03B  F020         	movff	_val_inter+2,___ftmul@f2+2
   555  00018A  C03C  F018         	movff	_val,___lwtoft@c
   556  00018E  C03D  F019         	movff	_val+1,___lwtoft@c+1
   557  000192  ECFA  F002         	call	___lwtoft	;wreg free
   558  000196  C018  F01B         	movff	?___lwtoft,___ftmul@f1
   559  00019A  C019  F01C         	movff	?___lwtoft+1,___ftmul@f1+1
   560  00019E  C01A  F01D         	movff	?___lwtoft+2,___ftmul@f1+2
   561  0001A2  EC58  F001         	call	___ftmul	;wreg free
   562  0001A6  C01B  F02A         	movff	?___ftmul,___fttol@f1
   563  0001AA  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   564  0001AE  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   565  0001B2  ECDE  F000         	call	___fttol	;wreg free
   566  0001B6  502A               	movf	?___fttol,w,c
   567  0001B8  6E42               	movwf	_deg4,c
   568  0001BA  D746               	goto	l1211
   569  0001BC                     __end_of_main:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           intcon	equ	0xFF2
   576                           postinc0	equ	0xFEE
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580 ;; *************** function _start_convert *****************
   581 ;; Defined at:
   582 ;;		line 47 in file "adconverter.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  channel         1    wreg     unsigned char 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  channel         1   19[COMRAM] unsigned char 
   587 ;;  val             2   22[COMRAM] unsigned int 
   588 ;;  pval1           2   20[COMRAM] PTR unsigned char 
   589 ;;		 -> start_convert@val(2), 
   590 ;;  pval2           2   17[COMRAM] PTR unsigned char 
   591 ;;		 -> start_convert@val(2), 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2   15[COMRAM] unsigned int 
   594 ;; Registers used:
   595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         2       0       0       0       0       0       0       0       0
   602 ;;      Locals:         7       0       0       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0
   604 ;;      Totals:         9       0       0       0       0       0       0       0       0
   605 ;;Total ram usage:        9 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text1
   616  000530                     __ptext1:
   617                           	opt stack 0
   618  000530                     _start_convert:
   619                           	opt stack 29
   620                           
   621                           ;incstack = 0
   622                           ;start_convert@channel stored from wreg
   623  000530  6E14               	movwf	start_convert@channel,c
   624                           
   625                           ;adconverter.c: 51: unsigned int val;
   626                           ;adconverter.c: 52: unsigned char *pval1, *pval2;
   627                           ;adconverter.c: 53: pval1 = &val;
   628  000532  0E17               	movlw	low start_convert@val
   629  000534  6E15               	movwf	start_convert@pval1,c
   630  000536  0E00               	movlw	high start_convert@val
   631  000538  6E16               	movwf	start_convert@pval1+1,c
   632                           
   633                           ;adconverter.c: 54: pval2 = pval1+1;
   634  00053A  0E01               	movlw	1
   635  00053C  2415               	addwf	start_convert@pval1,w,c
   636  00053E  6E12               	movwf	start_convert@pval2,c
   637  000540  0E00               	movlw	0
   638  000542  2016               	addwfc	start_convert@pval1+1,w,c
   639  000544  6E13               	movwf	start_convert@pval2+1,c
   640                           
   641                           ;adconverter.c: 55: ADIF =0;
   642  000546  9C9E               	bcf	3998,6,c	;volatile
   643                           
   644                           ;adconverter.c: 57: switch(channel)
   645  000548  D016               	goto	l1067
   646  00054A                     l132:
   647                           
   648                           ;adconverter.c: 60: CHS0 = 0;
   649  00054A  94C2               	bcf	4034,2,c	;volatile
   650  00054C  D001               	goto	L1
   651  00054E                     l134:
   652                           
   653                           ;adconverter.c: 66: CHS0 = 1;
   654  00054E  84C2               	bsf	4034,2,c	;volatile
   655  000550                     L1:
   656                           
   657                           ;adconverter.c: 67: CHS1 = 0;
   658  000550  96C2               	bcf	4034,3,c	;volatile
   659  000552  D002               	goto	L2
   660  000554                     l135:
   661                           
   662                           ;adconverter.c: 72: CHS0 = 0;
   663  000554  94C2               	bcf	4034,2,c	;volatile
   664  000556  D004               	goto	L3
   665  000558                     L2:
   666                           
   667                           ;adconverter.c: 74: CHS2 = 0;
   668  000558  98C2               	bcf	4034,4,c	;volatile
   669  00055A                     
   670                           ;adconverter.c: 75: CHS3 = 0;
   671  00055A  9AC2               	bcf	4034,5,c	;volatile
   672                           
   673                           ;adconverter.c: 76: break;
   674  00055C  D01D               	goto	l140
   675  00055E                     l136:
   676                           
   677                           ;adconverter.c: 78: CHS0 = 1;
   678  00055E  84C2               	bsf	4034,2,c	;volatile
   679  000560                     L3:
   680                           
   681                           ;adconverter.c: 79: CHS1 = 1;
   682  000560  86C2               	bsf	4034,3,c	;volatile
   683  000562  D7FA               	goto	L2
   684  000564                     l137:
   685                           
   686                           ;adconverter.c: 84: CHS0 = 0;
   687  000564  94C2               	bcf	4034,2,c	;volatile
   688                           
   689                           ;adconverter.c: 85: CHS1 = 0;
   690  000566  96C2               	bcf	4034,3,c	;volatile
   691                           
   692                           ;adconverter.c: 86: CHS2 = 1;
   693  000568  88C2               	bsf	4034,4,c	;volatile
   694  00056A  D7F7               	goto	L4
   695  00056C                     l1061:
   696  00056C  0E00               	movlw	0
   697  00056E  6E11               	movwf	?_start_convert+1,c
   698  000570  0E00               	movlw	0
   699  000572  6E10               	movwf	?_start_convert,c
   700  000574  0012               	return	
   701  000576                     l1067:
   702  000576  5014               	movf	start_convert@channel,w,c
   703                           
   704                           ; Switch size 1, requested type "space"
   705                           ; Number of cases is 5, Range of values is 0 to 4
   706                           ; switch strategies available:
   707                           ; Name         Instructions Cycles
   708                           ; simple_byte           16     9 (average)
   709                           ;	Chosen strategy is simple_byte
   710  000578  0A00               	xorlw	0	; case 0
   711  00057A  B4D8               	btfsc	status,2,c
   712  00057C  D7E6               	goto	l132
   713  00057E  0A01               	xorlw	1	; case 1
   714  000580  B4D8               	btfsc	status,2,c
   715  000582  D7E5               	goto	l134
   716  000584  0A03               	xorlw	3	; case 2
   717  000586  B4D8               	btfsc	status,2,c
   718  000588  D7E5               	goto	l135
   719  00058A  0A01               	xorlw	1	; case 3
   720  00058C  B4D8               	btfsc	status,2,c
   721  00058E  D7E7               	goto	l136
   722  000590  0A07               	xorlw	7	; case 4
   723  000592  B4D8               	btfsc	status,2,c
   724  000594  D7E7               	goto	l137
   725  000596  D7EA               	goto	l1061
   726  000598                     l140:
   727  000598  B2C2               	btfsc	4034,1,c	;volatile
   728  00059A  D7FE               	goto	l140
   729                           
   730                           ;adconverter.c: 93: ADCON0bits.GO =1;
   731  00059C  82C2               	bsf	4034,1,c	;volatile
   732  00059E                     l143:
   733  00059E  B2C2               	btfsc	4034,1,c	;volatile
   734  0005A0  D7FE               	goto	l143
   735                           
   736                           ;adconverter.c: 95: *pval1 = ADRESL;
   737  0005A2  C015  FFD9         	movff	start_convert@pval1,fsr2l
   738  0005A6  C016  FFDA         	movff	start_convert@pval1+1,fsr2h
   739  0005AA  CFC3 FFDF          	movff	4035,indf2	;volatile
   740                           
   741                           ;adconverter.c: 96: *pval2 = ADRESH;
   742  0005AE  C012  FFD9         	movff	start_convert@pval2,fsr2l
   743  0005B2  C013  FFDA         	movff	start_convert@pval2+1,fsr2h
   744  0005B6  CFC4 FFDF          	movff	4036,indf2	;volatile
   745                           
   746                           ;adconverter.c: 97: return val;
   747  0005BA  C017  F010         	movff	start_convert@val,?_start_convert
   748  0005BE  C018  F011         	movff	start_convert@val+1,?_start_convert+1
   749  0005C2  0012               	return	
   750  0005C4                     __end_of_start_convert:
   751                           	opt stack 0
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           intcon	equ	0xFF2
   757                           postinc0	equ	0xFEE
   758                           postdec1	equ	0xFE5
   759                           fsr1l	equ	0xFE1
   760                           indf2	equ	0xFDF
   761                           fsr2h	equ	0xFDA
   762                           fsr2l	equ	0xFD9
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _int_converter *****************
   766 ;; Defined at:
   767 ;;		line 3 in file "adconverter.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		None
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796  000618                     __ptext2:
   797                           	opt stack 0
   798  000618                     _int_converter:
   799                           	opt stack 29
   800                           
   801                           ;adconverter.c: 13: ADCS0 = 0;
   802                           
   803                           ;incstack = 0
   804  000618  90C0               	bcf	4032,0,c	;volatile
   805                           
   806                           ;adconverter.c: 14: ADCS1 = 1;
   807  00061A  82C0               	bsf	4032,1,c	;volatile
   808                           
   809                           ;adconverter.c: 15: ADCS2 = 1;
   810  00061C  84C0               	bsf	4032,2,c	;volatile
   811                           
   812                           ;adconverter.c: 18: ACQT0 = 1;
   813  00061E  86C0               	bsf	4032,3,c	;volatile
   814                           
   815                           ;adconverter.c: 19: ACQT1 = 1;
   816  000620  88C0               	bsf	4032,4,c	;volatile
   817                           
   818                           ;adconverter.c: 20: ACQT2 = 1;
   819  000622  8AC0               	bsf	4032,5,c	;volatile
   820                           
   821                           ;adconverter.c: 24: ADFM = 1;
   822  000624  8EC0               	bsf	4032,7,c	;volatile
   823                           
   824                           ;adconverter.c: 30: PCFG0 = 0;
   825  000626  90C1               	bcf	4033,0,c	;volatile
   826                           
   827                           ;adconverter.c: 31: PCFG1 = 1;
   828  000628  82C1               	bsf	4033,1,c	;volatile
   829                           
   830                           ;adconverter.c: 32: PCFG2 = 0;
   831  00062A  94C1               	bcf	4033,2,c	;volatile
   832                           
   833                           ;adconverter.c: 33: PCFG3 = 1;
   834  00062C  86C1               	bsf	4033,3,c	;volatile
   835                           
   836                           ;adconverter.c: 39: ADON = 1;
   837  00062E  80C2               	bsf	4034,0,c	;volatile
   838  000630  0012               	return		;funcret
   839  000632                     __end_of_int_converter:
   840                           	opt stack 0
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           intcon	equ	0xFF2
   846                           postinc0	equ	0xFEE
   847                           postdec1	equ	0xFE5
   848                           fsr1l	equ	0xFE1
   849                           indf2	equ	0xFDF
   850                           fsr2h	equ	0xFDA
   851                           fsr2l	equ	0xFD9
   852                           status	equ	0xFD8
   853                           
   854 ;; *************** function ___lwtoft *****************
   855 ;; Defined at:
   856 ;;		line 28 in file "/opt/microchip/xc8/v1.40/sources/common/lwtoft.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  c               2   23[COMRAM] unsigned int 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  3   23[COMRAM] float 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   870 ;;      Params:         3       0       0       0       0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0       0       0
   873 ;;      Totals:         3       0       0       0       0       0       0       0       0
   874 ;;Total ram usage:        3 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    2
   877 ;; This function calls:
   878 ;;		___ftpack
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text3
   885  0005F4                     __ptext3:
   886                           	opt stack 0
   887  0005F4                     ___lwtoft:
   888                           	opt stack 28
   889                           
   890                           ;incstack = 0
   891  0005F4  C018  F010         	movff	___lwtoft@c,___ftpack@arg
   892  0005F8  C019  F011         	movff	___lwtoft@c+1,___ftpack@arg+1
   893  0005FC  6A12               	clrf	___ftpack@arg+2,c
   894  0005FE  0E8E               	movlw	142
   895  000600  6E13               	movwf	___ftpack@exp,c
   896  000602  0E00               	movlw	0
   897  000604  6E14               	movwf	___ftpack@sign,c
   898  000606  EC41  F002         	call	___ftpack	;wreg free
   899  00060A  C010  F018         	movff	?___ftpack,?___lwtoft
   900  00060E  C011  F019         	movff	?___ftpack+1,?___lwtoft+1
   901  000612  C012  F01A         	movff	?___ftpack+2,?___lwtoft+2
   902  000616  0012               	return	
   903  000618                     __end_of___lwtoft:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           postdec1	equ	0xFE5
   912                           fsr1l	equ	0xFE1
   913                           indf2	equ	0xFDF
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function ___fttol *****************
   919 ;; Defined at:
   920 ;;		line 44 in file "/opt/microchip/xc8/v1.40/sources/common/fttol.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  f1              3   41[COMRAM] float 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  lval            4   51[COMRAM] unsigned long 
   925 ;;  exp1            1   55[COMRAM] unsigned char 
   926 ;;  sign1           1   50[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  4   41[COMRAM] long 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   936 ;;      Params:         4       0       0       0       0       0       0       0       0
   937 ;;      Locals:         6       0       0       0       0       0       0       0       0
   938 ;;      Temps:          5       0       0       0       0       0       0       0       0
   939 ;;      Totals:        15       0       0       0       0       0       0       0       0
   940 ;;Total ram usage:       15 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text4
   951  0001BC                     __ptext4:
   952                           	opt stack 0
   953  0001BC                     ___fttol:
   954                           	opt stack 29
   955                           
   956                           ;incstack = 0
   957  0001BC  C02C  F02E         	movff	___fttol@f1+2,??___fttol
   958  0001C0  6A2F               	clrf	(??___fttol+1)& (0+255),c
   959  0001C2  6A30               	clrf	(??___fttol+2)& (0+255),c
   960  0001C4  342B               	rlcf	___fttol@f1+1,w,c
   961  0001C6  362E               	rlcf	??___fttol& (0+255),f,c
   962  0001C8  E301               	bnc	u491
   963  0001CA  802F               	bsf	(??___fttol+1)& (0+255),0,c
   964  0001CC                     u491:
   965  0001CC  502E               	movf	??___fttol,w,c
   966  0001CE  6E38               	movwf	___fttol@exp1,c
   967  0001D0  5038               	movf	___fttol@exp1,w,c
   968  0001D2  A4D8               	btfss	status,2,c
   969  0001D4  D009               	goto	l1129
   970  0001D6  0E00               	movlw	0
   971  0001D8  6E2A               	movwf	?___fttol,c
   972  0001DA  0E00               	movlw	0
   973  0001DC  6E2B               	movwf	?___fttol+1,c
   974  0001DE  0E00               	movlw	0
   975  0001E0  6E2C               	movwf	?___fttol+2,c
   976  0001E2  0E00               	movlw	0
   977  0001E4  6E2D               	movwf	?___fttol+3,c
   978  0001E6  0012               	return	
   979  0001E8                     l1129:
   980  0001E8  0E17               	movlw	23
   981  0001EA  6E2E               	movwf	??___fttol& (0+255),c
   982  0001EC  C02A  F02F         	movff	___fttol@f1,??___fttol+1
   983  0001F0  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
   984  0001F4  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
   985  0001F8  282E               	incf	??___fttol,w,c
   986  0001FA  6E32               	movwf	(??___fttol+4)& (0+255),c
   987  0001FC  D004               	goto	u510
   988  0001FE                     u515:
   989  0001FE  90D8               	bcf	status,0,c
   990  000200  3231               	rrcf	??___fttol+3,f,c
   991  000202  3230               	rrcf	??___fttol+2,f,c
   992  000204  322F               	rrcf	??___fttol+1,f,c
   993  000206                     u510:
   994  000206  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
   995  000208  D7FA               	goto	u515
   996  00020A  502F               	movf	??___fttol+1,w,c
   997  00020C  6E33               	movwf	___fttol@sign1,c
   998  00020E  8E2B               	bsf	___fttol@f1+1,7,c
   999  000210  0EFF               	movlw	255
  1000  000212  162A               	andwf	___fttol@f1,f,c
  1001  000214  0EFF               	movlw	255
  1002  000216  162B               	andwf	___fttol@f1+1,f,c
  1003  000218  0E00               	movlw	0
  1004  00021A  162C               	andwf	___fttol@f1+2,f,c
  1005  00021C  502A               	movf	___fttol@f1,w,c
  1006  00021E  6E34               	movwf	___fttol@lval,c
  1007  000220  502B               	movf	___fttol@f1+1,w,c
  1008  000222  6E35               	movwf	___fttol@lval+1,c
  1009  000224  502C               	movf	___fttol@f1+2,w,c
  1010  000226  6E36               	movwf	___fttol@lval+2,c
  1011  000228  6A37               	clrf	___fttol@lval+3,c
  1012  00022A  0E8E               	movlw	142
  1013  00022C  5E38               	subwf	___fttol@exp1,f,c
  1014  00022E  AE38               	btfss	___fttol@exp1,7,c
  1015  000230  D016               	goto	l1151
  1016  000232  5038               	movf	___fttol@exp1,w,c
  1017  000234  0A80               	xorlw	128
  1018  000236  0F8F               	addlw	143
  1019  000238  B0D8               	btfsc	status,0,c
  1020  00023A  D009               	goto	l1147
  1021  00023C  0E00               	movlw	0
  1022  00023E  6E2A               	movwf	?___fttol,c
  1023  000240  0E00               	movlw	0
  1024  000242  6E2B               	movwf	?___fttol+1,c
  1025  000244  0E00               	movlw	0
  1026  000246  6E2C               	movwf	?___fttol+2,c
  1027  000248  0E00               	movlw	0
  1028  00024A  6E2D               	movwf	?___fttol+3,c
  1029  00024C  0012               	return	
  1030  00024E                     l1147:
  1031  00024E  90D8               	bcf	status,0,c
  1032  000250  3237               	rrcf	___fttol@lval+3,f,c
  1033  000252  3236               	rrcf	___fttol@lval+2,f,c
  1034  000254  3235               	rrcf	___fttol@lval+1,f,c
  1035  000256  3234               	rrcf	___fttol@lval,f,c
  1036  000258  3E38               	incfsz	___fttol@exp1,f,c
  1037  00025A  D7F9               	goto	l1147
  1038  00025C  D015               	goto	l1161
  1039  00025E                     l1151:
  1040  00025E  0E17               	movlw	23
  1041  000260  6438               	cpfsgt	___fttol@exp1,c
  1042  000262  D00F               	goto	l1159
  1043  000264  0E00               	movlw	0
  1044  000266  6E2A               	movwf	?___fttol,c
  1045  000268  0E00               	movlw	0
  1046  00026A  6E2B               	movwf	?___fttol+1,c
  1047  00026C  0E00               	movlw	0
  1048  00026E  6E2C               	movwf	?___fttol+2,c
  1049  000270  0E00               	movlw	0
  1050  000272  6E2D               	movwf	?___fttol+3,c
  1051  000274  0012               	return	
  1052  000276                     l1157:
  1053  000276  90D8               	bcf	status,0,c
  1054  000278  3634               	rlcf	___fttol@lval,f,c
  1055  00027A  3635               	rlcf	___fttol@lval+1,f,c
  1056  00027C  3636               	rlcf	___fttol@lval+2,f,c
  1057  00027E  3637               	rlcf	___fttol@lval+3,f,c
  1058  000280  0638               	decf	___fttol@exp1,f,c
  1059  000282                     l1159:
  1060  000282  5038               	movf	___fttol@exp1,w,c
  1061  000284  A4D8               	btfss	status,2,c
  1062  000286  D7F7               	goto	l1157
  1063  000288                     l1161:
  1064  000288  5033               	movf	___fttol@sign1,w,c
  1065  00028A  B4D8               	btfsc	status,2,c
  1066  00028C  D008               	goto	l1165
  1067  00028E  1E37               	comf	___fttol@lval+3,f,c
  1068  000290  1E36               	comf	___fttol@lval+2,f,c
  1069  000292  1E35               	comf	___fttol@lval+1,f,c
  1070  000294  6C34               	negf	___fttol@lval,c
  1071  000296  0E00               	movlw	0
  1072  000298  2235               	addwfc	___fttol@lval+1,f,c
  1073  00029A  2236               	addwfc	___fttol@lval+2,f,c
  1074  00029C  2237               	addwfc	___fttol@lval+3,f,c
  1075  00029E                     l1165:
  1076  00029E  C034  F02A         	movff	___fttol@lval,?___fttol
  1077  0002A2  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1078  0002A6  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1079  0002AA  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1080  0002AE  0012               	return	
  1081  0002B0                     __end_of___fttol:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           tblptrh	equ	0xFF7
  1085                           tblptrl	equ	0xFF6
  1086                           tablat	equ	0xFF5
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           postdec1	equ	0xFE5
  1090                           fsr1l	equ	0xFE1
  1091                           indf2	equ	0xFDF
  1092                           fsr2h	equ	0xFDA
  1093                           fsr2l	equ	0xFD9
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function ___ftmul *****************
  1097 ;; Defined at:
  1098 ;;		line 62 in file "/opt/microchip/xc8/v1.40/sources/common/ftmul.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  f1              3   26[COMRAM] float 
  1101 ;;  f2              3   29[COMRAM] float 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1104 ;;  sign            1   40[COMRAM] unsigned char 
  1105 ;;  cntr            1   39[COMRAM] unsigned char 
  1106 ;;  exp             1   35[COMRAM] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  3   26[COMRAM] float 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1116 ;;      Params:         6       0       0       0       0       0       0       0       0
  1117 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1118 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1119 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1120 ;;Total ram usage:       15 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		___ftpack
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text5
  1131  0002B0                     __ptext5:
  1132                           	opt stack 0
  1133  0002B0                     ___ftmul:
  1134                           	opt stack 28
  1135                           
  1136                           ;incstack = 0
  1137  0002B0  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1138  0002B4  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1139  0002B6  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1140  0002B8  341C               	rlcf	___ftmul@f1+1,w,c
  1141  0002BA  3621               	rlcf	??___ftmul& (0+255),f,c
  1142  0002BC  E301               	bnc	u431
  1143  0002BE  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1144  0002C0                     u431:
  1145  0002C0  5021               	movf	??___ftmul,w,c
  1146  0002C2  6E24               	movwf	___ftmul@exp,c
  1147  0002C4  5024               	movf	___ftmul@exp,w,c
  1148  0002C6  A4D8               	btfss	status,2,c
  1149  0002C8  D007               	goto	l1081
  1150  0002CA  0E00               	movlw	0
  1151  0002CC  6E1B               	movwf	?___ftmul,c
  1152  0002CE  0E00               	movlw	0
  1153  0002D0  6E1C               	movwf	?___ftmul+1,c
  1154  0002D2  0E00               	movlw	0
  1155  0002D4  6E1D               	movwf	?___ftmul+2,c
  1156  0002D6  0012               	return	
  1157  0002D8                     l1081:
  1158  0002D8  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  1159  0002DC  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1160  0002DE  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1161  0002E0  341F               	rlcf	___ftmul@f2+1,w,c
  1162  0002E2  3621               	rlcf	??___ftmul& (0+255),f,c
  1163  0002E4  E301               	bnc	u451
  1164  0002E6  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1165  0002E8                     u451:
  1166  0002E8  5021               	movf	??___ftmul,w,c
  1167  0002EA  6E29               	movwf	___ftmul@sign,c
  1168  0002EC  5029               	movf	___ftmul@sign,w,c
  1169  0002EE  A4D8               	btfss	status,2,c
  1170  0002F0  D007               	goto	l1087
  1171  0002F2  0E00               	movlw	0
  1172  0002F4  6E1B               	movwf	?___ftmul,c
  1173  0002F6  0E00               	movlw	0
  1174  0002F8  6E1C               	movwf	?___ftmul+1,c
  1175  0002FA  0E00               	movlw	0
  1176  0002FC  6E1D               	movwf	?___ftmul+2,c
  1177  0002FE  0012               	return	
  1178  000300                     l1087:
  1179  000300  5029               	movf	___ftmul@sign,w,c
  1180  000302  0F7B               	addlw	123
  1181  000304  2624               	addwf	___ftmul@exp,f,c
  1182  000306  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  1183  00030A  5020               	movf	___ftmul@f2+2,w,c
  1184  00030C  1A29               	xorwf	___ftmul@sign,f,c
  1185  00030E  0E80               	movlw	128
  1186  000310  1629               	andwf	___ftmul@sign,f,c
  1187  000312  8E1C               	bsf	___ftmul@f1+1,7,c
  1188  000314  8E1F               	bsf	___ftmul@f2+1,7,c
  1189  000316  0EFF               	movlw	255
  1190  000318  161E               	andwf	___ftmul@f2,f,c
  1191  00031A  0EFF               	movlw	255
  1192  00031C  161F               	andwf	___ftmul@f2+1,f,c
  1193  00031E  0E00               	movlw	0
  1194  000320  1620               	andwf	___ftmul@f2+2,f,c
  1195  000322  0E00               	movlw	0
  1196  000324  6E25               	movwf	___ftmul@f3_as_product,c
  1197  000326  0E00               	movlw	0
  1198  000328  6E26               	movwf	___ftmul@f3_as_product+1,c
  1199  00032A  0E00               	movlw	0
  1200  00032C  6E27               	movwf	___ftmul@f3_as_product+2,c
  1201  00032E  0E07               	movlw	7
  1202  000330  6E28               	movwf	___ftmul@cntr,c
  1203  000332                     l1101:
  1204  000332  A01B               	btfss	___ftmul@f1,0,c
  1205  000334  D006               	goto	l1105
  1206  000336  501E               	movf	___ftmul@f2,w,c
  1207  000338  2625               	addwf	___ftmul@f3_as_product,f,c
  1208  00033A  501F               	movf	___ftmul@f2+1,w,c
  1209  00033C  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1210  00033E  5020               	movf	___ftmul@f2+2,w,c
  1211  000340  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1212  000342                     l1105:
  1213  000342  90D8               	bcf	status,0,c
  1214  000344  321D               	rrcf	___ftmul@f1+2,f,c
  1215  000346  321C               	rrcf	___ftmul@f1+1,f,c
  1216  000348  321B               	rrcf	___ftmul@f1,f,c
  1217  00034A  90D8               	bcf	status,0,c
  1218  00034C  361E               	rlcf	___ftmul@f2,f,c
  1219  00034E  361F               	rlcf	___ftmul@f2+1,f,c
  1220  000350  3620               	rlcf	___ftmul@f2+2,f,c
  1221  000352  2E28               	decfsz	___ftmul@cntr,f,c
  1222  000354  D7EE               	goto	l1101
  1223  000356  0E09               	movlw	9
  1224  000358  6E28               	movwf	___ftmul@cntr,c
  1225  00035A                     l1111:
  1226  00035A  A01B               	btfss	___ftmul@f1,0,c
  1227  00035C  D006               	goto	l1115
  1228  00035E  501E               	movf	___ftmul@f2,w,c
  1229  000360  2625               	addwf	___ftmul@f3_as_product,f,c
  1230  000362  501F               	movf	___ftmul@f2+1,w,c
  1231  000364  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1232  000366  5020               	movf	___ftmul@f2+2,w,c
  1233  000368  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1234  00036A                     l1115:
  1235  00036A  90D8               	bcf	status,0,c
  1236  00036C  321D               	rrcf	___ftmul@f1+2,f,c
  1237  00036E  321C               	rrcf	___ftmul@f1+1,f,c
  1238  000370  321B               	rrcf	___ftmul@f1,f,c
  1239  000372  90D8               	bcf	status,0,c
  1240  000374  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1241  000376  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1242  000378  3225               	rrcf	___ftmul@f3_as_product,f,c
  1243  00037A  2E28               	decfsz	___ftmul@cntr,f,c
  1244  00037C  D7EE               	goto	l1111
  1245  00037E  C025  F010         	movff	___ftmul@f3_as_product,___ftpack@arg
  1246  000382  C026  F011         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1247  000386  C027  F012         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1248  00038A  C024  F013         	movff	___ftmul@exp,___ftpack@exp
  1249  00038E  C029  F014         	movff	___ftmul@sign,___ftpack@sign
  1250  000392  EC41  F002         	call	___ftpack	;wreg free
  1251  000396  C010  F01B         	movff	?___ftpack,?___ftmul
  1252  00039A  C011  F01C         	movff	?___ftpack+1,?___ftmul+1
  1253  00039E  C012  F01D         	movff	?___ftpack+2,?___ftmul+2
  1254  0003A2  0012               	return	
  1255  0003A4                     __end_of___ftmul:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           intcon	equ	0xFF2
  1262                           postinc0	equ	0xFEE
  1263                           postdec1	equ	0xFE5
  1264                           fsr1l	equ	0xFE1
  1265                           indf2	equ	0xFDF
  1266                           fsr2h	equ	0xFDA
  1267                           fsr2l	equ	0xFD9
  1268                           status	equ	0xFD8
  1269                           
  1270 ;; *************** function ___ftpack *****************
  1271 ;; Defined at:
  1272 ;;		line 62 in file "/opt/microchip/xc8/v1.40/sources/common/float.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  arg             3   15[COMRAM] unsigned um
  1275 ;;  exp             1   18[COMRAM] unsigned char 
  1276 ;;  sign            1   19[COMRAM] unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  3   15[COMRAM] float 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         5       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        8 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    1
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		___ftmul
  1299 ;;		___lwtoft
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text6
  1304  000482                     __ptext6:
  1305                           	opt stack 0
  1306  000482                     ___ftpack:
  1307                           	opt stack 28
  1308                           
  1309                           ;incstack = 0
  1310  000482  5013               	movf	___ftpack@exp,w,c
  1311  000484  B4D8               	btfsc	status,2,c
  1312  000486  D005               	goto	l1023
  1313  000488  5010               	movf	___ftpack@arg,w,c
  1314  00048A  1011               	iorwf	___ftpack@arg+1,w,c
  1315  00048C  1012               	iorwf	___ftpack@arg+2,w,c
  1316  00048E  A4D8               	btfss	status,2,c
  1317  000490  D00C               	goto	l1029
  1318  000492                     l1023:
  1319  000492  0E00               	movlw	0
  1320  000494  6E10               	movwf	?___ftpack,c
  1321  000496  0E00               	movlw	0
  1322  000498  6E11               	movwf	?___ftpack+1,c
  1323  00049A  0E00               	movlw	0
  1324  00049C  6E12               	movwf	?___ftpack+2,c
  1325  00049E  0012               	return	
  1326  0004A0                     l1027:
  1327  0004A0  2A13               	incf	___ftpack@exp,f,c
  1328  0004A2  90D8               	bcf	status,0,c
  1329  0004A4  3212               	rrcf	___ftpack@arg+2,f,c
  1330  0004A6  3211               	rrcf	___ftpack@arg+1,f,c
  1331  0004A8  3210               	rrcf	___ftpack@arg,f,c
  1332  0004AA                     l1029:
  1333  0004AA  0E00               	movlw	0
  1334  0004AC  1410               	andwf	___ftpack@arg,w,c
  1335  0004AE  6E15               	movwf	??___ftpack& (0+255),c
  1336  0004B0  0E00               	movlw	0
  1337  0004B2  1411               	andwf	___ftpack@arg+1,w,c
  1338  0004B4  6E16               	movwf	(??___ftpack+1)& (0+255),c
  1339  0004B6  0EFE               	movlw	254
  1340  0004B8  1412               	andwf	___ftpack@arg+2,w,c
  1341  0004BA  6E17               	movwf	(??___ftpack+2)& (0+255),c
  1342  0004BC  5015               	movf	??___ftpack,w,c
  1343  0004BE  1016               	iorwf	??___ftpack+1,w,c
  1344  0004C0  1017               	iorwf	??___ftpack+2,w,c
  1345  0004C2  B4D8               	btfsc	status,2,c
  1346  0004C4  D00C               	goto	l1035
  1347  0004C6  D7EC               	goto	l1027
  1348  0004C8                     l1031:
  1349  0004C8  2A13               	incf	___ftpack@exp,f,c
  1350  0004CA  0E01               	movlw	1
  1351  0004CC  2610               	addwf	___ftpack@arg,f,c
  1352  0004CE  0E00               	movlw	0
  1353  0004D0  2211               	addwfc	___ftpack@arg+1,f,c
  1354  0004D2  0E00               	movlw	0
  1355  0004D4  2212               	addwfc	___ftpack@arg+2,f,c
  1356  0004D6  90D8               	bcf	status,0,c
  1357  0004D8  3212               	rrcf	___ftpack@arg+2,f,c
  1358  0004DA  3211               	rrcf	___ftpack@arg+1,f,c
  1359  0004DC  3210               	rrcf	___ftpack@arg,f,c
  1360  0004DE                     l1035:
  1361  0004DE  0E00               	movlw	0
  1362  0004E0  1410               	andwf	___ftpack@arg,w,c
  1363  0004E2  6E15               	movwf	??___ftpack& (0+255),c
  1364  0004E4  0E00               	movlw	0
  1365  0004E6  1411               	andwf	___ftpack@arg+1,w,c
  1366  0004E8  6E16               	movwf	(??___ftpack+1)& (0+255),c
  1367  0004EA  0EFF               	movlw	255
  1368  0004EC  1412               	andwf	___ftpack@arg+2,w,c
  1369  0004EE  6E17               	movwf	(??___ftpack+2)& (0+255),c
  1370  0004F0  5015               	movf	??___ftpack,w,c
  1371  0004F2  1016               	iorwf	??___ftpack+1,w,c
  1372  0004F4  1017               	iorwf	??___ftpack+2,w,c
  1373  0004F6  B4D8               	btfsc	status,2,c
  1374  0004F8  D006               	goto	l1039
  1375  0004FA  D7E6               	goto	l1031
  1376  0004FC                     l1037:
  1377  0004FC  0613               	decf	___ftpack@exp,f,c
  1378  0004FE  90D8               	bcf	status,0,c
  1379  000500  3610               	rlcf	___ftpack@arg,f,c
  1380  000502  3611               	rlcf	___ftpack@arg+1,f,c
  1381  000504  3612               	rlcf	___ftpack@arg+2,f,c
  1382  000506                     l1039:
  1383  000506  BE11               	btfsc	___ftpack@arg+1,7,c
  1384  000508  D003               	goto	l370
  1385  00050A  0E02               	movlw	2
  1386  00050C  6013               	cpfslt	___ftpack@exp,c
  1387  00050E  D7F6               	goto	l1037
  1388  000510                     l370:
  1389  000510  A013               	btfss	___ftpack@exp,0,c
  1390  000512  9E11               	bcf	___ftpack@arg+1,7,c
  1391  000514  90D8               	bcf	status,0,c
  1392  000516  3213               	rrcf	___ftpack@exp,f,c
  1393  000518  5013               	movf	___ftpack@exp,w,c
  1394  00051A  1212               	iorwf	___ftpack@arg+2,f,c
  1395  00051C  5014               	movf	___ftpack@sign,w,c
  1396  00051E  A4D8               	btfss	status,2,c
  1397  000520  8E12               	bsf	___ftpack@arg+2,7,c
  1398  000522  C010  F010         	movff	___ftpack@arg,?___ftpack
  1399  000526  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  1400  00052A  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  1401  00052E  0012               	return	
  1402  000530                     __end_of___ftpack:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           intcon	equ	0xFF2
  1409                           postinc0	equ	0xFEE
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           indf2	equ	0xFDF
  1413                           fsr2h	equ	0xFDA
  1414                           fsr2l	equ	0xFD9
  1415                           status	equ	0xFD8
  1416                           
  1417 ;; *************** function _CHECK *****************
  1418 ;; Defined at:
  1419 ;;		line 169 in file "main.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1435 ;;      Temps:         15       0       0       0       0       0       0       0       0
  1436 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:       15 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		Interrupt level 2
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	intcode
  1447  000008                     __pintcode:
  1448                           	opt stack 0
  1449  000008                     _CHECK:
  1450                           	opt stack 28
  1451                           
  1452                           ;incstack = 0
  1453  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1454  00000A  EDD2  F001         	call	int_func,f	;refresh shadow registers
  1455                           tblptru	equ	0xFF8
  1456                           tblptrh	equ	0xFF7
  1457                           tblptrl	equ	0xFF6
  1458                           tablat	equ	0xFF5
  1459                           intcon	equ	0xFF2
  1460                           postinc0	equ	0xFEE
  1461                           postdec1	equ	0xFE5
  1462                           fsr1l	equ	0xFE1
  1463                           indf2	equ	0xFDF
  1464                           fsr2h	equ	0xFDA
  1465                           fsr2l	equ	0xFD9
  1466                           status	equ	0xFD8
  1467                           
  1468                           	psect	intcode_body
  1469  0003A4                     __pintcode_body:
  1470                           	opt stack 28
  1471  0003A4                     int_func:
  1472                           	opt stack 28
  1473  0003A4  0006               	pop		; remove dummy address from shadow register refresh
  1474  0003A6  CFFA F002          	movff	pclath,??_CHECK+1
  1475  0003AA  CFFB F003          	movff	pclatu,??_CHECK+2
  1476  0003AE  CFE9 F004          	movff	fsr0l,??_CHECK+3
  1477  0003B2  CFEA F005          	movff	fsr0h,??_CHECK+4
  1478  0003B6  CFE1 F006          	movff	fsr1l,??_CHECK+5
  1479  0003BA  CFE2 F007          	movff	fsr1h,??_CHECK+6
  1480  0003BE  CFD9 F008          	movff	fsr2l,??_CHECK+7
  1481  0003C2  CFDA F009          	movff	fsr2h,??_CHECK+8
  1482  0003C6  CFF3 F00A          	movff	prodl,??_CHECK+9
  1483  0003CA  CFF4 F00B          	movff	prodh,??_CHECK+10
  1484  0003CE  CFF6 F00C          	movff	tblptrl,??_CHECK+11
  1485  0003D2  CFF7 F00D          	movff	tblptrh,??_CHECK+12
  1486  0003D6  CFF8 F00E          	movff	tblptru,??_CHECK+13
  1487  0003DA  CFF5 F00F          	movff	tablat,??_CHECK+14
  1488                           
  1489                           ;main.c: 175: if (TMR0IF == 1)
  1490  0003DE  A4F2               	btfss	intcon,2,c	;volatile
  1491  0003E0  D032               	goto	i2l85
  1492                           
  1493                           ;main.c: 176: {
  1494                           ;main.c: 177: ((void)(TMR0H=((5536)>>8),TMR0L=((5536)&0xFF)));
  1495  0003E2  0E15               	movlw	21
  1496  0003E4  6ED7               	movwf	4055,c	;volatile
  1497  0003E6  0EA0               	movlw	160
  1498  0003E8  6ED6               	movwf	4054,c	;volatile
  1499                           
  1500                           ;main.c: 179: RB0 = 1;
  1501  0003EA  8081               	bsf	3969,0,c	;volatile
  1502                           
  1503                           ;main.c: 180: RB1 = 1;
  1504  0003EC  8281               	bsf	3969,1,c	;volatile
  1505                           
  1506                           ;main.c: 181: RB2 = 1;
  1507  0003EE  8481               	bsf	3969,2,c	;volatile
  1508                           
  1509                           ;main.c: 182: RB3 = 1;
  1510  0003F0  8681               	bsf	3969,3,c	;volatile
  1511                           
  1512                           ;main.c: 183: RB4 = 1;
  1513  0003F2  8881               	bsf	3969,4,c	;volatile
  1514                           
  1515                           ;main.c: 184: _delay((unsigned long)((1000)*(48000000/4000000.0)));
  1516  0003F4  0E10               	movlw	16
  1517  0003F6  6E01               	movwf	??_CHECK& (0+255),c
  1518  0003F8  0E94               	movlw	148
  1519  0003FA                     i2u57_47:
  1520  0003FA  2EE8               	decfsz	wreg,f,c
  1521  0003FC  D7FE               	bra	i2u57_47
  1522  0003FE  2E01               	decfsz	??_CHECK& (0+255),f,c
  1523  000400  D7FC               	bra	i2u57_47
  1524  000402  D000               	nop2	
  1525                           
  1526                           ;main.c: 188: for(count_deg=0;count_deg<=180;count_deg++)
  1527  000404  0E00               	movlw	0
  1528  000406  6E43               	movwf	_count_deg,c
  1529  000408                     i2l991:
  1530  000408  0EB4               	movlw	180
  1531  00040A  6443               	cpfsgt	_count_deg,c
  1532  00040C  D001               	goto	i2l995
  1533  00040E  D01A               	goto	i2l79
  1534  000410                     i2l995:
  1535                           
  1536                           ;main.c: 189: {
  1537                           ;main.c: 191: if(deg0 == count_deg) RB0 = 0;
  1538  000410  5043               	movf	_count_deg,w,c
  1539  000412  183E               	xorwf	_deg0,w,c
  1540  000414  B4D8               	btfsc	status,2,c
  1541  000416  9081               	bcf	3969,0,c	;volatile
  1542                           
  1543                           ;main.c: 192: if(deg1 == count_deg) RB1 = 0;
  1544  000418  5043               	movf	_count_deg,w,c
  1545  00041A  183F               	xorwf	_deg1,w,c
  1546  00041C  B4D8               	btfsc	status,2,c
  1547  00041E  9281               	bcf	3969,1,c	;volatile
  1548                           
  1549                           ;main.c: 193: if(deg2 == count_deg) RB2 = 0;
  1550  000420  5043               	movf	_count_deg,w,c
  1551  000422  1840               	xorwf	_deg2,w,c
  1552  000424  B4D8               	btfsc	status,2,c
  1553  000426  9481               	bcf	3969,2,c	;volatile
  1554                           
  1555                           ;main.c: 194: if(deg3 == count_deg) RB3 = 0;
  1556  000428  5043               	movf	_count_deg,w,c
  1557  00042A  1841               	xorwf	_deg3,w,c
  1558  00042C  B4D8               	btfsc	status,2,c
  1559  00042E  9681               	bcf	3969,3,c	;volatile
  1560                           
  1561                           ;main.c: 195: if(deg4 == count_deg) RB4 = 0;
  1562  000430  5043               	movf	_count_deg,w,c
  1563  000432  1842               	xorwf	_deg4,w,c
  1564  000434  B4D8               	btfsc	status,2,c
  1565  000436  9881               	bcf	3969,4,c	;volatile
  1566                           
  1567                           ;main.c: 198: _delay(40);
  1568  000438  0E0D               	movlw	13
  1569  00043A                     i2u58_47:
  1570  00043A  2EE8               	decfsz	wreg,f,c
  1571  00043C  D7FE               	bra	i2u58_47
  1572  00043E  F000               	nop	
  1573  000440  2A43               	incf	_count_deg,f,c
  1574  000442  D7E2               	goto	i2l991
  1575  000444                     i2l79:
  1576                           
  1577                           ;main.c: 204: }
  1578                           ;main.c: 211: TMR0IF = 0;
  1579  000444  94F2               	bcf	intcon,2,c	;volatile
  1580  000446                     i2l85:
  1581  000446  C00F  FFF5         	movff	??_CHECK+14,tablat
  1582  00044A  C00E  FFF8         	movff	??_CHECK+13,tblptru
  1583  00044E  C00D  FFF7         	movff	??_CHECK+12,tblptrh
  1584  000452  C00C  FFF6         	movff	??_CHECK+11,tblptrl
  1585  000456  C00B  FFF4         	movff	??_CHECK+10,prodh
  1586  00045A  C00A  FFF3         	movff	??_CHECK+9,prodl
  1587  00045E  C009  FFDA         	movff	??_CHECK+8,fsr2h
  1588  000462  C008  FFD9         	movff	??_CHECK+7,fsr2l
  1589  000466  C007  FFE2         	movff	??_CHECK+6,fsr1h
  1590  00046A  C006  FFE1         	movff	??_CHECK+5,fsr1l
  1591  00046E  C005  FFEA         	movff	??_CHECK+4,fsr0h
  1592  000472  C004  FFE9         	movff	??_CHECK+3,fsr0l
  1593  000476  C003  FFFB         	movff	??_CHECK+2,pclatu
  1594  00047A  C002  FFFA         	movff	??_CHECK+1,pclath
  1595  00047E  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1596  000480  0011               	retfie		f
  1597  000482                     __end_of_CHECK:
  1598                           	opt stack 0
  1599  0000                     pclatu	equ	0xFFB
  1600                           pclath	equ	0xFFA
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           prodh	equ	0xFF4
  1606                           prodl	equ	0xFF3
  1607                           intcon	equ	0xFF2
  1608                           postinc0	equ	0xFEE
  1609                           fsr0h	equ	0xFEA
  1610                           fsr0l	equ	0xFE9
  1611                           wreg	equ	0xFE8
  1612                           postdec1	equ	0xFE5
  1613                           fsr1h	equ	0xFE2
  1614                           fsr1l	equ	0xFE1
  1615                           indf2	equ	0xFDF
  1616                           fsr2h	equ	0xFDA
  1617                           fsr2l	equ	0xFD9
  1618                           status	equ	0xFD8
  1619                           pclatu	equ	0xFFB
  1620                           pclath	equ	0xFFA
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           fsr0h	equ	0xFEA
  1630                           fsr0l	equ	0xFE9
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           fsr1h	equ	0xFE2
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640                           	psect	rparam
  1641  0000                     pclatu	equ	0xFFB
  1642                           pclath	equ	0xFFA
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           prodh	equ	0xFF4
  1648                           prodl	equ	0xFF3
  1649                           intcon	equ	0xFF2
  1650                           postinc0	equ	0xFEE
  1651                           fsr0h	equ	0xFEA
  1652                           fsr0l	equ	0xFE9
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           indf2	equ	0xFDF
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8
  1661                           
  1662                           	psect	temp
  1663  000044                     btemp:
  1664                           	opt stack 0
  1665  000044                     	ds	1
  1666  0000                     int$flags	set	btemp
  1667                           pclatu	equ	0xFFB
  1668                           pclath	equ	0xFFA
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           intcon	equ	0xFF2
  1676                           postinc0	equ	0xFEE
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         1
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    start_convert@pval2	PTR unsigned char  size(2) Largest target is 2
		 -> start_convert@val(COMRAM[2]), 

    start_convert@pval1	PTR unsigned char  size(2) Largest target is 2
		 -> start_convert@val(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _CHECK in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CHECK in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CHECK in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CHECK in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CHECK in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CHECK in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CHECK in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CHECK in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CHECK in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6104
                            ___ftmul
                            ___fttol
                           ___lwtoft
                      _int_converter
                      _start_convert
 ---------------------------------------------------------------------------------
 (1) _start_convert                                        9     7      2     138
                                             15 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _int_converter                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2334
                                             23 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     572
                                             41 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3060
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1992
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _CHECK                                               15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _int_converter
   _start_convert

 _CHECK (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      43       1       71.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      20        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Feb  9 23:59:03 2017

            __CFG_BOR$ON 000000       start_convert@pval1 0015       start_convert@pval2 0012  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l140 0598  
                    l132 054A                      l134 054E                      l143 059E  
                    l135 0554                      l136 055E                      l137 0564  
                    l370 0510             __CFG_CPB$OFF 000000                      _RB0 007C08  
                    _RB1 007C09                      _RB2 007C0A                      _RB3 007C0B  
                    _RB4 007C0C                      u510 0206                      u431 02C0  
           __CFG_CPD$OFF 000000                      u451 02E8                      u515 01FE  
                    u491 01CC                      _PSA 007EAB                      _val 003C  
                    wreg 000FE8             __CFG_LVP$OFF 000000     start_convert@channel 0014  
           __CFG_WDT$OFF 000000                     l1101 0332                     l1031 04C8  
                   l1023 0492                     l1111 035A                     l1105 0342  
                   l1035 04DE                     l1027 04A0                     l1115 036A  
                   l1211 0048                     l1037 04FC                     l1029 04AA  
                   l1061 056C                     l1039 0506                     l1151 025E  
                   l1081 02D8                     l1161 0288                     l1129 01E8  
                   l1147 024E                     l1067 0576                     l1165 029E  
                   l1157 0276                     l1087 0300                     l1159 0282  
                   _ADIF 007CF6                     _ADFM 007E07                     _ADON 007E10  
                   _CHS0 007E12                     _CHS1 007E13                     _CHS2 007E14  
                   _CHS3 007E15                     _T0CS 007EAD                     _IPEN 007E87  
                   i2l85 0446                     i2l79 0444                     _deg0 003E  
                   _deg1 003F                     _deg2 0040                     _deg3 0041  
                   _deg4 0042                     _main 0012             ___ftpack@arg 0010  
           ___ftpack@exp 0013                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0044  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___ftmul@cntr 0028  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 0038  
           ___fttol@lval 0034            __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000  
                  _ADCS0 007E00                    _ADCS1 007E01                    _ADCS2 007E02  
                  ?_main 0001                    _ACQT0 007E03                    _ACQT1 007E04  
                  _ACQT2 007E05                    _CHECK 0008          __end_of___ftmul 03A4  
        __end_of___fttol 02B0                    _T0PS0 007EA8                    _T0PS1 007EA9  
                  _T0PS2 007EAA                    _PCFG0 007E08                    _PCFG1 007E09  
                  _PCFG2 007E0A                    _PCFG3 007E0B                    i2l991 0408  
                  i2l995 0410                    _TMR0H 000FD7                    _TMR0L 000FD6  
          __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            _start_convert 0530  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___ftpack@sign 0014                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 05C4             __end_of_main 01BC                   ??_main 0039  
          ___fttol@sign1 0033                   ?_CHECK 0001            __activetblptr 000002  
         ?_start_convert 0010                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _T08BIT 007EAE         __end_of___ftpack 0530         __end_of___lwtoft 0618  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _TRISB0 007C98                   _TRISB1 007C99                   _TRISB2 007C9A  
                 _TRISB3 007C9B                   _TRISB4 007C9C           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                ??___ftmul 0021                ??___fttol 002E  
  ___ftmul@f3_as_product 0025             __pdataCOMRAM 003E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 05E6          __CFG_PBADEN$OFF 000000   __size_of_int_converter 001A  
          __end_of_CHECK 0482            ___rparam_used 000001               ___ftmul@f1 001B  
             ___ftmul@f2 001E               ___fttol@f1 002A           __pcstackCOMRAM 0001  
             ___lwtoft@c 0018                  ??_CHECK 0001          ??_start_convert 0012  
             __pnvCOMRAM 0039                ?___ftpack 0010                ?___lwtoft 0018  
          _int_converter 0618                  i2u57_47 03FA                  i2u58_47 043A  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___ftmul 02B0                  ___fttol 01BC                  __pcinit 05C4  
             ??___ftpack 0015                  __ramtop 0800           ?_int_converter 0001  
                __ptext0 0012                  __ptext1 0530                  __ptext2 0618  
                __ptext3 05F4                  __ptext4 01BC                  __ptext5 02B0  
                __ptext6 0482               ??___lwtoft 001B           __pintcode_body 03A4  
   end_of_initialization 05E6            __Lmediumconst 0000                  int_func 03A4  
                postdec1 000FE5                  postinc0 000FEE              ___ftmul@exp 0024  
        ??_int_converter 0010            __pidataCOMRAM 0632      start_initialization 05C4  
       __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE    __end_of_start_convert 05C4  
            __pbssCOMRAM 0043        __size_of___lwtoft 0024                __pintcode 0008  
               ?___ftmul 001B                 ?___fttol 002A           __size_of_CHECK 047A  
              _count_deg 0043                _val_inter 0039         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2         start_convert@val 0017                copy_data0 05D8  
               __Hrparam 0000                 __Lrparam 0000         __size_of___ftmul 00F4  
       __size_of___fttol 00F4                 ___ftpack 0482                 ___lwtoft 05F4  
          __size_of_main 01AA                 int$flags 0044    __end_of_int_converter 0632  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000   __size_of_start_convert 0094  
