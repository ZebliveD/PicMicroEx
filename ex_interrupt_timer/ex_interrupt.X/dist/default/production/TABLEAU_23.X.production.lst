

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed May  4 19:23:08 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  00216A                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _counts0_limit
    57  00216A  01D6               	dw	470
    58                           
    59                           ;initializer for _counts1_limit
    60  00216C  0017               	dw	23
    61                           
    62                           ;initializer for _counts2_limit
    63  00216E  0017               	dw	23
    64                           
    65                           	psect	idataBANK0
    66  002170                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _distance
    70  002170  00                 	db	0
    71  002171  C8                 	db	200
    72  002172  42                 	db	66
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	opt stack 0
    77  000800  00                 	db	0
    78  000801                     _dpowers:
    79                           	opt stack 0
    80  000801  0001               	dw	1
    81  000803  0000               	dw	0
    82  000805  000A               	dw	10
    83  000807  0000               	dw	0
    84  000809  0064               	dw	100
    85  00080B  0000               	dw	0
    86  00080D  03E8               	dw	1000
    87  00080F  0000               	dw	0
    88  000811  2710               	dw	10000
    89  000813  0000               	dw	0
    90  000815  86A0               	dw	34464
    91  000817  0001               	dw	1
    92  000819  4240               	dw	16960
    93  00081B  000F               	dw	15
    94  00081D  9680               	dw	38528
    95  00081F  0098               	dw	152
    96  000821  E100               	dw	57600
    97  000823  05F5               	dw	1525
    98  000825  CA00               	dw	51712
    99  000827  3B9A               	dw	15258
   100  000829                     __end_of_dpowers:
   101                           	opt stack 0
   102  000829                     STR_1:
   103  000829  25                 	db	37
   104  00082A  6C                 	db	108	;'l'
   105  00082B  75                 	db	117	;'u'
   106  00082C  2E                 	db	46
   107  00082D  25                 	db	37
   108  00082E  36                 	db	54	;'6'
   109  00082F  2E                 	db	46
   110  000830  36                 	db	54	;'6'
   111  000831  6C                 	db	108	;'l'
   112  000832  75                 	db	117	;'u'
   113  000833  00                 	db	0
   114                           
   115                           ; #config settings
   116  000834  00                 	db	0	; dummy byte at the end
   117  0000                     
   118                           	psect	nvBANK0
   119  0000AF                     __pnvBANK0:
   120                           	opt stack 0
   121  0000AF                     _N:
   122                           	opt stack 0
   123  0000AF                     	ds	2
   124  0000                     _TMR0	set	4054
   125  0000                     _CCP1CON	set	4029
   126  0000                     _CCP2CON	set	4026
   127  0000                     _CCPR1L	set	4030
   128  0000                     _CCPR2L	set	4027
   129  0000                     _INTCONbits	set	4082
   130  0000                     _PORTB	set	3969
   131  0000                     _PORTBbits	set	3969
   132  0000                     _PORTCbits	set	3970
   133  0000                     _PORTDbits	set	3971
   134  0000                     _PR2	set	4043
   135  0000                     _RCREG	set	4014
   136  0000                     _SPBRG	set	4015
   137  0000                     _T1CONbits	set	4045
   138  0000                     _T2CON	set	4042
   139  0000                     _TMR1H	set	4047
   140  0000                     _TMR1L	set	4046
   141  0000                     _TRISBbits	set	3987
   142  0000                     _TRISDbits	set	3989
   143  0000                     _TXREG	set	4013
   144  0000                     _BRGH	set	32098
   145  0000                     _CREN	set	32092
   146  0000                     _INT0IE	set	32660
   147  0000                     _INT0IF	set	32657
   148  0000                     _INT1IE	set	32643
   149  0000                     _INT1IF	set	32640
   150  0000                     _INT2IF	set	32641
   151  0000                     _INTEDG0	set	32654
   152  0000                     _INTEDG1	set	32653
   153  0000                     _INTEDG2	set	32652
   154  0000                     _PEIE	set	32662
   155  0000                     _PSA	set	32427
   156  0000                     _RCIF	set	31989
   157  0000                     _SPEN	set	32095
   158  0000                     _SYNC	set	32100
   159  0000                     _T08BIT	set	32430
   160  0000                     _T0CS	set	32429
   161  0000                     _T0PS0	set	32424
   162  0000                     _T0PS1	set	32425
   163  0000                     _T0PS2	set	32426
   164  0000                     _TMR1IE	set	31976
   165  0000                     _TMR1IF	set	31984
   166  0000                     _TMR1IP	set	31992
   167  0000                     _TRISC1	set	31905
   168  0000                     _TRISC2	set	31906
   169  0000                     _TRISC6	set	31910
   170  0000                     _TRISC7	set	31911
   171  0000                     _TRMT	set	32097
   172  0000                     _TXEN	set	32101
   173                           
   174                           	psect	cinit
   175  001E6A                     __pcinit:
   176                           	opt stack 0
   177  001E6A                     start_initialization:
   178                           	opt stack 0
   179  001E6A                     __initialization:
   180                           	opt stack 0
   181                           
   182                           ; Clear objects allocated to BANK2 (100 bytes)
   183  001E6A  EE02  F000         	lfsr	0,__pbssBANK2
   184  001E6E  0E64               	movlw	100
   185  001E70                     clear_0:
   186  001E70  6AEE               	clrf	postinc0,c
   187  001E72  06E8               	decf	wreg,f,c
   188  001E74  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK1 (200 bytes)
   191  001E76  EE01  F000         	lfsr	0,__pbssBANK1
   192  001E7A  0EC8               	movlw	200
   193  001E7C                     clear_1:
   194  001E7C  6AEE               	clrf	postinc0,c
   195  001E7E  06E8               	decf	wreg,f,c
   196  001E80  E1FD               	bnz	clear_1
   197                           
   198                           ; Clear objects allocated to BANK0 (33 bytes)
   199  001E82  EE00  F08B         	lfsr	0,__pbssBANK0
   200  001E86  0E21               	movlw	33
   201  001E88                     clear_2:
   202  001E88  6AEE               	clrf	postinc0,c
   203  001E8A  06E8               	decf	wreg,f,c
   204  001E8C  E1FD               	bnz	clear_2
   205                           
   206                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   207  001E8E  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   208                           
   209                           ; Clear objects allocated to COMRAM (9 bytes)
   210  001E90  EE00  F036         	lfsr	0,__pbssCOMRAM
   211  001E94  0E09               	movlw	9
   212  001E96                     clear_3:
   213  001E96  6AEE               	clrf	postinc0,c
   214  001E98  06E8               	decf	wreg,f,c
   215  001E9A  E1FD               	bnz	clear_3
   216                           
   217                           ; Initialize objects allocated to BANK0 (3 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  001E9C  0E70               	movlw	low __pidataBANK0
   220  001E9E  6EF6               	movwf	tblptrl,c
   221  001EA0  0E21               	movlw	high __pidataBANK0
   222  001EA2  6EF7               	movwf	tblptrh,c
   223  001EA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  001EA6  6EF8               	movwf	tblptru,c
   225  001EA8  0009               	tblrd		*+	;fetch initializer
   226  001EAA  CFF5 F0AC          	movff	tablat,__pdataBANK0
   227  001EAE  0009               	tblrd		*+	;fetch initializer
   228  001EB0  CFF5 F0AD          	movff	tablat,__pdataBANK0+1
   229  001EB4  0009               	tblrd		*+	;fetch initializer
   230  001EB6  CFF5 F0AE          	movff	tablat,__pdataBANK0+2
   231                           
   232                           ; Initialize objects allocated to COMRAM (6 bytes)
   233                           ; load TBLPTR registers with __pidataCOMRAM
   234  001EBA  0E6A               	movlw	low __pidataCOMRAM
   235  001EBC  6EF6               	movwf	tblptrl,c
   236  001EBE  0E21               	movlw	high __pidataCOMRAM
   237  001EC0  6EF7               	movwf	tblptrh,c
   238  001EC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   239  001EC4  6EF8               	movwf	tblptru,c
   240  001EC6  EE00  F03F         	lfsr	0,__pdataCOMRAM
   241  001ECA  EE10 F006          	lfsr	1,6
   242  001ECE                     copy_data0:
   243  001ECE  0009               	tblrd		*+
   244  001ED0  CFF5 FFEE          	movff	tablat,postinc0
   245  001ED4  50E5               	movf	postdec1,w,c
   246  001ED6  50E1               	movf	fsr1l,w,c
   247  001ED8  E1FA               	bnz	copy_data0
   248  001EDA                     end_of_initialization:
   249                           	opt stack 0
   250  001EDA                     __end_of__initialization:
   251                           	opt stack 0
   252  001EDA  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  001EDC  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  001EDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  001EE0  6EF8               	movwf	tblptru,c
   256  001EE2  0100               	movlb	0
   257  001EE4  EF1B  F004         	goto	_main	;jump to C main() function
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           tblptrl	equ	0xFF6
   261                           tablat	equ	0xFF5
   262                           postinc0	equ	0xFEE
   263                           wreg	equ	0xFE8
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bitbssCOMRAM
   268  000228                     __pbitbssCOMRAM:
   269                           	opt stack 0
   270  000228                     _positionok1:
   271                           	opt stack 0
   272  000228                     	ds	1
   273  000229                     _positionok2:
   274                           	opt stack 0
   275  000229                     	ds	1
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	bssCOMRAM
   286  000036                     __pbssCOMRAM:
   287                           	opt stack 0
   288  000036                     _clk_count:
   289                           	opt stack 0
   290  000036                     	ds	2
   291  000038                     _count_s0:
   292                           	opt stack 0
   293  000038                     	ds	2
   294  00003A                     _count_s1:
   295                           	opt stack 0
   296  00003A                     	ds	2
   297  00003C                     _count_s2:
   298                           	opt stack 0
   299  00003C                     	ds	2
   300  00003E                     _clk_second:
   301                           	opt stack 0
   302  00003E                     	ds	1
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	dataCOMRAM
   313  00003F                     __pdataCOMRAM:
   314                           	opt stack 0
   315  00003F                     _counts0_limit:
   316                           	opt stack 0
   317  00003F                     	ds	2
   318  000041                     _counts1_limit:
   319                           	opt stack 0
   320  000041                     	ds	2
   321  000043                     _counts2_limit:
   322                           	opt stack 0
   323  000043                     	ds	2
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssBANK0
   334  00008B                     __pbssBANK0:
   335                           	opt stack 0
   336  00008B                     _inter:
   337                           	opt stack 0
   338  00008B                     	ds	3
   339  00008E                     _buf:
   340                           	opt stack 0
   341  00008E                     	ds	2
   342  000090                     _countd:
   343                           	opt stack 0
   344  000090                     	ds	2
   345  000092                     _countg:
   346                           	opt stack 0
   347  000092                     	ds	2
   348  000094                     _i:
   349                           	opt stack 0
   350  000094                     	ds	2
   351  000096                     _pulse_controle:
   352                           	opt stack 0
   353  000096                     	ds	2
   354  000098                     _new_value:
   355                           	opt stack 0
   356  000098                     	ds	1
   357  000099                     ftoa@buf:
   358                           	opt stack 0
   359  000099                     	ds	17
   360  0000AA                     _status:
   361                           	opt stack 0
   362  0000AA                     	ds	2
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           	psect	dataBANK0
   373  0000AC                     __pdataBANK0:
   374                           	opt stack 0
   375  0000AC                     _distance:
   376                           	opt stack 0
   377  0000AC                     	ds	3
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	bssBANK1
   388  000100                     __pbssBANK1:
   389                           	opt stack 0
   390  000100                     _tab_command:
   391                           	opt stack 0
   392  000100                     	ds	100
   393  000164                     _tab_para_g:
   394                           	opt stack 0
   395  000164                     	ds	100
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1l	equ	0xFE1
   404                           
   405                           	psect	bssBANK2
   406  000200                     __pbssBANK2:
   407                           	opt stack 0
   408  000200                     _tab_para_d:
   409                           	opt stack 0
   410  000200                     	ds	100
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420                           	psect	cstackBANK0
   421  000060                     __pcstackBANK0:
   422                           	opt stack 0
   423  000060                     ??___fttol:
   424  000060                     ?_sprintf:
   425                           	opt stack 0
   426  000060                     sprintf@sp:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  000060                     	ds	2
   431  000062                     sprintf@f:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x2
   435  000062                     	ds	3
   436  000065                     ___fttol@sign1:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x5
   440  000065                     	ds	1
   441  000066                     ___fttol@lval:
   442                           	opt stack 0
   443                           
   444                           ; 4 bytes @ 0x6
   445  000066                     	ds	4
   446  00006A                     ___fttol@exp1:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0xA
   450  00006A                     	ds	2
   451  00006C                     sprintf@flag:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0xC
   455  00006C                     	ds	1
   456  00006D                     sprintf@ap:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0xD
   460  00006D                     	ds	2
   461  00006F                     sprintf@val:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0xF
   465  00006F                     	ds	4
   466  000073                     sprintf@width:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x13
   470  000073                     	ds	2
   471  000075                     sprintf@prec:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x15
   475  000075                     	ds	2
   476  000077                     sprintf@c:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x17
   480  000077                     	ds	1
   481  000078                     ?_ftoa:
   482                           	opt stack 0
   483  000078                     ftoa@f:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x18
   487  000078                     	ds	3
   488  00007B                     ftoa@status:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x1B
   492  00007B                     	ds	2
   493  00007D                     ftoa@rem:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x1D
   497  00007D                     	ds	4
   498  000081                     ftoa@l:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x21
   502  000081                     	ds	4
   503  000085                     ftoa@cp:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x25
   507  000085                     	ds	2
   508  000087                     ??_main:
   509                           
   510                           ; 0 bytes @ 0x27
   511  000087                     	ds	2
   512  000089                     main@jj:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x29
   516  000089                     	ds	2
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           
   526                           	psect	cstackCOMRAM
   527  000001                     __pcstackCOMRAM:
   528                           	opt stack 0
   529  000001                     ?i2___ftpack:
   530                           	opt stack 0
   531  000001                     i2___ftpack@arg:
   532                           	opt stack 0
   533                           
   534                           ; 3 bytes @ 0x0
   535  000001                     	ds	3
   536  000004                     i2___ftpack@exp:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x3
   540  000004                     	ds	1
   541  000005                     i2___ftpack@sign:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x4
   545  000005                     	ds	1
   546  000006                     ??i2___ftpack:
   547                           
   548                           ; 0 bytes @ 0x5
   549  000006                     	ds	3
   550  000009                     ?___lwtoft:
   551                           	opt stack 0
   552  000009                     ___lwtoft@c:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x8
   556  000009                     	ds	3
   557  00000C                     ??_CHECK:
   558  00000C                     
   559                           ; 0 bytes @ 0xB
   560  00000C                     	ds	14
   561  00001A                     ??_isdigit:
   562  00001A                     ?___wmul:
   563                           	opt stack 0
   564  00001A                     ?___ftpack:
   565                           	opt stack 0
   566  00001A                     ?___ftneg:
   567                           	opt stack 0
   568  00001A                     ?___aldiv:
   569                           	opt stack 0
   570  00001A                     ?___lldiv:
   571                           	opt stack 0
   572  00001A                     in_config@droite:
   573                           	opt stack 0
   574  00001A                     UART_Write@data:
   575                           	opt stack 0
   576  00001A                     SetPWMDutyD@DutyCycle:
   577                           	opt stack 0
   578  00001A                     SetPWMDutyG@DutyCycle:
   579                           	opt stack 0
   580  00001A                     ___wmul@multiplier:
   581                           	opt stack 0
   582  00001A                     ___ftpack@arg:
   583                           	opt stack 0
   584  00001A                     ___ftge@ff1:
   585                           	opt stack 0
   586  00001A                     ___ftneg@f1:
   587                           	opt stack 0
   588  00001A                     ___aldiv@dividend:
   589                           	opt stack 0
   590  00001A                     ___lldiv@dividend:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x19
   594  00001A                     	ds	1
   595  00001B                     in_config@gauche:
   596                           	opt stack 0
   597  00001B                     _isdigit$880:
   598                           	opt stack 0
   599  00001B                     UART_Write_Text@text:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1A
   603  00001B                     	ds	1
   604  00001C                     ??_SetPWMDutyD:
   605  00001C                     ??_SetPWMDutyG:
   606  00001C                     isdigit@c:
   607                           	opt stack 0
   608  00001C                     ___wmul@multiplicand:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x1B
   612  00001C                     	ds	1
   613  00001D                     ___ftpack@exp:
   614                           	opt stack 0
   615  00001D                     UART_Write_Text@i:
   616                           	opt stack 0
   617  00001D                     ___ftge@ff2:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x1C
   621  00001D                     	ds	1
   622  00001E                     ___ftpack@sign:
   623                           	opt stack 0
   624  00001E                     ___wmul@product:
   625                           	opt stack 0
   626  00001E                     ___aldiv@divisor:
   627                           	opt stack 0
   628  00001E                     ___lldiv@divisor:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x1D
   632  00001E                     	ds	1
   633  00001F                     ??___ftpack:
   634                           
   635                           ; 0 bytes @ 0x1E
   636  00001F                     	ds	1
   637  000020                     ??___ftge:
   638                           
   639                           ; 0 bytes @ 0x1F
   640  000020                     	ds	2
   641  000022                     ?___ftadd:
   642                           	opt stack 0
   643  000022                     ?___ftmul:
   644                           	opt stack 0
   645  000022                     ?___lltoft:
   646                           	opt stack 0
   647  000022                     ___aldiv@counter:
   648                           	opt stack 0
   649  000022                     ___ftadd@f1:
   650                           	opt stack 0
   651  000022                     ___ftmul@f1:
   652                           	opt stack 0
   653  000022                     ___lldiv@quotient:
   654                           	opt stack 0
   655  000022                     ___lltoft@c:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x21
   659  000022                     	ds	1
   660  000023                     ___aldiv@sign:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x22
   664  000023                     	ds	1
   665  000024                     ___aldiv@quotient:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x23
   669  000024                     	ds	1
   670  000025                     ___ftadd@f2:
   671                           	opt stack 0
   672  000025                     ___ftmul@f2:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x24
   676  000025                     	ds	1
   677  000026                     ??___lltoft:
   678  000026                     ___lldiv@counter:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x25
   682  000026                     	ds	1
   683  000027                     ?___llmod:
   684                           	opt stack 0
   685  000027                     ___llmod@dividend:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0x26
   689  000027                     	ds	1
   690  000028                     ??___ftadd:
   691  000028                     ??___ftmul:
   692  000028                     UART_Init@baudrate:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x27
   696  000028                     	ds	2
   697  00002A                     ___lltoft@exp:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x29
   701  00002A                     	ds	1
   702  00002B                     ___ftadd@sign:
   703                           	opt stack 0
   704  00002B                     ___ftmul@exp:
   705                           	opt stack 0
   706  00002B                     ___llmod@divisor:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x2A
   710  00002B                     	ds	1
   711  00002C                     ??_UART_Init:
   712  00002C                     ___ftadd@exp2:
   713                           	opt stack 0
   714  00002C                     ___ftmul@f3_as_product:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x2B
   718  00002C                     	ds	1
   719  00002D                     ___ftadd@exp1:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x2C
   723  00002D                     	ds	1
   724  00002E                     ?___ftsub:
   725                           	opt stack 0
   726  00002E                     ___ftsub@f1:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x2D
   730  00002E                     	ds	1
   731  00002F                     ___ftmul@cntr:
   732                           	opt stack 0
   733  00002F                     ___llmod@counter:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x2E
   737  00002F                     	ds	1
   738  000030                     ??_sprintf:
   739  000030                     ___ftmul@sign:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x2F
   743  000030                     	ds	1
   744  000031                     ?___fttol:
   745                           	opt stack 0
   746  000031                     ___ftsub@f2:
   747                           	opt stack 0
   748  000031                     ___fttol@f1:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0x30
   752  000031                     	ds	3
   753  000034                     UART_Init@x:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x33
   757  000034                     	ds	1
   758  000035                     
   759                           ; 0 bytes @ 0x34
   760  000035                     	ds	1
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec1	equ	0xFE5
   768                           fsr1l	equ	0xFE1
   769                           
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 186 in file "TABLEAU_2.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  jj              2   41[BANK0 ] unsigned int 
   780 ;; Return value:  Size  Location     Type
   781 ;;		None               void
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         0       0       0       0       0       0       0       0       0
   790 ;;      Locals:         0       2       0       0       0       0       0       0       0
   791 ;;      Temps:          0       2       0       0       0       0       0       0       0
   792 ;;      Totals:         0       4       0       0       0       0       0       0       0
   793 ;;Total ram usage:        4 bytes
   794 ;; Hardware stack levels required when called:    7
   795 ;; This function calls:
   796 ;;		_InitPWMD
   797 ;;		_InitPWMG
   798 ;;		_SetPWMDutyD
   799 ;;		_SetPWMDutyG
   800 ;;		_UART_Init
   801 ;;		_UART_Write
   802 ;;		_UART_Write_Text
   803 ;;		___ftge
   804 ;;		___ftmul
   805 ;;		_ftoa
   806 ;;		_in_config
   807 ;;		_sendPulse
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text0
   814  000836                     __ptext0:
   815                           	opt stack 0
   816  000836                     _main:
   817                           	opt stack 24
   818                           
   819                           ;TABLEAU_2.c: 189: TRISDbits.RD0 = 0;
   820                           
   821                           ;incstack = 0
   822  000836  9095               	bcf	3989,0,c	;volatile
   823                           
   824                           ;TABLEAU_2.c: 190: TRISDbits.RD1 = 0;
   825  000838  9295               	bcf	3989,1,c	;volatile
   826                           
   827                           ;TABLEAU_2.c: 191: TRISDbits.RD2 = 0;
   828  00083A  9495               	bcf	3989,2,c	;volatile
   829                           
   830                           ;TABLEAU_2.c: 194: TMR1IP = 1;
   831  00083C  809F               	bsf	3999,0,c	;volatile
   832                           
   833                           ;TABLEAU_2.c: 198: INTCONbits.GIE = 1;
   834  00083E  8EF2               	bsf	intcon,7,c	;volatile
   835                           
   836                           ;TABLEAU_2.c: 199: PEIE = 1;
   837  000840  8CF2               	bsf	intcon,6,c	;volatile
   838                           
   839                           ;TABLEAU_2.c: 200: INT0IE = 1;
   840  000842  88F2               	bsf	intcon,4,c	;volatile
   841                           
   842                           ;TABLEAU_2.c: 201: INTEDG0 = 1;
   843  000844  8CF1               	bsf	intcon2,6,c	;volatile
   844                           
   845                           ;TABLEAU_2.c: 202: INT1IE = 1;
   846  000846  86F0               	bsf	intcon3,3,c	;volatile
   847                           
   848                           ;TABLEAU_2.c: 203: INTEDG1 = 1;
   849  000848  8AF1               	bsf	intcon2,5,c	;volatile
   850                           
   851                           ;TABLEAU_2.c: 204: TMR1IE = 1;
   852  00084A  809D               	bsf	3997,0,c	;volatile
   853                           
   854                           ;TABLEAU_2.c: 207: T08BIT = 0;
   855  00084C  9CD5               	bcf	4053,6,c	;volatile
   856                           
   857                           ;TABLEAU_2.c: 208: T0CS = 0;
   858  00084E  9AD5               	bcf	4053,5,c	;volatile
   859                           
   860                           ;TABLEAU_2.c: 209: PSA = 0;
   861  000850  96D5               	bcf	4053,3,c	;volatile
   862                           
   863                           ;TABLEAU_2.c: 210: T0PS0 = 1;
   864  000852  80D5               	bsf	4053,0,c	;volatile
   865                           
   866                           ;TABLEAU_2.c: 211: T0PS1 = 0;
   867  000854  92D5               	bcf	4053,1,c	;volatile
   868                           
   869                           ;TABLEAU_2.c: 212: T0PS2 = 0;
   870  000856  94D5               	bcf	4053,2,c	;volatile
   871                           
   872                           ;TABLEAU_2.c: 216: countg = 0;
   873  000858  0E00               	movlw	0
   874  00085A  0100               	movlb	0	; () banked
   875  00085C  6F93               	movwf	(_countg+1)& (0+255),b
   876  00085E  0E00               	movlw	0
   877  000860  6F92               	movwf	_countg& (0+255),b
   878                           
   879                           ;TABLEAU_2.c: 217: countd = 0;
   880  000862  0E00               	movlw	0
   881  000864  0100               	movlb	0	; () banked
   882  000866  6F91               	movwf	(_countd+1)& (0+255),b
   883  000868  0E00               	movlw	0
   884  00086A  6F90               	movwf	_countd& (0+255),b
   885                           
   886                           ; BSR set to: 0
   887                           ;TABLEAU_2.c: 218: positionok1 = 0;
   888  00086C  9045               	bcf	_positionok1/(0+8),_positionok1& (0+7),c
   889                           
   890                           ; BSR set to: 0
   891                           ;TABLEAU_2.c: 219: positionok2 = 0;
   892  00086E  9245               	bcf	_positionok2/(0+8),_positionok2& (0+7),c
   893                           
   894                           ;TABLEAU_2.c: 222: tab_command[0] = 1;
   895  000870  0E00               	movlw	0
   896  000872  0101               	movlb	1	; () banked
   897  000874  6F01               	movwf	(_tab_command+1)& (0+255),b
   898  000876  0E01               	movlw	1
   899  000878  6F00               	movwf	_tab_command& (0+255),b
   900                           
   901                           ;TABLEAU_2.c: 223: tab_para_g[0] = 30;
   902  00087A  0E00               	movlw	0
   903  00087C  0101               	movlb	1	; () banked
   904  00087E  6F65               	movwf	(_tab_para_g+1)& (0+255),b
   905  000880  0E1E               	movlw	30
   906  000882  6F64               	movwf	_tab_para_g& (0+255),b
   907                           
   908                           ;TABLEAU_2.c: 224: tab_para_d[0] = 30;
   909  000884  0E00               	movlw	0
   910  000886  0102               	movlb	2	; () banked
   911  000888  6F01               	movwf	(_tab_para_d+1)& (0+255),b
   912  00088A  0E1E               	movlw	30
   913  00088C  6F00               	movwf	_tab_para_d& (0+255),b
   914                           
   915                           ;TABLEAU_2.c: 225: tab_command[1] = 7;
   916  00088E  0E00               	movlw	0
   917  000890  0101               	movlb	1	; () banked
   918  000892  6F03               	movwf	(_tab_command+3)& (0+255),b
   919  000894  0E07               	movlw	7
   920  000896  6F02               	movwf	(_tab_command+2)& (0+255),b
   921                           
   922                           ;TABLEAU_2.c: 226: tab_para_g[1] = 125;
   923  000898  0E00               	movlw	0
   924  00089A  0101               	movlb	1	; () banked
   925  00089C  6F67               	movwf	(_tab_para_g+3)& (0+255),b
   926  00089E  0E7D               	movlw	125
   927  0008A0  6F66               	movwf	(_tab_para_g+2)& (0+255),b
   928                           
   929                           ;TABLEAU_2.c: 227: tab_para_d[1] = 125;
   930  0008A2  0E00               	movlw	0
   931  0008A4  0102               	movlb	2	; () banked
   932  0008A6  6F03               	movwf	(_tab_para_d+3)& (0+255),b
   933  0008A8  0E7D               	movlw	125
   934  0008AA  6F02               	movwf	(_tab_para_d+2)& (0+255),b
   935                           
   936                           ;TABLEAU_2.c: 229: tab_command[2] = 8;
   937  0008AC  0E00               	movlw	0
   938  0008AE  0101               	movlb	1	; () banked
   939  0008B0  6F05               	movwf	(_tab_command+5)& (0+255),b
   940  0008B2  0E08               	movlw	8
   941  0008B4  6F04               	movwf	(_tab_command+4)& (0+255),b
   942                           
   943                           ;TABLEAU_2.c: 233: tab_command[3] = 6;
   944  0008B6  0E00               	movlw	0
   945  0008B8  0101               	movlb	1	; () banked
   946  0008BA  6F07               	movwf	(_tab_command+7)& (0+255),b
   947  0008BC  0E06               	movlw	6
   948  0008BE  6F06               	movwf	(_tab_command+6)& (0+255),b
   949                           
   950                           ;TABLEAU_2.c: 234: tab_para_g[3] = 120;
   951  0008C0  0E00               	movlw	0
   952  0008C2  0101               	movlb	1	; () banked
   953  0008C4  6F6B               	movwf	(_tab_para_g+7)& (0+255),b
   954  0008C6  0E78               	movlw	120
   955  0008C8  6F6A               	movwf	(_tab_para_g+6)& (0+255),b
   956                           
   957                           ;TABLEAU_2.c: 235: tab_para_d[3] = 120;
   958  0008CA  0E00               	movlw	0
   959  0008CC  0102               	movlb	2	; () banked
   960  0008CE  6F07               	movwf	(_tab_para_d+7)& (0+255),b
   961  0008D0  0E78               	movlw	120
   962  0008D2  6F06               	movwf	(_tab_para_d+6)& (0+255),b
   963                           
   964                           ;TABLEAU_2.c: 237: tab_command[4] = 4;
   965  0008D4  0E00               	movlw	0
   966  0008D6  0101               	movlb	1	; () banked
   967  0008D8  6F09               	movwf	(_tab_command+9)& (0+255),b
   968  0008DA  0E04               	movlw	4
   969  0008DC  6F08               	movwf	(_tab_command+8)& (0+255),b
   970                           
   971                           ;TABLEAU_2.c: 238: tab_para_g[4] = 35;
   972  0008DE  0E00               	movlw	0
   973  0008E0  0101               	movlb	1	; () banked
   974  0008E2  6F6D               	movwf	(_tab_para_g+9)& (0+255),b
   975  0008E4  0E23               	movlw	35
   976  0008E6  6F6C               	movwf	(_tab_para_g+8)& (0+255),b
   977                           
   978                           ;TABLEAU_2.c: 239: tab_para_d[4] = 35;
   979  0008E8  0E00               	movlw	0
   980  0008EA  0102               	movlb	2	; () banked
   981  0008EC  6F09               	movwf	(_tab_para_d+9)& (0+255),b
   982  0008EE  0E23               	movlw	35
   983  0008F0  6F08               	movwf	(_tab_para_d+8)& (0+255),b
   984                           
   985                           ;TABLEAU_2.c: 241: tab_command[5] = 6;
   986  0008F2  0E00               	movlw	0
   987  0008F4  0101               	movlb	1	; () banked
   988  0008F6  6F0B               	movwf	(_tab_command+11)& (0+255),b
   989  0008F8  0E06               	movlw	6
   990  0008FA  6F0A               	movwf	(_tab_command+10)& (0+255),b
   991                           
   992                           ;TABLEAU_2.c: 242: tab_para_g[5] = 120;
   993  0008FC  0E00               	movlw	0
   994  0008FE  0101               	movlb	1	; () banked
   995  000900  6F6F               	movwf	(_tab_para_g+11)& (0+255),b
   996  000902  0E78               	movlw	120
   997  000904  6F6E               	movwf	(_tab_para_g+10)& (0+255),b
   998                           
   999                           ;TABLEAU_2.c: 243: tab_para_d[5] = 120;
  1000  000906  0E00               	movlw	0
  1001  000908  0102               	movlb	2	; () banked
  1002  00090A  6F0B               	movwf	(_tab_para_d+11)& (0+255),b
  1003  00090C  0E78               	movlw	120
  1004  00090E  6F0A               	movwf	(_tab_para_d+10)& (0+255),b
  1005                           
  1006                           ;TABLEAU_2.c: 244: N = 6;
  1007  000910  0E00               	movlw	0
  1008  000912  0100               	movlb	0	; () banked
  1009  000914  6FB0               	movwf	(_N+1)& (0+255),b
  1010  000916  0E06               	movlw	6
  1011  000918  6FAF               	movwf	_N& (0+255),b
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;TABLEAU_2.c: 247: InitPWMG();
  1015  00091A  EC8D  F010         	call	_InitPWMG	;wreg free
  1016                           
  1017                           ;TABLEAU_2.c: 248: InitPWMD();
  1018  00091E  EC9B  F010         	call	_InitPWMD	;wreg free
  1019                           
  1020                           ;TABLEAU_2.c: 250: TRISBbits.RB4 = 0;
  1021  000922  9893               	bcf	3987,4,c	;volatile
  1022                           
  1023                           ;TABLEAU_2.c: 251: TRISBbits.RB5 = 0;
  1024  000924  9A93               	bcf	3987,5,c	;volatile
  1025                           
  1026                           ;TABLEAU_2.c: 252: TRISBbits.RB6 = 0;
  1027  000926  9C93               	bcf	3987,6,c	;volatile
  1028                           
  1029                           ;TABLEAU_2.c: 253: TRISBbits.RB7 = 0;
  1030  000928  9E93               	bcf	3987,7,c	;volatile
  1031                           
  1032                           ;TABLEAU_2.c: 254: TRISDbits.RD1 = 0;
  1033  00092A  9295               	bcf	3989,1,c	;volatile
  1034                           
  1035                           ;TABLEAU_2.c: 255: TRISDbits.RD2 = 0;
  1036  00092C  9495               	bcf	3989,2,c	;volatile
  1037                           
  1038                           ;TABLEAU_2.c: 258: PORTB = 0x00;
  1039  00092E  0E00               	movlw	0
  1040  000930  6E81               	movwf	3969,c	;volatile
  1041                           
  1042                           ;TABLEAU_2.c: 260: PORTBbits.RB4 = 1;
  1043  000932  8881               	bsf	3969,4,c	;volatile
  1044                           
  1045                           ;TABLEAU_2.c: 262: PORTBbits.RB5 = 0;
  1046  000934  9A81               	bcf	3969,5,c	;volatile
  1047                           
  1048                           ;TABLEAU_2.c: 264: PORTBbits.RB6 = 1;
  1049  000936  8C81               	bsf	3969,6,c	;volatile
  1050                           
  1051                           ;TABLEAU_2.c: 266: PORTBbits.RB7 = 0;
  1052  000938  9E81               	bcf	3969,7,c	;volatile
  1053                           
  1054                           ;TABLEAU_2.c: 269: i = 0;
  1055  00093A  0E00               	movlw	0
  1056  00093C  0100               	movlb	0	; () banked
  1057  00093E  6F95               	movwf	(_i+1)& (0+255),b
  1058  000940  0E00               	movlw	0
  1059  000942  6F94               	movwf	_i& (0+255),b
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;TABLEAU_2.c: 274: T1CONbits.RD16 = 1;
  1063  000944  8ECD               	bsf	4045,7,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;TABLEAU_2.c: 275: T1CONbits.T1CKPS0 = 1;
  1067  000946  88CD               	bsf	4045,4,c	;volatile
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;TABLEAU_2.c: 276: T1CONbits.T1CKPS1 = 0;
  1071  000948  9ACD               	bcf	4045,5,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;TABLEAU_2.c: 277: T1CONbits.T1OSCEN = 0;
  1075  00094A  96CD               	bcf	4045,3,c	;volatile
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;TABLEAU_2.c: 278: T1CONbits.TMR1CS = 0;
  1079  00094C  92CD               	bcf	4045,1,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;TABLEAU_2.c: 279: T1CONbits.TMR1ON = 1;
  1083  00094E  80CD               	bsf	4045,0,c	;volatile
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;TABLEAU_2.c: 281: ((void)(TMR1H=((0xFF00)>>8),TMR1L=((0xFF00)&0xFF)));
  1087  000950  68CF               	setf	4047,c	;volatile
  1088  000952  0E00               	movlw	0
  1089  000954  6ECE               	movwf	4046,c	;volatile
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;TABLEAU_2.c: 284: UART_Init(9600);
  1093  000956  0E80               	movlw	128
  1094  000958  6E28               	movwf	UART_Init@baudrate,c
  1095  00095A  0E25               	movlw	37
  1096  00095C  6E29               	movwf	UART_Init@baudrate+1,c
  1097  00095E  0E00               	movlw	0
  1098  000960  6E2A               	movwf	UART_Init@baudrate+2,c
  1099  000962  0E00               	movlw	0
  1100  000964  6E2B               	movwf	UART_Init@baudrate+3,c
  1101  000966  ECF9  F00B         	call	_UART_Init	;wreg free
  1102                           
  1103                           ;TABLEAU_2.c: 288: {
  1104                           ;TABLEAU_2.c: 290: while (i < N)
  1105                           
  1106                           ;TABLEAU_2.c: 287: while (1)
  1107  00096A  D356               	goto	l3365
  1108  00096C                     l3109:
  1109                           
  1110                           ;TABLEAU_2.c: 292: {
  1111                           ;TABLEAU_2.c: 293: PORTCbits.RC0 = 1 - PORTCbits.RC0;
  1112  00096C  A082               	btfss	3970,0,c	;volatile
  1113  00096E  D002               	goto	u3360
  1114  000970  0E01               	movlw	1
  1115  000972  D001               	goto	u3366
  1116  000974                     u3360:
  1117  000974  0E00               	movlw	0
  1118  000976                     u3366:
  1119  000976  0800               	sublw	0
  1120  000978  0100               	movlb	0	; () banked
  1121  00097A  6F87               	movwf	??_main& (0+255),b
  1122  00097C  0E01               	movlw	1
  1123  00097E  0100               	movlb	0	; () banked
  1124  000980  2787               	addwf	??_main& (0+255),f,b
  1125  000982  5082               	movf	3970,w,c	;volatile
  1126  000984  0100               	movlb	0	; () banked
  1127  000986  1987               	xorwf	??_main& (0+255),w,b
  1128  000988  0BFE               	andlw	-2
  1129  00098A  1987               	xorwf	??_main& (0+255),w,b
  1130  00098C  6E82               	movwf	3970,c	;volatile
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;TABLEAU_2.c: 295: pulse_controle++;
  1134  00098E  0100               	movlb	0	; () banked
  1135  000990  4B96               	infsnz	_pulse_controle& (0+255),f,b
  1136  000992  2B97               	incf	(_pulse_controle+1)& (0+255),f,b
  1137  000994                     l3113:
  1138                           
  1139                           ;TABLEAU_2.c: 297: if (pulse_controle == 1000)
  1140  000994  0EE8               	movlw	232
  1141  000996  0100               	movlb	0	; () banked
  1142  000998  1996               	xorwf	_pulse_controle& (0+255),w,b
  1143  00099A  E10C               	bnz	l3119
  1144  00099C  0E03               	movlw	3
  1145  00099E  0100               	movlb	0	; () banked
  1146  0009A0  1997               	xorwf	(_pulse_controle+1)& (0+255),w,b
  1147  0009A2  A4D8               	btfss	status,2,c
  1148  0009A4  D007               	goto	l3119
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;TABLEAU_2.c: 298: {
  1152                           ;TABLEAU_2.c: 299: sendPulse();
  1153  0009A6  ECA9  F010         	call	_sendPulse	;wreg free
  1154                           
  1155                           ;TABLEAU_2.c: 300: pulse_controle = 0;
  1156  0009AA  0E00               	movlw	0
  1157  0009AC  0100               	movlb	0	; () banked
  1158  0009AE  6F97               	movwf	(_pulse_controle+1)& (0+255),b
  1159  0009B0  0E00               	movlw	0
  1160  0009B2  6F96               	movwf	_pulse_controle& (0+255),b
  1161  0009B4                     l3119:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;TABLEAU_2.c: 301: }
  1165                           ;TABLEAU_2.c: 302: if (new_value == 1)
  1166  0009B4  0100               	movlb	0	; () banked
  1167  0009B6  0598               	decf	_new_value& (0+255),w,b
  1168  0009B8  A4D8               	btfss	status,2,c
  1169  0009BA  D032               	goto	l3131
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;TABLEAU_2.c: 303: {
  1173                           ;TABLEAU_2.c: 304: distance = inter*0.0057;
  1174  0009BC  C08B  F022         	movff	_inter,___ftmul@f1
  1175  0009C0  C08C  F023         	movff	_inter+1,___ftmul@f1+1
  1176  0009C4  C08D  F024         	movff	_inter+2,___ftmul@f1+2
  1177  0009C8  0EC7               	movlw	199
  1178  0009CA  6E25               	movwf	___ftmul@f2,c
  1179  0009CC  0EBA               	movlw	186
  1180  0009CE  6E26               	movwf	___ftmul@f2+1,c
  1181  0009D0  0E3B               	movlw	59
  1182  0009D2  6E27               	movwf	___ftmul@f2+2,c
  1183  0009D4  EC1E  F00D         	call	___ftmul	;wreg free
  1184  0009D8  C022  F0AC         	movff	?___ftmul,_distance
  1185  0009DC  C023  F0AD         	movff	?___ftmul+1,_distance+1
  1186  0009E0  C024  F0AE         	movff	?___ftmul+2,_distance+2
  1187                           
  1188                           ;TABLEAU_2.c: 305: new_value = 0;
  1189  0009E4  0E00               	movlw	0
  1190  0009E6  0100               	movlb	0	; () banked
  1191  0009E8  6F98               	movwf	_new_value& (0+255),b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;TABLEAU_2.c: 308: buf = ftoa(distance, &status);
  1195  0009EA  C0AC  F078         	movff	_distance,ftoa@f
  1196  0009EE  C0AD  F079         	movff	_distance+1,ftoa@f+1
  1197  0009F2  C0AE  F07A         	movff	_distance+2,ftoa@f+2
  1198  0009F6  0EAA               	movlw	low _status
  1199  0009F8  0100               	movlb	0	; () banked
  1200  0009FA  6F7B               	movwf	ftoa@status& (0+255),b
  1201  0009FC  0E00               	movlw	high _status
  1202  0009FE  0100               	movlb	0	; () banked
  1203  000A00  6F7C               	movwf	(ftoa@status+1)& (0+255),b
  1204  000A02  EC8F  F00C         	call	_ftoa	;wreg free
  1205  000A06  C078  F08E         	movff	?_ftoa,_buf
  1206  000A0A  C079  F08F         	movff	?_ftoa+1,_buf+1
  1207                           
  1208                           ;TABLEAU_2.c: 309: UART_Write_Text(buf);
  1209  000A0E  C08E  F01B         	movff	_buf,UART_Write_Text@text
  1210  000A12  C08F  F01C         	movff	_buf+1,UART_Write_Text@text+1
  1211  000A16  ECF5  F00F         	call	_UART_Write_Text	;wreg free
  1212                           
  1213                           ;TABLEAU_2.c: 310: UART_Write(' ');
  1214  000A1A  0E20               	movlw	32
  1215  000A1C  ECAF  F010         	call	_UART_Write
  1216  000A20                     l3131:
  1217                           
  1218                           ;TABLEAU_2.c: 313: }
  1219                           ;TABLEAU_2.c: 314: if (distance < 10)
  1220  000A20  C0AC  F01A         	movff	_distance,___ftge@ff1
  1221  000A24  C0AD  F01B         	movff	_distance+1,___ftge@ff1+1
  1222  000A28  C0AE  F01C         	movff	_distance+2,___ftge@ff1+2
  1223  000A2C  0E00               	movlw	0
  1224  000A2E  6E1D               	movwf	___ftge@ff2,c
  1225  000A30  0E20               	movlw	32
  1226  000A32  6E1E               	movwf	___ftge@ff2+1,c
  1227  000A34  0E41               	movlw	65
  1228  000A36  6E1F               	movwf	___ftge@ff2+2,c
  1229  000A38  ECAC  F00E         	call	___ftge	;wreg free
  1230  000A3C  B0D8               	btfsc	status,0,c
  1231  000A3E  D016               	goto	l3141
  1232                           
  1233                           ;TABLEAU_2.c: 315: {
  1234                           ;TABLEAU_2.c: 317: pulse_controle = 1000;
  1235  000A40  0E03               	movlw	3
  1236  000A42  0100               	movlb	0	; () banked
  1237  000A44  6F97               	movwf	(_pulse_controle+1)& (0+255),b
  1238  000A46  0EE8               	movlw	232
  1239  000A48  6F96               	movwf	_pulse_controle& (0+255),b
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;TABLEAU_2.c: 318: SetPWMDutyD(0);
  1243  000A4A  0E00               	movlw	0
  1244  000A4C  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1245  000A4E  0E00               	movlw	0
  1246  000A50  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1247  000A52  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1248                           
  1249                           ;TABLEAU_2.c: 319: SetPWMDutyG(0);
  1250  000A56  0E00               	movlw	0
  1251  000A58  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1252  000A5A  0E00               	movlw	0
  1253  000A5C  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1254  000A5E  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1255                           
  1256                           ;TABLEAU_2.c: 320: counts1_limit = 46;
  1257  000A62  0E00               	movlw	0
  1258  000A64  6E42               	movwf	_counts1_limit+1,c
  1259  000A66  0E2E               	movlw	46
  1260  000A68  6E41               	movwf	_counts1_limit,c
  1261                           
  1262                           ;TABLEAU_2.c: 322: goto HERE1;
  1263  000A6A  D794               	goto	l3113
  1264  000A6C                     l3141:
  1265                           
  1266                           ;TABLEAU_2.c: 324: else
  1267                           ;TABLEAU_2.c: 325: {
  1268                           ;TABLEAU_2.c: 326: counts1_limit = 23;
  1269  000A6C  0E00               	movlw	0
  1270  000A6E  6E42               	movwf	_counts1_limit+1,c
  1271  000A70  0E17               	movlw	23
  1272  000A72  6E41               	movwf	_counts1_limit,c
  1273                           
  1274                           ;TABLEAU_2.c: 327: }
  1275                           ;TABLEAU_2.c: 330: if (tab_command[i] == 1)
  1276  000A74  90D8               	bcf	status,0,c
  1277  000A76  0100               	movlb	0	; () banked
  1278  000A78  3594               	rlcf	_i& (0+255),w,b
  1279  000A7A  6ED9               	movwf	fsr2l,c
  1280  000A7C  0100               	movlb	0	; () banked
  1281  000A7E  3595               	rlcf	(_i+1)& (0+255),w,b
  1282  000A80  6EDA               	movwf	fsr2h,c
  1283  000A82  0E00               	movlw	low _tab_command
  1284  000A84  26D9               	addwf	fsr2l,f,c
  1285  000A86  0E01               	movlw	high _tab_command
  1286  000A88  22DA               	addwfc	fsr2h,f,c
  1287  000A8A  04DE               	decf	postinc2,w,c
  1288  000A8C  10DE               	iorwf	postinc2,w,c
  1289  000A8E  A4D8               	btfss	status,2,c
  1290  000A90  D051               	goto	l3171
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;TABLEAU_2.c: 331: {
  1294                           ;TABLEAU_2.c: 334: if (countg >= tab_para_g[i])
  1295  000A92  90D8               	bcf	status,0,c
  1296  000A94  0100               	movlb	0	; () banked
  1297  000A96  3594               	rlcf	_i& (0+255),w,b
  1298  000A98  6ED9               	movwf	fsr2l,c
  1299  000A9A  0100               	movlb	0	; () banked
  1300  000A9C  3595               	rlcf	(_i+1)& (0+255),w,b
  1301  000A9E  6EDA               	movwf	fsr2h,c
  1302  000AA0  0E64               	movlw	low _tab_para_g
  1303  000AA2  26D9               	addwf	fsr2l,f,c
  1304  000AA4  0E01               	movlw	high _tab_para_g
  1305  000AA6  22DA               	addwfc	fsr2h,f,c
  1306  000AA8  50DE               	movf	postinc2,w,c
  1307  000AAA  0100               	movlb	0	; () banked
  1308  000AAC  5D92               	subwf	_countg& (0+255),w,b
  1309  000AAE  50DE               	movf	postinc2,w,c
  1310  000AB0  0100               	movlb	0	; () banked
  1311  000AB2  5993               	subwfb	(_countg+1)& (0+255),w,b
  1312  000AB4  A0D8               	btfss	status,0,c
  1313  000AB6  D008               	goto	l3151
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;TABLEAU_2.c: 336: {
  1317                           ;TABLEAU_2.c: 337: SetPWMDutyG(0);
  1318  000AB8  0E00               	movlw	0
  1319  000ABA  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1320  000ABC  0E00               	movlw	0
  1321  000ABE  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1322  000AC0  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1323                           
  1324                           ;TABLEAU_2.c: 338: positionok1 = 1;
  1325  000AC4  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  1326                           
  1327                           ;TABLEAU_2.c: 341: }
  1328  000AC6  D00B               	goto	l3153
  1329  000AC8                     l3151:
  1330                           
  1331                           ;TABLEAU_2.c: 342: else
  1332                           ;TABLEAU_2.c: 343: {
  1333                           ;TABLEAU_2.c: 344: SetPWMDutyG(700);
  1334  000AC8  0E02               	movlw	2
  1335  000ACA  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1336  000ACC  0EBC               	movlw	188
  1337  000ACE  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1338  000AD0  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1339                           
  1340                           ;TABLEAU_2.c: 345: in_config(1, 1);
  1341  000AD4  0E01               	movlw	1
  1342  000AD6  6E1A               	movwf	in_config@droite,c
  1343  000AD8  0E01               	movlw	1
  1344  000ADA  EC48  F010         	call	_in_config
  1345  000ADE                     l3153:
  1346                           
  1347                           ;TABLEAU_2.c: 348: }
  1348                           ;TABLEAU_2.c: 349: if (countd >= tab_para_d[i])
  1349  000ADE  90D8               	bcf	status,0,c
  1350  000AE0  0100               	movlb	0	; () banked
  1351  000AE2  3594               	rlcf	_i& (0+255),w,b
  1352  000AE4  6ED9               	movwf	fsr2l,c
  1353  000AE6  0100               	movlb	0	; () banked
  1354  000AE8  3595               	rlcf	(_i+1)& (0+255),w,b
  1355  000AEA  6EDA               	movwf	fsr2h,c
  1356  000AEC  0E00               	movlw	low _tab_para_d
  1357  000AEE  26D9               	addwf	fsr2l,f,c
  1358  000AF0  0E02               	movlw	high _tab_para_d
  1359  000AF2  22DA               	addwfc	fsr2h,f,c
  1360  000AF4  50DE               	movf	postinc2,w,c
  1361  000AF6  0100               	movlb	0	; () banked
  1362  000AF8  5D90               	subwf	_countd& (0+255),w,b
  1363  000AFA  50DE               	movf	postinc2,w,c
  1364  000AFC  0100               	movlb	0	; () banked
  1365  000AFE  5991               	subwfb	(_countd+1)& (0+255),w,b
  1366  000B00  A0D8               	btfss	status,0,c
  1367  000B02  D008               	goto	l3159
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;TABLEAU_2.c: 350: {
  1371                           ;TABLEAU_2.c: 352: SetPWMDutyD(0);
  1372  000B04  0E00               	movlw	0
  1373  000B06  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1374  000B08  0E00               	movlw	0
  1375  000B0A  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1376  000B0C  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1377  000B10                     
  1378                           ;TABLEAU_2.c: 353: positionok2 = 1;
  1379  000B10  8245               	bsf	_positionok2/(0+8),_positionok2& (0+7),c
  1380                           
  1381                           ;TABLEAU_2.c: 355: }
  1382  000B12  D0A5               	goto	l3215
  1383  000B14                     l3159:
  1384                           
  1385                           ;TABLEAU_2.c: 356: else
  1386                           ;TABLEAU_2.c: 357: {
  1387                           ;TABLEAU_2.c: 358: SetPWMDutyD(700);
  1388  000B14  0E02               	movlw	2
  1389  000B16  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1390  000B18  0EBC               	movlw	188
  1391  000B1A  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1392  000B1C  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1393                           
  1394                           ;TABLEAU_2.c: 359: in_config(1, 1);
  1395  000B20  0E01               	movlw	1
  1396  000B22  6E1A               	movwf	in_config@droite,c
  1397  000B24  0E01               	movlw	1
  1398  000B26  EC48  F010         	call	_in_config
  1399  000B2A  D099               	goto	l3215
  1400  000B2C                     l3169:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;TABLEAU_2.c: 370: i++;
  1404  000B2C  0100               	movlb	0	; () banked
  1405  000B2E  4B94               	infsnz	_i& (0+255),f,b
  1406  000B30  2B95               	incf	(_i+1)& (0+255),f,b
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;TABLEAU_2.c: 374: }
  1410                           ;TABLEAU_2.c: 376: }
  1411  000B32  D272               	goto	l3365
  1412  000B34                     l3171:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;TABLEAU_2.c: 377: else if (tab_command[i] == 8)
  1416  000B34  90D8               	bcf	status,0,c
  1417  000B36  0100               	movlb	0	; () banked
  1418  000B38  3594               	rlcf	_i& (0+255),w,b
  1419  000B3A  6ED9               	movwf	fsr2l,c
  1420  000B3C  0100               	movlb	0	; () banked
  1421  000B3E  3595               	rlcf	(_i+1)& (0+255),w,b
  1422  000B40  6EDA               	movwf	fsr2h,c
  1423  000B42  0E00               	movlw	low _tab_command
  1424  000B44  26D9               	addwf	fsr2l,f,c
  1425  000B46  0E01               	movlw	high _tab_command
  1426  000B48  22DA               	addwfc	fsr2h,f,c
  1427  000B4A  0E08               	movlw	8
  1428  000B4C  18DE               	xorwf	postinc2,w,c
  1429  000B4E  10DE               	iorwf	postinc2,w,c
  1430  000B50  A4D8               	btfss	status,2,c
  1431  000B52  D02A               	goto	l3197
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;TABLEAU_2.c: 378: {
  1435                           ;TABLEAU_2.c: 379: SetPWMDutyG(0);
  1436  000B54  0E00               	movlw	0
  1437  000B56  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1438  000B58  0E00               	movlw	0
  1439  000B5A  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1440  000B5C  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1441                           
  1442                           ;TABLEAU_2.c: 380: SetPWMDutyD(0);
  1443  000B60  0E00               	movlw	0
  1444  000B62  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1445  000B64  0E00               	movlw	0
  1446  000B66  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1447  000B68  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1448                           
  1449                           ;TABLEAU_2.c: 381: PORTBbits.RB4 = 1;
  1450  000B6C  8881               	bsf	3969,4,c	;volatile
  1451                           
  1452                           ;TABLEAU_2.c: 382: PORTBbits.RB5= 1;
  1453  000B6E  8A81               	bsf	3969,5,c	;volatile
  1454                           
  1455                           ;TABLEAU_2.c: 383: PORTBbits.RB6 = 1;
  1456  000B70  8C81               	bsf	3969,6,c	;volatile
  1457                           
  1458                           ;TABLEAU_2.c: 384: PORTBbits.RB7= 1;
  1459  000B72  8E81               	bsf	3969,7,c	;volatile
  1460                           
  1461                           ;TABLEAU_2.c: 385: for(unsigned int jj=0;jj<50;jj++)_delay((unsigned long)((10)*(4800000
      +                          0/4000.0)));
  1462  000B74  0E00               	movlw	0
  1463  000B76  0100               	movlb	0	; () banked
  1464  000B78  6F8A               	movwf	(main@jj+1)& (0+255),b
  1465  000B7A  0E00               	movlw	0
  1466  000B7C  6F89               	movwf	main@jj& (0+255),b
  1467  000B7E                     l3185:
  1468                           
  1469                           ; BSR set to: 0
  1470  000B7E  0100               	movlb	0	; () banked
  1471  000B80  518A               	movf	(main@jj+1)& (0+255),w,b
  1472  000B82  E172               	bnz	l3221
  1473  000B84  0E32               	movlw	50
  1474  000B86  0100               	movlb	0	; () banked
  1475  000B88  5D89               	subwf	main@jj& (0+255),w,b
  1476  000B8A  B0D8               	btfsc	status,0,c
  1477  000B8C  D23A               	goto	L6
  1478                           
  1479                           ; BSR set to: 0
  1480                           
  1481                           ; BSR set to: 0
  1482                           
  1483                           ; BSR set to: 0
  1484  000B8E  0E9C               	movlw	156
  1485  000B90  0100               	movlb	0	; () banked
  1486  000B92  6F87               	movwf	??_main& (0+255),b
  1487  000B94  0ED7               	movlw	215
  1488  000B96                     u3797:
  1489  000B96  2EE8               	decfsz	wreg,f,c
  1490  000B98  D7FE               	goto	u3797
  1491  000B9A  2F87               	decfsz	??_main& (0+255),f,b
  1492  000B9C  D7FC               	goto	u3797
  1493  000B9E  F000               	nop	
  1494  000BA0  0100               	movlb	0	; () banked
  1495  000BA2  4B89               	infsnz	main@jj& (0+255),f,b
  1496  000BA4  2B8A               	incf	(main@jj+1)& (0+255),f,b
  1497  000BA6  D7EB               	goto	l3185
  1498  000BA8                     l3197:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;TABLEAU_2.c: 393: else if (tab_command[i] == 7)
  1502  000BA8  90D8               	bcf	status,0,c
  1503  000BAA  0100               	movlb	0	; () banked
  1504  000BAC  3594               	rlcf	_i& (0+255),w,b
  1505  000BAE  6ED9               	movwf	fsr2l,c
  1506  000BB0  0100               	movlb	0	; () banked
  1507  000BB2  3595               	rlcf	(_i+1)& (0+255),w,b
  1508  000BB4  6EDA               	movwf	fsr2h,c
  1509  000BB6  0E00               	movlw	low _tab_command
  1510  000BB8  26D9               	addwf	fsr2l,f,c
  1511  000BBA  0E01               	movlw	high _tab_command
  1512  000BBC  22DA               	addwfc	fsr2h,f,c
  1513  000BBE  0E07               	movlw	7
  1514  000BC0  18DE               	xorwf	postinc2,w,c
  1515  000BC2  10DE               	iorwf	postinc2,w,c
  1516  000BC4  A4D8               	btfss	status,2,c
  1517  000BC6  D051               	goto	l3225
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;TABLEAU_2.c: 394: {
  1521                           ;TABLEAU_2.c: 397: if (countg >= tab_para_g[i])
  1522  000BC8  90D8               	bcf	status,0,c
  1523  000BCA  0100               	movlb	0	; () banked
  1524  000BCC  3594               	rlcf	_i& (0+255),w,b
  1525  000BCE  6ED9               	movwf	fsr2l,c
  1526  000BD0  0100               	movlb	0	; () banked
  1527  000BD2  3595               	rlcf	(_i+1)& (0+255),w,b
  1528  000BD4  6EDA               	movwf	fsr2h,c
  1529  000BD6  0E64               	movlw	low _tab_para_g
  1530  000BD8  26D9               	addwf	fsr2l,f,c
  1531  000BDA  0E01               	movlw	high _tab_para_g
  1532  000BDC  22DA               	addwfc	fsr2h,f,c
  1533  000BDE  50DE               	movf	postinc2,w,c
  1534  000BE0  0100               	movlb	0	; () banked
  1535  000BE2  5D92               	subwf	_countg& (0+255),w,b
  1536  000BE4  50DE               	movf	postinc2,w,c
  1537  000BE6  0100               	movlb	0	; () banked
  1538  000BE8  5993               	subwfb	(_countg+1)& (0+255),w,b
  1539  000BEA  A0D8               	btfss	status,0,c
  1540  000BEC  D008               	goto	l3205
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;TABLEAU_2.c: 399: {
  1544                           ;TABLEAU_2.c: 400: SetPWMDutyG(0);
  1545  000BEE  0E00               	movlw	0
  1546  000BF0  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1547  000BF2  0E00               	movlw	0
  1548  000BF4  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1549  000BF6  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1550                           
  1551                           ;TABLEAU_2.c: 401: positionok1 = 1;
  1552  000BFA  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  1553                           
  1554                           ;TABLEAU_2.c: 404: }
  1555  000BFC  D00B               	goto	l3207
  1556  000BFE                     l3205:
  1557                           
  1558                           ;TABLEAU_2.c: 405: else
  1559                           ;TABLEAU_2.c: 406: {
  1560                           ;TABLEAU_2.c: 407: SetPWMDutyG(900);
  1561  000BFE  0E03               	movlw	3
  1562  000C00  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1563  000C02  0E84               	movlw	132
  1564  000C04  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1565  000C06  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1566                           
  1567                           ;TABLEAU_2.c: 408: in_config(1, 1);
  1568  000C0A  0E01               	movlw	1
  1569  000C0C  6E1A               	movwf	in_config@droite,c
  1570  000C0E  0E01               	movlw	1
  1571  000C10  EC48  F010         	call	_in_config
  1572  000C14                     l3207:
  1573                           
  1574                           ;TABLEAU_2.c: 411: }
  1575                           ;TABLEAU_2.c: 412: if (countd >= tab_para_d[i])
  1576  000C14  90D8               	bcf	status,0,c
  1577  000C16  0100               	movlb	0	; () banked
  1578  000C18  3594               	rlcf	_i& (0+255),w,b
  1579  000C1A  6ED9               	movwf	fsr2l,c
  1580  000C1C  0100               	movlb	0	; () banked
  1581  000C1E  3595               	rlcf	(_i+1)& (0+255),w,b
  1582  000C20  6EDA               	movwf	fsr2h,c
  1583  000C22  0E00               	movlw	low _tab_para_d
  1584  000C24  26D9               	addwf	fsr2l,f,c
  1585  000C26  0E02               	movlw	high _tab_para_d
  1586  000C28  22DA               	addwfc	fsr2h,f,c
  1587  000C2A  50DE               	movf	postinc2,w,c
  1588  000C2C  0100               	movlb	0	; () banked
  1589  000C2E  5D90               	subwf	_countd& (0+255),w,b
  1590  000C30  50DE               	movf	postinc2,w,c
  1591  000C32  0100               	movlb	0	; () banked
  1592  000C34  5991               	subwfb	(_countd+1)& (0+255),w,b
  1593  000C36  A0D8               	btfss	status,0,c
  1594  000C38  D007               	goto	l3213
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;TABLEAU_2.c: 413: {
  1598                           ;TABLEAU_2.c: 415: SetPWMDutyD(0);
  1599  000C3A  0E00               	movlw	0
  1600  000C3C  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1601  000C3E  0E00               	movlw	0
  1602  000C40  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1603  000C42  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1604  000C46  D764               	goto	L7
  1605  000C48                     l3213:
  1606                           
  1607                           ;TABLEAU_2.c: 419: else
  1608                           ;TABLEAU_2.c: 420: {
  1609                           ;TABLEAU_2.c: 421: SetPWMDutyD(900);
  1610  000C48  0E03               	movlw	3
  1611  000C4A  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1612  000C4C  0E84               	movlw	132
  1613  000C4E  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1614  000C50  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1615                           
  1616                           ;TABLEAU_2.c: 422: in_config(1, 1);
  1617  000C54  0E01               	movlw	1
  1618  000C56  6E1A               	movwf	in_config@droite,c
  1619  000C58  0E01               	movlw	1
  1620  000C5A  EC48  F010         	call	_in_config
  1621  000C5E                     l3215:
  1622                           
  1623                           ;TABLEAU_2.c: 424: }
  1624                           ;TABLEAU_2.c: 426: if ((positionok1 == 1)&&(positionok2 == 1))
  1625  000C5E  B045               	btfsc	_positionok1/(0+8),_positionok1& (0+7),c
  1626  000C60  A245               	btfss	_positionok2/(0+8),_positionok2& (0+7),c
  1627  000C62  D1DA               	goto	l3365
  1628                           
  1629                           ;TABLEAU_2.c: 427: {
  1630                           ;TABLEAU_2.c: 428: positionok1 = 0;
  1631  000C64  9045               	bcf	_positionok1/(0+8),_positionok1& (0+7),c
  1632                           
  1633                           ;TABLEAU_2.c: 429: positionok2 = 0;
  1634  000C66  9245               	bcf	_positionok2/(0+8),_positionok2& (0+7),c
  1635  000C68                     l3221:
  1636  000C68  D1CC               	goto	L6
  1637  000C6A                     l3225:
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;TABLEAU_2.c: 441: else if (tab_command[i] == 3)
  1641  000C6A  90D8               	bcf	status,0,c
  1642  000C6C  0100               	movlb	0	; () banked
  1643  000C6E  3594               	rlcf	_i& (0+255),w,b
  1644  000C70  6ED9               	movwf	fsr2l,c
  1645  000C72  0100               	movlb	0	; () banked
  1646  000C74  3595               	rlcf	(_i+1)& (0+255),w,b
  1647  000C76  6EDA               	movwf	fsr2h,c
  1648  000C78  0E00               	movlw	low _tab_command
  1649  000C7A  26D9               	addwf	fsr2l,f,c
  1650  000C7C  0E01               	movlw	high _tab_command
  1651  000C7E  22DA               	addwfc	fsr2h,f,c
  1652  000C80  0E03               	movlw	3
  1653  000C82  18DE               	xorwf	postinc2,w,c
  1654  000C84  10DE               	iorwf	postinc2,w,c
  1655  000C86  A4D8               	btfss	status,2,c
  1656  000C88  D04C               	goto	l3253
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;TABLEAU_2.c: 442: {
  1660                           ;TABLEAU_2.c: 447: if (countg >= tab_para_g[i])
  1661  000C8A  90D8               	bcf	status,0,c
  1662  000C8C  0100               	movlb	0	; () banked
  1663  000C8E  3594               	rlcf	_i& (0+255),w,b
  1664  000C90  6ED9               	movwf	fsr2l,c
  1665  000C92  0100               	movlb	0	; () banked
  1666  000C94  3595               	rlcf	(_i+1)& (0+255),w,b
  1667  000C96  6EDA               	movwf	fsr2h,c
  1668  000C98  0E64               	movlw	low _tab_para_g
  1669  000C9A  26D9               	addwf	fsr2l,f,c
  1670  000C9C  0E01               	movlw	high _tab_para_g
  1671  000C9E  22DA               	addwfc	fsr2h,f,c
  1672  000CA0  50DE               	movf	postinc2,w,c
  1673  000CA2  0100               	movlb	0	; () banked
  1674  000CA4  5D92               	subwf	_countg& (0+255),w,b
  1675  000CA6  50DE               	movf	postinc2,w,c
  1676  000CA8  0100               	movlb	0	; () banked
  1677  000CAA  5993               	subwfb	(_countg+1)& (0+255),w,b
  1678  000CAC  A0D8               	btfss	status,0,c
  1679  000CAE  D008               	goto	l3233
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;TABLEAU_2.c: 449: {
  1683                           ;TABLEAU_2.c: 450: SetPWMDutyG(0);
  1684  000CB0  0E00               	movlw	0
  1685  000CB2  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1686  000CB4  0E00               	movlw	0
  1687  000CB6  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1688  000CB8  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1689                           
  1690                           ;TABLEAU_2.c: 451: positionok1 = 1;
  1691  000CBC  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  1692                           
  1693                           ;TABLEAU_2.c: 454: }
  1694  000CBE  D00B               	goto	l3235
  1695  000CC0                     l3233:
  1696                           
  1697                           ;TABLEAU_2.c: 455: else
  1698                           ;TABLEAU_2.c: 456: {
  1699                           ;TABLEAU_2.c: 457: SetPWMDutyG(800);
  1700  000CC0  0E03               	movlw	3
  1701  000CC2  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1702  000CC4  0E20               	movlw	32
  1703  000CC6  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1704  000CC8  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1705                           
  1706                           ;TABLEAU_2.c: 458: in_config(1, 1);
  1707  000CCC  0E01               	movlw	1
  1708  000CCE  6E1A               	movwf	in_config@droite,c
  1709  000CD0  0E01               	movlw	1
  1710  000CD2  EC48  F010         	call	_in_config
  1711  000CD6                     l3235:
  1712                           
  1713                           ;TABLEAU_2.c: 459: }
  1714                           ;TABLEAU_2.c: 460: if (countd >= tab_para_d[i])
  1715  000CD6  90D8               	bcf	status,0,c
  1716  000CD8  0100               	movlb	0	; () banked
  1717  000CDA  3594               	rlcf	_i& (0+255),w,b
  1718  000CDC  6ED9               	movwf	fsr2l,c
  1719  000CDE  0100               	movlb	0	; () banked
  1720  000CE0  3595               	rlcf	(_i+1)& (0+255),w,b
  1721  000CE2  6EDA               	movwf	fsr2h,c
  1722  000CE4  0E00               	movlw	low _tab_para_d
  1723  000CE6  26D9               	addwf	fsr2l,f,c
  1724  000CE8  0E02               	movlw	high _tab_para_d
  1725  000CEA  22DA               	addwfc	fsr2h,f,c
  1726  000CEC  50DE               	movf	postinc2,w,c
  1727  000CEE  0100               	movlb	0	; () banked
  1728  000CF0  5D90               	subwf	_countd& (0+255),w,b
  1729  000CF2  50DE               	movf	postinc2,w,c
  1730  000CF4  0100               	movlb	0	; () banked
  1731  000CF6  5991               	subwfb	(_countd+1)& (0+255),w,b
  1732  000CF8  A0D8               	btfss	status,0,c
  1733  000CFA  D007               	goto	l3241
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;TABLEAU_2.c: 461: {
  1737                           ;TABLEAU_2.c: 463: SetPWMDutyD(0);
  1738  000CFC  0E00               	movlw	0
  1739  000CFE  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1740  000D00  0E00               	movlw	0
  1741  000D02  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1742  000D04  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1743  000D08  D703               	goto	L7
  1744  000D0A                     l3241:
  1745                           
  1746                           ;TABLEAU_2.c: 467: else
  1747                           ;TABLEAU_2.c: 468: {
  1748                           ;TABLEAU_2.c: 469: SetPWMDutyD(512);
  1749  000D0A  0E02               	movlw	2
  1750  000D0C  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1751  000D0E  0E00               	movlw	0
  1752  000D10  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1753  000D12  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1754                           
  1755                           ;TABLEAU_2.c: 470: in_config(1, 1);
  1756  000D16  0E01               	movlw	1
  1757  000D18  6E1A               	movwf	in_config@droite,c
  1758  000D1A  0E01               	movlw	1
  1759  000D1C  EC48  F010         	call	_in_config
  1760  000D20  D79E               	goto	l3215
  1761  000D22                     l3253:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;TABLEAU_2.c: 488: else if (tab_command[i] == 2)
  1765  000D22  90D8               	bcf	status,0,c
  1766  000D24  0100               	movlb	0	; () banked
  1767  000D26  3594               	rlcf	_i& (0+255),w,b
  1768  000D28  6ED9               	movwf	fsr2l,c
  1769  000D2A  0100               	movlb	0	; () banked
  1770  000D2C  3595               	rlcf	(_i+1)& (0+255),w,b
  1771  000D2E  6EDA               	movwf	fsr2h,c
  1772  000D30  0E00               	movlw	low _tab_command
  1773  000D32  26D9               	addwf	fsr2l,f,c
  1774  000D34  0E01               	movlw	high _tab_command
  1775  000D36  22DA               	addwfc	fsr2h,f,c
  1776  000D38  0E02               	movlw	2
  1777  000D3A  18DE               	xorwf	postinc2,w,c
  1778  000D3C  10DE               	iorwf	postinc2,w,c
  1779  000D3E  A4D8               	btfss	status,2,c
  1780  000D40  D04C               	goto	l3281
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;TABLEAU_2.c: 489: {
  1784                           ;TABLEAU_2.c: 494: if (countg >= tab_para_g[i])
  1785  000D42  90D8               	bcf	status,0,c
  1786  000D44  0100               	movlb	0	; () banked
  1787  000D46  3594               	rlcf	_i& (0+255),w,b
  1788  000D48  6ED9               	movwf	fsr2l,c
  1789  000D4A  0100               	movlb	0	; () banked
  1790  000D4C  3595               	rlcf	(_i+1)& (0+255),w,b
  1791  000D4E  6EDA               	movwf	fsr2h,c
  1792  000D50  0E64               	movlw	low _tab_para_g
  1793  000D52  26D9               	addwf	fsr2l,f,c
  1794  000D54  0E01               	movlw	high _tab_para_g
  1795  000D56  22DA               	addwfc	fsr2h,f,c
  1796  000D58  50DE               	movf	postinc2,w,c
  1797  000D5A  0100               	movlb	0	; () banked
  1798  000D5C  5D92               	subwf	_countg& (0+255),w,b
  1799  000D5E  50DE               	movf	postinc2,w,c
  1800  000D60  0100               	movlb	0	; () banked
  1801  000D62  5993               	subwfb	(_countg+1)& (0+255),w,b
  1802  000D64  A0D8               	btfss	status,0,c
  1803  000D66  D008               	goto	l3261
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;TABLEAU_2.c: 496: {
  1807                           ;TABLEAU_2.c: 497: SetPWMDutyG(0);
  1808  000D68  0E00               	movlw	0
  1809  000D6A  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1810  000D6C  0E00               	movlw	0
  1811  000D6E  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1812  000D70  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1813                           
  1814                           ;TABLEAU_2.c: 498: positionok1 = 1;
  1815  000D74  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  1816                           
  1817                           ;TABLEAU_2.c: 501: }
  1818  000D76  D00B               	goto	l3263
  1819  000D78                     l3261:
  1820                           
  1821                           ;TABLEAU_2.c: 502: else
  1822                           ;TABLEAU_2.c: 503: {
  1823                           ;TABLEAU_2.c: 504: SetPWMDutyG(512);
  1824  000D78  0E02               	movlw	2
  1825  000D7A  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1826  000D7C  0E00               	movlw	0
  1827  000D7E  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1828  000D80  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1829                           
  1830                           ;TABLEAU_2.c: 505: in_config(1, 1);
  1831  000D84  0E01               	movlw	1
  1832  000D86  6E1A               	movwf	in_config@droite,c
  1833  000D88  0E01               	movlw	1
  1834  000D8A  EC48  F010         	call	_in_config
  1835  000D8E                     l3263:
  1836                           
  1837                           ;TABLEAU_2.c: 506: }
  1838                           ;TABLEAU_2.c: 507: if (countd >= tab_para_d[i])
  1839  000D8E  90D8               	bcf	status,0,c
  1840  000D90  0100               	movlb	0	; () banked
  1841  000D92  3594               	rlcf	_i& (0+255),w,b
  1842  000D94  6ED9               	movwf	fsr2l,c
  1843  000D96  0100               	movlb	0	; () banked
  1844  000D98  3595               	rlcf	(_i+1)& (0+255),w,b
  1845  000D9A  6EDA               	movwf	fsr2h,c
  1846  000D9C  0E00               	movlw	low _tab_para_d
  1847  000D9E  26D9               	addwf	fsr2l,f,c
  1848  000DA0  0E02               	movlw	high _tab_para_d
  1849  000DA2  22DA               	addwfc	fsr2h,f,c
  1850  000DA4  50DE               	movf	postinc2,w,c
  1851  000DA6  0100               	movlb	0	; () banked
  1852  000DA8  5D90               	subwf	_countd& (0+255),w,b
  1853  000DAA  50DE               	movf	postinc2,w,c
  1854  000DAC  0100               	movlb	0	; () banked
  1855  000DAE  5991               	subwfb	(_countd+1)& (0+255),w,b
  1856  000DB0  A0D8               	btfss	status,0,c
  1857  000DB2  D007               	goto	l3269
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;TABLEAU_2.c: 508: {
  1861                           ;TABLEAU_2.c: 510: SetPWMDutyD(0);
  1862  000DB4  0E00               	movlw	0
  1863  000DB6  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1864  000DB8  0E00               	movlw	0
  1865  000DBA  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1866  000DBC  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1867  000DC0  D6A7               	goto	L7
  1868  000DC2                     l3269:
  1869                           
  1870                           ;TABLEAU_2.c: 514: else
  1871                           ;TABLEAU_2.c: 515: {
  1872                           ;TABLEAU_2.c: 516: SetPWMDutyD(800);
  1873  000DC2  0E03               	movlw	3
  1874  000DC4  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1875  000DC6  0E20               	movlw	32
  1876  000DC8  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1877  000DCA  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1878                           
  1879                           ;TABLEAU_2.c: 517: in_config(1, 1);
  1880  000DCE  0E01               	movlw	1
  1881  000DD0  6E1A               	movwf	in_config@droite,c
  1882  000DD2  0E01               	movlw	1
  1883  000DD4  EC48  F010         	call	_in_config
  1884  000DD8  D742               	goto	l3215
  1885  000DDA                     l3281:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;TABLEAU_2.c: 533: else if (tab_command[i] == 5)
  1889  000DDA  90D8               	bcf	status,0,c
  1890  000DDC  0100               	movlb	0	; () banked
  1891  000DDE  3594               	rlcf	_i& (0+255),w,b
  1892  000DE0  6ED9               	movwf	fsr2l,c
  1893  000DE2  0100               	movlb	0	; () banked
  1894  000DE4  3595               	rlcf	(_i+1)& (0+255),w,b
  1895  000DE6  6EDA               	movwf	fsr2h,c
  1896  000DE8  0E00               	movlw	low _tab_command
  1897  000DEA  26D9               	addwf	fsr2l,f,c
  1898  000DEC  0E01               	movlw	high _tab_command
  1899  000DEE  22DA               	addwfc	fsr2h,f,c
  1900  000DF0  0E05               	movlw	5
  1901  000DF2  18DE               	xorwf	postinc2,w,c
  1902  000DF4  10DE               	iorwf	postinc2,w,c
  1903  000DF6  A4D8               	btfss	status,2,c
  1904  000DF8  D04C               	goto	l3309
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;TABLEAU_2.c: 534: {
  1908                           ;TABLEAU_2.c: 537: if (countg >= tab_para_g[i])
  1909  000DFA  90D8               	bcf	status,0,c
  1910  000DFC  0100               	movlb	0	; () banked
  1911  000DFE  3594               	rlcf	_i& (0+255),w,b
  1912  000E00  6ED9               	movwf	fsr2l,c
  1913  000E02  0100               	movlb	0	; () banked
  1914  000E04  3595               	rlcf	(_i+1)& (0+255),w,b
  1915  000E06  6EDA               	movwf	fsr2h,c
  1916  000E08  0E64               	movlw	low _tab_para_g
  1917  000E0A  26D9               	addwf	fsr2l,f,c
  1918  000E0C  0E01               	movlw	high _tab_para_g
  1919  000E0E  22DA               	addwfc	fsr2h,f,c
  1920  000E10  50DE               	movf	postinc2,w,c
  1921  000E12  0100               	movlb	0	; () banked
  1922  000E14  5D92               	subwf	_countg& (0+255),w,b
  1923  000E16  50DE               	movf	postinc2,w,c
  1924  000E18  0100               	movlb	0	; () banked
  1925  000E1A  5993               	subwfb	(_countg+1)& (0+255),w,b
  1926  000E1C  A0D8               	btfss	status,0,c
  1927  000E1E  D008               	goto	l3289
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;TABLEAU_2.c: 539: {
  1931                           ;TABLEAU_2.c: 540: SetPWMDutyG(0);
  1932  000E20  0E00               	movlw	0
  1933  000E22  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1934  000E24  0E00               	movlw	0
  1935  000E26  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1936  000E28  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1937                           
  1938                           ;TABLEAU_2.c: 541: positionok1 = 1;
  1939  000E2C  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  1940                           
  1941                           ;TABLEAU_2.c: 544: }
  1942  000E2E  D00B               	goto	l3291
  1943  000E30                     l3289:
  1944                           
  1945                           ;TABLEAU_2.c: 545: else
  1946                           ;TABLEAU_2.c: 546: {
  1947                           ;TABLEAU_2.c: 547: SetPWMDutyG(512);
  1948  000E30  0E02               	movlw	2
  1949  000E32  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  1950  000E34  0E00               	movlw	0
  1951  000E36  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  1952  000E38  EC35  F010         	call	_SetPWMDutyG	;wreg free
  1953                           
  1954                           ;TABLEAU_2.c: 548: in_config(0, 1);
  1955  000E3C  0E01               	movlw	1
  1956  000E3E  6E1A               	movwf	in_config@droite,c
  1957  000E40  0E00               	movlw	0
  1958  000E42  EC48  F010         	call	_in_config
  1959  000E46                     l3291:
  1960                           
  1961                           ;TABLEAU_2.c: 549: }
  1962                           ;TABLEAU_2.c: 550: if (countd >= tab_para_d[i])
  1963  000E46  90D8               	bcf	status,0,c
  1964  000E48  0100               	movlb	0	; () banked
  1965  000E4A  3594               	rlcf	_i& (0+255),w,b
  1966  000E4C  6ED9               	movwf	fsr2l,c
  1967  000E4E  0100               	movlb	0	; () banked
  1968  000E50  3595               	rlcf	(_i+1)& (0+255),w,b
  1969  000E52  6EDA               	movwf	fsr2h,c
  1970  000E54  0E00               	movlw	low _tab_para_d
  1971  000E56  26D9               	addwf	fsr2l,f,c
  1972  000E58  0E02               	movlw	high _tab_para_d
  1973  000E5A  22DA               	addwfc	fsr2h,f,c
  1974  000E5C  50DE               	movf	postinc2,w,c
  1975  000E5E  0100               	movlb	0	; () banked
  1976  000E60  5D90               	subwf	_countd& (0+255),w,b
  1977  000E62  50DE               	movf	postinc2,w,c
  1978  000E64  0100               	movlb	0	; () banked
  1979  000E66  5991               	subwfb	(_countd+1)& (0+255),w,b
  1980  000E68  A0D8               	btfss	status,0,c
  1981  000E6A  D007               	goto	l3297
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;TABLEAU_2.c: 551: {
  1985                           ;TABLEAU_2.c: 553: SetPWMDutyD(0);
  1986  000E6C  0E00               	movlw	0
  1987  000E6E  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1988  000E70  0E00               	movlw	0
  1989  000E72  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  1990  000E74  EC22  F010         	call	_SetPWMDutyD	;wreg free
  1991  000E78  D64B               	goto	L7
  1992  000E7A                     l3297:
  1993                           
  1994                           ;TABLEAU_2.c: 557: else
  1995                           ;TABLEAU_2.c: 558: {
  1996                           ;TABLEAU_2.c: 559: SetPWMDutyD(512);
  1997  000E7A  0E02               	movlw	2
  1998  000E7C  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  1999  000E7E  0E00               	movlw	0
  2000  000E80  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  2001  000E82  EC22  F010         	call	_SetPWMDutyD	;wreg free
  2002                           
  2003                           ;TABLEAU_2.c: 560: in_config(0, 0);
  2004  000E86  0E00               	movlw	0
  2005  000E88  6E1A               	movwf	in_config@droite,c
  2006  000E8A  0E00               	movlw	0
  2007  000E8C  EC48  F010         	call	_in_config
  2008  000E90  D6E6               	goto	l3215
  2009  000E92                     l3309:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;TABLEAU_2.c: 576: else if (tab_command[i] == 4)
  2013  000E92  90D8               	bcf	status,0,c
  2014  000E94  0100               	movlb	0	; () banked
  2015  000E96  3594               	rlcf	_i& (0+255),w,b
  2016  000E98  6ED9               	movwf	fsr2l,c
  2017  000E9A  0100               	movlb	0	; () banked
  2018  000E9C  3595               	rlcf	(_i+1)& (0+255),w,b
  2019  000E9E  6EDA               	movwf	fsr2h,c
  2020  000EA0  0E00               	movlw	low _tab_command
  2021  000EA2  26D9               	addwf	fsr2l,f,c
  2022  000EA4  0E01               	movlw	high _tab_command
  2023  000EA6  22DA               	addwfc	fsr2h,f,c
  2024  000EA8  0E04               	movlw	4
  2025  000EAA  18DE               	xorwf	postinc2,w,c
  2026  000EAC  10DE               	iorwf	postinc2,w,c
  2027  000EAE  A4D8               	btfss	status,2,c
  2028  000EB0  D04C               	goto	l3337
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;TABLEAU_2.c: 577: {
  2032                           ;TABLEAU_2.c: 580: if (countg >= tab_para_g[i])
  2033  000EB2  90D8               	bcf	status,0,c
  2034  000EB4  0100               	movlb	0	; () banked
  2035  000EB6  3594               	rlcf	_i& (0+255),w,b
  2036  000EB8  6ED9               	movwf	fsr2l,c
  2037  000EBA  0100               	movlb	0	; () banked
  2038  000EBC  3595               	rlcf	(_i+1)& (0+255),w,b
  2039  000EBE  6EDA               	movwf	fsr2h,c
  2040  000EC0  0E64               	movlw	low _tab_para_g
  2041  000EC2  26D9               	addwf	fsr2l,f,c
  2042  000EC4  0E01               	movlw	high _tab_para_g
  2043  000EC6  22DA               	addwfc	fsr2h,f,c
  2044  000EC8  50DE               	movf	postinc2,w,c
  2045  000ECA  0100               	movlb	0	; () banked
  2046  000ECC  5D92               	subwf	_countg& (0+255),w,b
  2047  000ECE  50DE               	movf	postinc2,w,c
  2048  000ED0  0100               	movlb	0	; () banked
  2049  000ED2  5993               	subwfb	(_countg+1)& (0+255),w,b
  2050  000ED4  A0D8               	btfss	status,0,c
  2051  000ED6  D008               	goto	l3317
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;TABLEAU_2.c: 582: {
  2055                           ;TABLEAU_2.c: 583: SetPWMDutyG(0);
  2056  000ED8  0E00               	movlw	0
  2057  000EDA  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  2058  000EDC  0E00               	movlw	0
  2059  000EDE  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  2060  000EE0  EC35  F010         	call	_SetPWMDutyG	;wreg free
  2061                           
  2062                           ;TABLEAU_2.c: 584: positionok1 = 1;
  2063  000EE4  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  2064                           
  2065                           ;TABLEAU_2.c: 587: }
  2066  000EE6  D00B               	goto	l3319
  2067  000EE8                     l3317:
  2068                           
  2069                           ;TABLEAU_2.c: 588: else
  2070                           ;TABLEAU_2.c: 589: {
  2071                           ;TABLEAU_2.c: 590: SetPWMDutyG(700);
  2072  000EE8  0E02               	movlw	2
  2073  000EEA  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  2074  000EEC  0EBC               	movlw	188
  2075  000EEE  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  2076  000EF0  EC35  F010         	call	_SetPWMDutyG	;wreg free
  2077                           
  2078                           ;TABLEAU_2.c: 591: in_config(0, 1);
  2079  000EF4  0E01               	movlw	1
  2080  000EF6  6E1A               	movwf	in_config@droite,c
  2081  000EF8  0E00               	movlw	0
  2082  000EFA  EC48  F010         	call	_in_config
  2083  000EFE                     l3319:
  2084                           
  2085                           ;TABLEAU_2.c: 592: }
  2086                           ;TABLEAU_2.c: 593: if (countd >= tab_para_d[i])
  2087  000EFE  90D8               	bcf	status,0,c
  2088  000F00  0100               	movlb	0	; () banked
  2089  000F02  3594               	rlcf	_i& (0+255),w,b
  2090  000F04  6ED9               	movwf	fsr2l,c
  2091  000F06  0100               	movlb	0	; () banked
  2092  000F08  3595               	rlcf	(_i+1)& (0+255),w,b
  2093  000F0A  6EDA               	movwf	fsr2h,c
  2094  000F0C  0E00               	movlw	low _tab_para_d
  2095  000F0E  26D9               	addwf	fsr2l,f,c
  2096  000F10  0E02               	movlw	high _tab_para_d
  2097  000F12  22DA               	addwfc	fsr2h,f,c
  2098  000F14  50DE               	movf	postinc2,w,c
  2099  000F16  0100               	movlb	0	; () banked
  2100  000F18  5D90               	subwf	_countd& (0+255),w,b
  2101  000F1A  50DE               	movf	postinc2,w,c
  2102  000F1C  0100               	movlb	0	; () banked
  2103  000F1E  5991               	subwfb	(_countd+1)& (0+255),w,b
  2104  000F20  A0D8               	btfss	status,0,c
  2105  000F22  D007               	goto	l3325
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;TABLEAU_2.c: 594: {
  2109                           ;TABLEAU_2.c: 596: SetPWMDutyD(0);
  2110  000F24  0E00               	movlw	0
  2111  000F26  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  2112  000F28  0E00               	movlw	0
  2113  000F2A  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  2114  000F2C  EC22  F010         	call	_SetPWMDutyD	;wreg free
  2115  000F30  D5EF               	goto	L7
  2116  000F32                     l3325:
  2117                           
  2118                           ;TABLEAU_2.c: 600: else
  2119                           ;TABLEAU_2.c: 601: {
  2120                           ;TABLEAU_2.c: 602: SetPWMDutyD(700);
  2121  000F32  0E02               	movlw	2
  2122  000F34  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  2123  000F36  0EBC               	movlw	188
  2124  000F38  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  2125  000F3A  EC22  F010         	call	_SetPWMDutyD	;wreg free
  2126                           
  2127                           ;TABLEAU_2.c: 603: in_config(0, 1);
  2128  000F3E  0E01               	movlw	1
  2129  000F40  6E1A               	movwf	in_config@droite,c
  2130  000F42  0E00               	movlw	0
  2131  000F44  EC48  F010         	call	_in_config
  2132  000F48  D68A               	goto	l3215
  2133  000F4A                     l3337:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;TABLEAU_2.c: 619: else if (tab_command[i] == 6)
  2137  000F4A  90D8               	bcf	status,0,c
  2138  000F4C  0100               	movlb	0	; () banked
  2139  000F4E  3594               	rlcf	_i& (0+255),w,b
  2140  000F50  6ED9               	movwf	fsr2l,c
  2141  000F52  0100               	movlb	0	; () banked
  2142  000F54  3595               	rlcf	(_i+1)& (0+255),w,b
  2143  000F56  6EDA               	movwf	fsr2h,c
  2144  000F58  0E00               	movlw	low _tab_command
  2145  000F5A  26D9               	addwf	fsr2l,f,c
  2146  000F5C  0E01               	movlw	high _tab_command
  2147  000F5E  22DA               	addwfc	fsr2h,f,c
  2148  000F60  0E06               	movlw	6
  2149  000F62  18DE               	xorwf	postinc2,w,c
  2150  000F64  10DE               	iorwf	postinc2,w,c
  2151  000F66  A4D8               	btfss	status,2,c
  2152  000F68  D057               	goto	l3365
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;TABLEAU_2.c: 620: {
  2156                           ;TABLEAU_2.c: 623: if (countg >= tab_para_g[i])
  2157  000F6A  90D8               	bcf	status,0,c
  2158  000F6C  0100               	movlb	0	; () banked
  2159  000F6E  3594               	rlcf	_i& (0+255),w,b
  2160  000F70  6ED9               	movwf	fsr2l,c
  2161  000F72  0100               	movlb	0	; () banked
  2162  000F74  3595               	rlcf	(_i+1)& (0+255),w,b
  2163  000F76  6EDA               	movwf	fsr2h,c
  2164  000F78  0E64               	movlw	low _tab_para_g
  2165  000F7A  26D9               	addwf	fsr2l,f,c
  2166  000F7C  0E01               	movlw	high _tab_para_g
  2167  000F7E  22DA               	addwfc	fsr2h,f,c
  2168  000F80  50DE               	movf	postinc2,w,c
  2169  000F82  0100               	movlb	0	; () banked
  2170  000F84  5D92               	subwf	_countg& (0+255),w,b
  2171  000F86  50DE               	movf	postinc2,w,c
  2172  000F88  0100               	movlb	0	; () banked
  2173  000F8A  5993               	subwfb	(_countg+1)& (0+255),w,b
  2174  000F8C  A0D8               	btfss	status,0,c
  2175  000F8E  D008               	goto	l3345
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;TABLEAU_2.c: 625: {
  2179                           ;TABLEAU_2.c: 626: SetPWMDutyG(0);
  2180  000F90  0E00               	movlw	0
  2181  000F92  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  2182  000F94  0E00               	movlw	0
  2183  000F96  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  2184  000F98  EC35  F010         	call	_SetPWMDutyG	;wreg free
  2185                           
  2186                           ;TABLEAU_2.c: 627: positionok1 = 1;
  2187  000F9C  8045               	bsf	_positionok1/(0+8),_positionok1& (0+7),c
  2188                           
  2189                           ;TABLEAU_2.c: 630: }
  2190  000F9E  D00B               	goto	l3347
  2191  000FA0                     l3345:
  2192                           
  2193                           ;TABLEAU_2.c: 631: else
  2194                           ;TABLEAU_2.c: 632: {
  2195                           ;TABLEAU_2.c: 633: SetPWMDutyG(700);
  2196  000FA0  0E02               	movlw	2
  2197  000FA2  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  2198  000FA4  0EBC               	movlw	188
  2199  000FA6  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  2200  000FA8  EC35  F010         	call	_SetPWMDutyG	;wreg free
  2201                           
  2202                           ;TABLEAU_2.c: 634: in_config(0, 0);
  2203  000FAC  0E00               	movlw	0
  2204  000FAE  6E1A               	movwf	in_config@droite,c
  2205  000FB0  0E00               	movlw	0
  2206  000FB2  EC48  F010         	call	_in_config
  2207  000FB6                     l3347:
  2208                           
  2209                           ;TABLEAU_2.c: 637: }
  2210                           ;TABLEAU_2.c: 638: if (countd >= tab_para_d[i])
  2211  000FB6  90D8               	bcf	status,0,c
  2212  000FB8  0100               	movlb	0	; () banked
  2213  000FBA  3594               	rlcf	_i& (0+255),w,b
  2214  000FBC  6ED9               	movwf	fsr2l,c
  2215  000FBE  0100               	movlb	0	; () banked
  2216  000FC0  3595               	rlcf	(_i+1)& (0+255),w,b
  2217  000FC2  6EDA               	movwf	fsr2h,c
  2218  000FC4  0E00               	movlw	low _tab_para_d
  2219  000FC6  26D9               	addwf	fsr2l,f,c
  2220  000FC8  0E02               	movlw	high _tab_para_d
  2221  000FCA  22DA               	addwfc	fsr2h,f,c
  2222  000FCC  50DE               	movf	postinc2,w,c
  2223  000FCE  0100               	movlb	0	; () banked
  2224  000FD0  5D90               	subwf	_countd& (0+255),w,b
  2225  000FD2  50DE               	movf	postinc2,w,c
  2226  000FD4  0100               	movlb	0	; () banked
  2227  000FD6  5991               	subwfb	(_countd+1)& (0+255),w,b
  2228  000FD8  A0D8               	btfss	status,0,c
  2229  000FDA  D007               	goto	l3353
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;TABLEAU_2.c: 639: {
  2233                           ;TABLEAU_2.c: 641: SetPWMDutyD(0);
  2234  000FDC  0E00               	movlw	0
  2235  000FDE  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  2236  000FE0  0E00               	movlw	0
  2237  000FE2  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  2238  000FE4  EC22  F010         	call	_SetPWMDutyD	;wreg free
  2239  000FE8  D593               	goto	L7
  2240  000FEA                     l3353:
  2241                           
  2242                           ;TABLEAU_2.c: 645: else
  2243                           ;TABLEAU_2.c: 646: {
  2244                           ;TABLEAU_2.c: 647: SetPWMDutyD(700);
  2245  000FEA  0E02               	movlw	2
  2246  000FEC  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  2247  000FEE  0EBC               	movlw	188
  2248  000FF0  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  2249  000FF2  EC22  F010         	call	_SetPWMDutyD	;wreg free
  2250                           
  2251                           ;TABLEAU_2.c: 648: in_config(0, 0);
  2252  000FF6  0E00               	movlw	0
  2253  000FF8  6E1A               	movwf	in_config@droite,c
  2254  000FFA  0E00               	movlw	0
  2255  000FFC  EC48  F010         	call	_in_config
  2256  001000  D62E               	goto	l3215
  2257  001002                     L6:
  2258                           
  2259                           ;TABLEAU_2.c: 657: countg = 0;
  2260  001002  0E00               	movlw	0
  2261  001004  0100               	movlb	0	; () banked
  2262  001006  6F93               	movwf	(_countg+1)& (0+255),b
  2263  001008  0E00               	movlw	0
  2264  00100A  6F92               	movwf	_countg& (0+255),b
  2265                           
  2266                           ;TABLEAU_2.c: 658: countd = 0;
  2267  00100C  0E00               	movlw	0
  2268  00100E  0100               	movlb	0	; () banked
  2269  001010  6F91               	movwf	(_countd+1)& (0+255),b
  2270  001012  0E00               	movlw	0
  2271  001014  6F90               	movwf	_countd& (0+255),b
  2272  001016  D58A               	goto	l3169
  2273  001018                     l3365:
  2274  001018  0100               	movlb	0	; () banked
  2275  00101A  51AF               	movf	_N& (0+255),w,b
  2276  00101C  0100               	movlb	0	; () banked
  2277  00101E  5D94               	subwf	_i& (0+255),w,b
  2278  001020  0100               	movlb	0	; () banked
  2279  001022  51B0               	movf	(_N+1)& (0+255),w,b
  2280  001024  0100               	movlb	0	; () banked
  2281  001026  5995               	subwfb	(_i+1)& (0+255),w,b
  2282  001028  B0D8               	btfsc	status,0,c
  2283  00102A  D7F6               	goto	l3365
  2284  00102C  D49F               	goto	l3109
  2285  00102E                     __end_of_main:
  2286                           	opt stack 0
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           intcon	equ	0xFF2
  2292                           intcon2	equ	0xFF1
  2293                           intcon3	equ	0xFF0
  2294                           postinc0	equ	0xFEE
  2295                           wreg	equ	0xFE8
  2296                           postdec1	equ	0xFE5
  2297                           fsr1l	equ	0xFE1
  2298                           postinc2	equ	0xFDE
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           
  2303 ;; *************** function _sendPulse *****************
  2304 ;; Defined at:
  2305 ;;		line 829 in file "TABLEAU_2.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		wreg
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    3
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text1
  2334  002152                     __ptext1:
  2335                           	opt stack 0
  2336  002152                     _sendPulse:
  2337                           	opt stack 27
  2338                           
  2339                           ;TABLEAU_2.c: 831: PORTDbits.RD0 = 1;
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;incstack = 0
  2343  002152  8083               	bsf	3971,0,c	;volatile
  2344                           
  2345                           ;TABLEAU_2.c: 832: _delay((unsigned long)((10)*(48000000/4000000.0)));
  2346  002154  0E28               	movlw	40
  2347  002156                     u3807:
  2348  002156  2EE8               	decfsz	wreg,f,c
  2349  002158  D7FE               	goto	u3807
  2350                           
  2351                           ;TABLEAU_2.c: 833: PORTDbits.RD0 = 0;
  2352  00215A  9083               	bcf	3971,0,c	;volatile
  2353  00215C  0012               	return		;funcret
  2354  00215E                     __end_of_sendPulse:
  2355                           	opt stack 0
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           intcon	equ	0xFF2
  2361                           intcon2	equ	0xFF1
  2362                           intcon3	equ	0xFF0
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           postdec1	equ	0xFE5
  2366                           fsr1l	equ	0xFE1
  2367                           postinc2	equ	0xFDE
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _in_config *****************
  2373 ;; Defined at:
  2374 ;;		line 803 in file "TABLEAU_2.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  gauche          1    wreg     unsigned char 
  2377 ;;  droite          1   25[COMRAM] unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  gauche          1   26[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         1       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text2
  2404  002090                     __ptext2:
  2405                           	opt stack 0
  2406  002090                     _in_config:
  2407                           	opt stack 27
  2408                           
  2409                           ;incstack = 0
  2410                           ;in_config@gauche stored from wreg
  2411  002090  6E1B               	movwf	in_config@gauche,c
  2412                           
  2413                           ;TABLEAU_2.c: 805: if (gauche == 1)
  2414  002092  041B               	decf	in_config@gauche,w,c
  2415  002094  A4D8               	btfss	status,2,c
  2416  002096  D003               	goto	l240
  2417                           
  2418                           ;TABLEAU_2.c: 806: {
  2419                           ;TABLEAU_2.c: 807: PORTBbits.RB4 = 0;
  2420  002098  9881               	bcf	3969,4,c	;volatile
  2421                           
  2422                           ;TABLEAU_2.c: 808: PORTBbits.RB5 = 1;
  2423  00209A  8A81               	bsf	3969,5,c	;volatile
  2424                           
  2425                           ;TABLEAU_2.c: 809: }
  2426  00209C  D002               	goto	l2495
  2427  00209E                     l240:
  2428                           
  2429                           ;TABLEAU_2.c: 810: else
  2430                           ;TABLEAU_2.c: 811: {
  2431                           ;TABLEAU_2.c: 812: PORTBbits.RB4 = 1;
  2432  00209E  8881               	bsf	3969,4,c	;volatile
  2433                           
  2434                           ;TABLEAU_2.c: 813: PORTBbits.RB5 = 0;
  2435  0020A0  9A81               	bcf	3969,5,c	;volatile
  2436  0020A2                     l2495:
  2437                           
  2438                           ;TABLEAU_2.c: 814: }
  2439                           ;TABLEAU_2.c: 816: if (droite == 1)
  2440  0020A2  041A               	decf	in_config@droite,w,c
  2441  0020A4  A4D8               	btfss	status,2,c
  2442  0020A6  D003               	goto	l242
  2443                           
  2444                           ;TABLEAU_2.c: 817: {
  2445                           ;TABLEAU_2.c: 818: PORTBbits.RB6 = 0;
  2446  0020A8  9C81               	bcf	3969,6,c	;volatile
  2447                           
  2448                           ;TABLEAU_2.c: 819: PORTBbits.RB7 = 1;
  2449  0020AA  8E81               	bsf	3969,7,c	;volatile
  2450                           
  2451                           ;TABLEAU_2.c: 820: }
  2452  0020AC  0012               	return	
  2453  0020AE                     l242:
  2454                           
  2455                           ;TABLEAU_2.c: 821: else
  2456                           ;TABLEAU_2.c: 822: {
  2457                           ;TABLEAU_2.c: 823: PORTBbits.RB6 = 1;
  2458  0020AE  8C81               	bsf	3969,6,c	;volatile
  2459                           
  2460                           ;TABLEAU_2.c: 824: PORTBbits.RB7 = 0;
  2461  0020B0  9E81               	bcf	3969,7,c	;volatile
  2462  0020B2  0012               	return	
  2463  0020B4                     __end_of_in_config:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           intcon	equ	0xFF2
  2470                           intcon2	equ	0xFF1
  2471                           intcon3	equ	0xFF0
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           postdec1	equ	0xFE5
  2475                           fsr1l	equ	0xFE1
  2476                           postinc2	equ	0xFDE
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _ftoa *****************
  2482 ;; Defined at:
  2483 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/ftoa.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  f               3   24[BANK0 ] float 
  2486 ;;  status          2   27[BANK0 ] PTR int 
  2487 ;;		 -> status(2), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  l               4   33[BANK0 ] unsigned long 
  2490 ;;  rem             4   29[BANK0 ] unsigned long 
  2491 ;;  cp              2   37[BANK0 ] PTR unsigned char 
  2492 ;;		 -> ftoa@buf(17), 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   24[BANK0 ] PTR unsigned char 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         0       5       0       0       0       0       0       0       0
  2503 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         0      15       0       0       0       0       0       0       0
  2506 ;;Total ram usage:       15 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    6
  2509 ;; This function calls:
  2510 ;;		___ftmul
  2511 ;;		___ftneg
  2512 ;;		___ftsub
  2513 ;;		___fttol
  2514 ;;		___lltoft
  2515 ;;		_sprintf
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text3
  2522  00191E                     __ptext3:
  2523                           	opt stack 0
  2524  00191E                     _ftoa:
  2525                           	opt stack 24
  2526                           
  2527                           ;incstack = 0
  2528  00191E  0E99               	movlw	low ftoa@buf
  2529  001920  0100               	movlb	0	; () banked
  2530  001922  6F85               	movwf	ftoa@cp& (0+255),b
  2531  001924  0E00               	movlw	high ftoa@buf
  2532  001926  0100               	movlb	0	; () banked
  2533  001928  6F86               	movwf	(ftoa@cp+1)& (0+255),b
  2534  00192A  0100               	movlb	0	; () banked
  2535  00192C  AF7A               	btfss	(ftoa@f+2)& (0+255),7,b
  2536  00192E  D017               	goto	l3049
  2537                           
  2538                           ; BSR set to: 0
  2539  001930  C085  FFD9         	movff	ftoa@cp,fsr2l
  2540  001934  C086  FFDA         	movff	ftoa@cp+1,fsr2h
  2541  001938  0E2D               	movlw	45
  2542  00193A  6EDF               	movwf	indf2,c
  2543                           
  2544                           ; BSR set to: 0
  2545  00193C  0100               	movlb	0	; () banked
  2546  00193E  4B85               	infsnz	ftoa@cp& (0+255),f,b
  2547  001940  2B86               	incf	(ftoa@cp+1)& (0+255),f,b
  2548                           
  2549                           ; BSR set to: 0
  2550  001942  C078  F01A         	movff	ftoa@f,___ftneg@f1
  2551  001946  C079  F01B         	movff	ftoa@f+1,___ftneg@f1+1
  2552  00194A  C07A  F01C         	movff	ftoa@f+2,___ftneg@f1+2
  2553  00194E  EC5A  F010         	call	___ftneg	;wreg free
  2554  001952  C01A  F078         	movff	?___ftneg,ftoa@f
  2555  001956  C01B  F079         	movff	?___ftneg+1,ftoa@f+1
  2556  00195A  C01C  F07A         	movff	?___ftneg+2,ftoa@f+2
  2557  00195E                     l3049:
  2558  00195E  C078  F031         	movff	ftoa@f,___fttol@f1
  2559  001962  C079  F032         	movff	ftoa@f+1,___fttol@f1+1
  2560  001966  C07A  F033         	movff	ftoa@f+2,___fttol@f1+2
  2561  00196A  EC62  F00B         	call	___fttol	;wreg free
  2562  00196E  C031  F081         	movff	?___fttol,ftoa@l
  2563  001972  C032  F082         	movff	?___fttol+1,ftoa@l+1
  2564  001976  C033  F083         	movff	?___fttol+2,ftoa@l+2
  2565  00197A  C034  F084         	movff	?___fttol+3,ftoa@l+3
  2566  00197E  C078  F02E         	movff	ftoa@f,___ftsub@f1
  2567  001982  C079  F02F         	movff	ftoa@f+1,___ftsub@f1+1
  2568  001986  C07A  F030         	movff	ftoa@f+2,___ftsub@f1+2
  2569  00198A  C081  F022         	movff	ftoa@l,___lltoft@c
  2570  00198E  C082  F023         	movff	ftoa@l+1,___lltoft@c+1
  2571  001992  C083  F024         	movff	ftoa@l+2,___lltoft@c+2
  2572  001996  C084  F025         	movff	ftoa@l+3,___lltoft@c+3
  2573  00199A  ECA7  F00F         	call	___lltoft	;wreg free
  2574  00199E  C022  F031         	movff	?___lltoft,___ftsub@f2
  2575  0019A2  C023  F032         	movff	?___lltoft+1,___ftsub@f2+1
  2576  0019A6  C024  F033         	movff	?___lltoft+2,___ftsub@f2+2
  2577  0019AA  ECD5  F00F         	call	___ftsub	;wreg free
  2578  0019AE  C02E  F078         	movff	?___ftsub,ftoa@f
  2579  0019B2  C02F  F079         	movff	?___ftsub+1,ftoa@f+1
  2580  0019B6  C030  F07A         	movff	?___ftsub+2,ftoa@f+2
  2581  0019BA  0E24               	movlw	36
  2582  0019BC  6E25               	movwf	___ftmul@f2,c
  2583  0019BE  0E74               	movlw	116
  2584  0019C0  6E26               	movwf	___ftmul@f2+1,c
  2585  0019C2  0E49               	movlw	73
  2586  0019C4  6E27               	movwf	___ftmul@f2+2,c
  2587  0019C6  C078  F022         	movff	ftoa@f,___ftmul@f1
  2588  0019CA  C079  F023         	movff	ftoa@f+1,___ftmul@f1+1
  2589  0019CE  C07A  F024         	movff	ftoa@f+2,___ftmul@f1+2
  2590  0019D2  EC1E  F00D         	call	___ftmul	;wreg free
  2591  0019D6  C022  F031         	movff	?___ftmul,___fttol@f1
  2592  0019DA  C023  F032         	movff	?___ftmul+1,___fttol@f1+1
  2593  0019DE  C024  F033         	movff	?___ftmul+2,___fttol@f1+2
  2594  0019E2  EC62  F00B         	call	___fttol	;wreg free
  2595  0019E6  C031  F07D         	movff	?___fttol,ftoa@rem
  2596  0019EA  C032  F07E         	movff	?___fttol+1,ftoa@rem+1
  2597  0019EE  C033  F07F         	movff	?___fttol+2,ftoa@rem+2
  2598  0019F2  C034  F080         	movff	?___fttol+3,ftoa@rem+3
  2599  0019F6  C085  F060         	movff	ftoa@cp,sprintf@sp
  2600  0019FA  C086  F061         	movff	ftoa@cp+1,sprintf@sp+1
  2601  0019FE  0E29               	movlw	low STR_1
  2602  001A00  0100               	movlb	0	; () banked
  2603  001A02  6F62               	movwf	sprintf@f& (0+255),b
  2604  001A04  0E08               	movlw	high STR_1
  2605  001A06  0100               	movlb	0	; () banked
  2606  001A08  6F63               	movwf	(sprintf@f+1)& (0+255),b
  2607  001A0A  C081  F064         	movff	ftoa@l,?_sprintf+4
  2608  001A0E  C082  F065         	movff	ftoa@l+1,?_sprintf+5
  2609  001A12  C083  F066         	movff	ftoa@l+2,?_sprintf+6
  2610  001A16  C084  F067         	movff	ftoa@l+3,?_sprintf+7
  2611  001A1A  C07D  F068         	movff	ftoa@rem,?_sprintf+8
  2612  001A1E  C07E  F069         	movff	ftoa@rem+1,?_sprintf+9
  2613  001A22  C07F  F06A         	movff	ftoa@rem+2,?_sprintf+10
  2614  001A26  C080  F06B         	movff	ftoa@rem+3,?_sprintf+11
  2615  001A2A  EC17  F008         	call	_sprintf	;wreg free
  2616  001A2E  0E99               	movlw	low ftoa@buf
  2617  001A30  0100               	movlb	0	; () banked
  2618  001A32  6F78               	movwf	?_ftoa& (0+255),b
  2619  001A34  0E00               	movlw	high ftoa@buf
  2620  001A36  0100               	movlb	0	; () banked
  2621  001A38  6F79               	movwf	(?_ftoa+1)& (0+255),b
  2622  001A3A  0012               	return	
  2623  001A3C                     __end_of_ftoa:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           intcon	equ	0xFF2
  2630                           intcon2	equ	0xFF1
  2631                           intcon3	equ	0xFF0
  2632                           postinc0	equ	0xFEE
  2633                           wreg	equ	0xFE8
  2634                           postdec1	equ	0xFE5
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           postinc2	equ	0xFDE
  2638                           fsr2h	equ	0xFDA
  2639                           fsr2l	equ	0xFD9
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _sprintf *****************
  2643 ;; Defined at:
  2644 ;;		line 492 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  2647 ;;		 -> ftoa@buf(17), 
  2648 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2649 ;;		 -> STR_1(11), 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  val             4   15[BANK0 ] unsigned long 
  2652 ;;  tmpval          4    0        struct .
  2653 ;;  cp              3    0        PTR const unsigned char 
  2654 ;;  prec            2   21[BANK0 ] int 
  2655 ;;  width           2   19[BANK0 ] int 
  2656 ;;  ap              2   13[BANK0 ] PTR void [1]
  2657 ;;		 -> ?_sprintf(2), 
  2658 ;;  len             2    0        unsigned int 
  2659 ;;  c               1   23[BANK0 ] char 
  2660 ;;  flag            1   12[BANK0 ] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2    0[BANK0 ] int 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2670 ;;      Params:         0      12       0       0       0       0       0       0       0
  2671 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2672 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2673 ;;      Totals:         4      24       0       0       0       0       0       0       0
  2674 ;;Total ram usage:       28 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    4
  2677 ;; This function calls:
  2678 ;;		___lldiv
  2679 ;;		___llmod
  2680 ;;		___wmul
  2681 ;;		_isdigit
  2682 ;; This function is called by:
  2683 ;;		_ftoa
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text4
  2688  00102E                     __ptext4:
  2689                           	opt stack 0
  2690  00102E                     _sprintf:
  2691                           	opt stack 25
  2692                           
  2693                           ;doprnt.c: 494: va_list ap;
  2694                           ;doprnt.c: 499: signed char c;
  2695                           ;doprnt.c: 501: int width;
  2696                           ;doprnt.c: 504: int prec;
  2697                           ;doprnt.c: 508: unsigned char flag;
  2698                           ;doprnt.c: 523: union {
  2699                           ;doprnt.c: 524: unsigned long vd;
  2700                           ;doprnt.c: 525: double integ;
  2701                           ;doprnt.c: 526: } tmpval;
  2702                           ;doprnt.c: 528: unsigned long val;
  2703                           ;doprnt.c: 529: unsigned len;
  2704                           ;doprnt.c: 530: const char * cp;
  2705                           ;doprnt.c: 533: *ap = __va_start();
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;incstack = 0
  2709  00102E  0E64               	movlw	low (?_sprintf+4)
  2710  001030  0100               	movlb	0	; () banked
  2711  001032  6F6D               	movwf	sprintf@ap& (0+255),b
  2712  001034  0E00               	movlw	high (?_sprintf+4)
  2713  001036  0100               	movlb	0	; () banked
  2714  001038  6F6E               	movwf	(sprintf@ap+1)& (0+255),b
  2715                           
  2716                           ;doprnt.c: 536: while(c = *f++) {
  2717  00103A  D1BE               	goto	l2989
  2718  00103C                     l2889:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;doprnt.c: 538: if(c != '%')
  2722  00103C  0E25               	movlw	37
  2723  00103E  0100               	movlb	0	; () banked
  2724  001040  1977               	xorwf	sprintf@c& (0+255),w,b
  2725  001042  B4D8               	btfsc	status,2,c
  2726  001044  D00A               	goto	l2895
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;doprnt.c: 540: {
  2730                           ;doprnt.c: 541: ((*sp++ = (c)));
  2731  001046  C060  FFD9         	movff	sprintf@sp,fsr2l
  2732  00104A  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2733  00104E  C077  FFDF         	movff	sprintf@c,indf2
  2734                           
  2735                           ; BSR set to: 0
  2736  001052  0100               	movlb	0	; () banked
  2737  001054  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2738  001056  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2739                           
  2740                           ;doprnt.c: 542: continue;
  2741  001058  D1AF               	goto	l2989
  2742  00105A                     l2895:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;doprnt.c: 543: }
  2746                           ;doprnt.c: 546: width = 0;
  2747  00105A  0E00               	movlw	0
  2748  00105C  0100               	movlb	0	; () banked
  2749  00105E  6F74               	movwf	(sprintf@width+1)& (0+255),b
  2750  001060  0E00               	movlw	0
  2751  001062  6F73               	movwf	sprintf@width& (0+255),b
  2752                           
  2753                           ;doprnt.c: 548: flag = 0;
  2754  001064  0E00               	movlw	0
  2755  001066  0100               	movlb	0	; () banked
  2756  001068  6F6C               	movwf	sprintf@flag& (0+255),b
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2760  00106A  C062  FFF6         	movff	sprintf@f,tblptrl
  2761  00106E  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2762  001072                     	if	0	;tblptru may be non-zero
  2763  001072                     	endif
  2764  001072                     	if	0	;tblptru may be non-zero
  2765  001072                     	endif
  2766  001072  0008               	tblrd		*
  2767  001074  50F5               	movf	tablat,w,c
  2768  001076  EC7E  F010         	call	_isdigit
  2769  00107A  A0D8               	btfss	status,0,c
  2770  00107C  D036               	goto	l2909
  2771                           
  2772                           ;doprnt.c: 598: width = 0;
  2773  00107E  0E00               	movlw	0
  2774  001080  0100               	movlb	0	; () banked
  2775  001082  6F74               	movwf	(sprintf@width+1)& (0+255),b
  2776  001084  0E00               	movlw	0
  2777  001086  6F73               	movwf	sprintf@width& (0+255),b
  2778  001088                     l2901:
  2779                           
  2780                           ;doprnt.c: 600: width *= 10;
  2781  001088  C073  F01A         	movff	sprintf@width,___wmul@multiplier
  2782  00108C  C074  F01B         	movff	sprintf@width+1,___wmul@multiplier+1
  2783  001090  0E00               	movlw	0
  2784  001092  6E1D               	movwf	___wmul@multiplicand+1,c
  2785  001094  0E0A               	movlw	10
  2786  001096  6E1C               	movwf	___wmul@multiplicand,c
  2787  001098  EC0F  F010         	call	___wmul	;wreg free
  2788  00109C  C01A  F073         	movff	?___wmul,sprintf@width
  2789  0010A0  C01B  F074         	movff	?___wmul+1,sprintf@width+1
  2790                           
  2791                           ;doprnt.c: 601: width += *f++ - '0';
  2792  0010A4  0ED0               	movlw	208
  2793  0010A6  6E30               	movwf	??_sprintf& (0+255),c
  2794  0010A8  0EFF               	movlw	255
  2795  0010AA  6E31               	movwf	(??_sprintf+1)& (0+255),c
  2796  0010AC  C062  FFF6         	movff	sprintf@f,tblptrl
  2797  0010B0  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2798  0010B4                     	if	0	;tblptru may be non-zero
  2799  0010B4                     	endif
  2800  0010B4                     	if	0	;tblptru may be non-zero
  2801  0010B4                     	endif
  2802  0010B4  0008               	tblrd		*
  2803  0010B6  50F5               	movf	tablat,w,c
  2804  0010B8  6E32               	movwf	(??_sprintf+2)& (0+255),c
  2805  0010BA  6A33               	clrf	(??_sprintf+3)& (0+255),c
  2806  0010BC  5030               	movf	??_sprintf,w,c
  2807  0010BE  2632               	addwf	??_sprintf+2,f,c
  2808  0010C0  5031               	movf	??_sprintf+1,w,c
  2809  0010C2  2233               	addwfc	??_sprintf+3,f,c
  2810  0010C4  5032               	movf	??_sprintf+2,w,c
  2811  0010C6  0100               	movlb	0	; () banked
  2812  0010C8  2773               	addwf	sprintf@width& (0+255),f,b
  2813  0010CA  5033               	movf	??_sprintf+3,w,c
  2814  0010CC  0100               	movlb	0	; () banked
  2815  0010CE  2374               	addwfc	(sprintf@width+1)& (0+255),f,b
  2816                           
  2817                           ; BSR set to: 0
  2818  0010D0  0100               	movlb	0	; () banked
  2819  0010D2  4B62               	infsnz	sprintf@f& (0+255),f,b
  2820  0010D4  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2824  0010D6  C062  FFF6         	movff	sprintf@f,tblptrl
  2825  0010DA  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2826  0010DE                     	if	0	;tblptru may be non-zero
  2827  0010DE                     	endif
  2828  0010DE                     	if	0	;tblptru may be non-zero
  2829  0010DE                     	endif
  2830  0010DE  0008               	tblrd		*
  2831  0010E0  50F5               	movf	tablat,w,c
  2832  0010E2  EC7E  F010         	call	_isdigit
  2833  0010E6  B0D8               	btfsc	status,0,c
  2834  0010E8  D7CF               	goto	l2901
  2835  0010EA                     l2909:
  2836                           
  2837                           ;doprnt.c: 608: }
  2838                           ;doprnt.c: 611: if(*f == '.') {
  2839  0010EA  C062  FFF6         	movff	sprintf@f,tblptrl
  2840  0010EE  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2841  0010F2                     	if	0	;tblptru may be non-zero
  2842  0010F2                     	endif
  2843  0010F2                     	if	0	;tblptru may be non-zero
  2844  0010F2                     	endif
  2845  0010F2  0008               	tblrd		*
  2846  0010F4  50F5               	movf	tablat,w,c
  2847  0010F6  0A2E               	xorlw	46
  2848  0010F8  A4D8               	btfss	status,2,c
  2849  0010FA  D032               	goto	l2921
  2850                           
  2851                           ;doprnt.c: 613: f++;
  2852  0010FC  0100               	movlb	0	; () banked
  2853  0010FE  4B62               	infsnz	sprintf@f& (0+255),f,b
  2854  001100  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;doprnt.c: 620: {
  2858                           ;doprnt.c: 621: prec = 0;
  2859  001102  0E00               	movlw	0
  2860  001104  0100               	movlb	0	; () banked
  2861  001106  6F76               	movwf	(sprintf@prec+1)& (0+255),b
  2862  001108  0E00               	movlw	0
  2863  00110A  6F75               	movwf	sprintf@prec& (0+255),b
  2864                           
  2865                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2866  00110C  D01E               	goto	l2919
  2867  00110E                     l2915:
  2868                           
  2869                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2870  00110E  C075  F01A         	movff	sprintf@prec,___wmul@multiplier
  2871  001112  C076  F01B         	movff	sprintf@prec+1,___wmul@multiplier+1
  2872  001116  0E00               	movlw	0
  2873  001118  6E1D               	movwf	___wmul@multiplicand+1,c
  2874  00111A  0E0A               	movlw	10
  2875  00111C  6E1C               	movwf	___wmul@multiplicand,c
  2876  00111E  EC0F  F010         	call	___wmul	;wreg free
  2877  001122  C062  FFF6         	movff	sprintf@f,tblptrl
  2878  001126  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2879  00112A                     	if	0	;tblptru may be non-zero
  2880  00112A                     	endif
  2881  00112A                     	if	0	;tblptru may be non-zero
  2882  00112A                     	endif
  2883  00112A  0008               	tblrd		*
  2884  00112C  50F5               	movf	tablat,w,c
  2885  00112E  261A               	addwf	?___wmul,f,c
  2886  001130  0E00               	movlw	0
  2887  001132  221B               	addwfc	?___wmul+1,f,c
  2888  001134  0ED0               	movlw	208
  2889  001136  241A               	addwf	?___wmul,w,c
  2890  001138  0100               	movlb	0	; () banked
  2891  00113A  6F75               	movwf	sprintf@prec& (0+255),b
  2892  00113C  0EFF               	movlw	255
  2893  00113E  201B               	addwfc	?___wmul+1,w,c
  2894  001140  0100               	movlb	0	; () banked
  2895  001142  6F76               	movwf	(sprintf@prec+1)& (0+255),b
  2896                           
  2897                           ; BSR set to: 0
  2898  001144  0100               	movlb	0	; () banked
  2899  001146  4B62               	infsnz	sprintf@f& (0+255),f,b
  2900  001148  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2901  00114A                     l2919:
  2902                           
  2903                           ; BSR set to: 0
  2904  00114A  C062  FFF6         	movff	sprintf@f,tblptrl
  2905  00114E  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2906  001152                     	if	0	;tblptru may be non-zero
  2907  001152                     	endif
  2908  001152                     	if	0	;tblptru may be non-zero
  2909  001152                     	endif
  2910  001152  0008               	tblrd		*
  2911  001154  50F5               	movf	tablat,w,c
  2912  001156  EC7E  F010         	call	_isdigit
  2913  00115A  A0D8               	btfss	status,0,c
  2914  00115C  D00E               	goto	l2929
  2915  00115E  D7D7               	goto	l2915
  2916  001160                     l2921:
  2917                           
  2918                           ;doprnt.c: 626: prec = 0;
  2919  001160  0E00               	movlw	0
  2920  001162  0100               	movlb	0	; () banked
  2921  001164  6F76               	movwf	(sprintf@prec+1)& (0+255),b
  2922  001166  0E00               	movlw	0
  2923  001168  6F75               	movwf	sprintf@prec& (0+255),b
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;doprnt.c: 635: switch(c = *f++) {
  2927                           
  2928                           ;doprnt.c: 630: }
  2929                           ;doprnt.c: 633: loop:
  2930                           
  2931                           ; BSR set to: 0
  2932  00116A  D007               	goto	l2929
  2933  00116C                     l2923:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;doprnt.c: 643: flag |= 0x10;
  2937  00116C  0100               	movlb	0	; () banked
  2938  00116E  896C               	bsf	sprintf@flag& (0+255),4,b
  2939                           
  2940                           ;doprnt.c: 644: goto loop;
  2941  001170  D004               	goto	l2929
  2942  001172                     l2925:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;doprnt.c: 818: flag |= 0xC0;
  2946  001172  0EC0               	movlw	192
  2947  001174  0100               	movlb	0	; () banked
  2948  001176  136C               	iorwf	sprintf@flag& (0+255),f,b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;doprnt.c: 822: }
  2952                           
  2953                           ;doprnt.c: 819: break;
  2954  001178  D016               	goto	l335
  2955  00117A                     l2929:
  2956  00117A  C062  FFF6         	movff	sprintf@f,tblptrl
  2957  00117E  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2958  001182  0100               	movlb	0	; () banked
  2959  001184  4B62               	infsnz	sprintf@f& (0+255),f,b
  2960  001186  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2961  001188                     	if	0	;tblptru may be non-zero
  2962  001188                     	endif
  2963  001188                     	if	0	;tblptru may be non-zero
  2964  001188                     	endif
  2965  001188  0008               	tblrd		*
  2966  00118A  CFF5 F077          	movff	tablat,sprintf@c
  2967  00118E  0100               	movlb	0	; () banked
  2968  001190  5177               	movf	sprintf@c& (0+255),w,b
  2969                           
  2970                           ; Switch size 1, requested type "space"
  2971                           ; Number of cases is 3, Range of values is 0 to 117
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte           10     6 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  001192  0A00               	xorlw	0	; case 0
  2977  001194  B4D8               	btfsc	status,2,c
  2978  001196  D11E               	goto	l2991
  2979  001198  0A6C               	xorlw	108	; case 108
  2980  00119A  B4D8               	btfsc	status,2,c
  2981  00119C  D7E7               	goto	l2923
  2982  00119E  0A19               	xorlw	25	; case 117
  2983  0011A0  B4D8               	btfsc	status,2,c
  2984  0011A2  D7E7               	goto	l2925
  2985  0011A4  D109               	goto	l2989
  2986  0011A6                     l335:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;doprnt.c: 1273: {
  2990                           ;doprnt.c: 1281: if(flag & 0x10)
  2991  0011A6  0100               	movlb	0	; () banked
  2992  0011A8  A96C               	btfss	sprintf@flag& (0+255),4,b
  2993  0011AA  D00E               	goto	l2935
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2997  0011AC  C06D  FFD9         	movff	sprintf@ap,fsr2l
  2998  0011B0  C06E  FFDA         	movff	sprintf@ap+1,fsr2h
  2999  0011B4  CFDE F06F          	movff	postinc2,sprintf@val
  3000  0011B8  CFDE F070          	movff	postinc2,sprintf@val+1
  3001  0011BC  CFDE F071          	movff	postinc2,sprintf@val+2
  3002  0011C0  CFDE F072          	movff	postinc2,sprintf@val+3
  3003                           
  3004                           ; BSR set to: 0
  3005  0011C4  0E04               	movlw	4
  3006  0011C6  D010               	goto	L1
  3007  0011C8                     l2935:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;doprnt.c: 1283: else
  3011                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3012  0011C8  C06D  FFD9         	movff	sprintf@ap,fsr2l
  3013  0011CC  C06E  FFDA         	movff	sprintf@ap+1,fsr2h
  3014  0011D0  CFDE F030          	movff	postinc2,??_sprintf
  3015  0011D4  CFDD F031          	movff	postdec2,??_sprintf+1
  3016  0011D8  C030  F06F         	movff	??_sprintf,sprintf@val
  3017  0011DC  C031  F070         	movff	??_sprintf+1,sprintf@val+1
  3018  0011E0  0100               	movlb	0	; () banked
  3019  0011E2  6B71               	clrf	(sprintf@val+2)& (0+255),b
  3020  0011E4  6B72               	clrf	(sprintf@val+3)& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023  0011E6  0E02               	movlw	2
  3024  0011E8                     L1:
  3025  0011E8  0100               	movlb	0	; () banked
  3026  0011EA  276D               	addwf	sprintf@ap& (0+255),f,b
  3027  0011EC  0E00               	movlw	0
  3028  0011EE  236E               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;doprnt.c: 1287: }
  3032                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3033                           
  3034                           ; BSR set to: 0
  3035  0011F0  0100               	movlb	0	; () banked
  3036  0011F2  5175               	movf	sprintf@prec& (0+255),w,b
  3037  0011F4  0100               	movlb	0	; () banked
  3038  0011F6  1176               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3039  0011F8  A4D8               	btfss	status,2,c
  3040  0011FA  D00D               	goto	l2945
  3041                           
  3042                           ; BSR set to: 0
  3043  0011FC  0100               	movlb	0	; () banked
  3044  0011FE  516F               	movf	sprintf@val& (0+255),w,b
  3045  001200  0100               	movlb	0	; () banked
  3046  001202  1170               	iorwf	(sprintf@val+1)& (0+255),w,b
  3047  001204  0100               	movlb	0	; () banked
  3048  001206  1171               	iorwf	(sprintf@val+2)& (0+255),w,b
  3049  001208  0100               	movlb	0	; () banked
  3050  00120A  1172               	iorwf	(sprintf@val+3)& (0+255),w,b
  3051  00120C  A4D8               	btfss	status,2,c
  3052  00120E  D003               	goto	l2945
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;doprnt.c: 1291: prec++;
  3056  001210  0100               	movlb	0	; () banked
  3057  001212  4B75               	infsnz	sprintf@prec& (0+255),f,b
  3058  001214  2B76               	incf	(sprintf@prec+1)& (0+255),f,b
  3059  001216                     l2945:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3063  001216  0E01               	movlw	1
  3064  001218  0100               	movlb	0	; () banked
  3065  00121A  6F77               	movwf	sprintf@c& (0+255),b
  3066  00121C                     l2947:
  3067                           
  3068                           ; BSR set to: 0
  3069  00121C  0E0A               	movlw	10
  3070  00121E  0100               	movlb	0	; () banked
  3071  001220  1977               	xorwf	sprintf@c& (0+255),w,b
  3072  001222  B4D8               	btfsc	status,2,c
  3073  001224  D01E               	goto	l2959
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;doprnt.c: 1306: if(val < dpowers[c])
  3077                           
  3078                           ; BSR set to: 0
  3079                           
  3080                           ; BSR set to: 0
  3081  001226  0100               	movlb	0	; () banked
  3082  001228  5177               	movf	sprintf@c& (0+255),w,b
  3083  00122A  0D04               	mullw	4
  3084  00122C  0E01               	movlw	low _dpowers
  3085  00122E  24F3               	addwf	prodl,w,c
  3086  001230  6EF6               	movwf	tblptrl,c
  3087  001232  0E08               	movlw	high _dpowers
  3088  001234  20F4               	addwfc	prodh,w,c
  3089  001236  6EF7               	movwf	tblptrh,c
  3090  001238                     	if	0	;There are less than 3 active tblptr bytes
  3091  001238                     	endif
  3092  001238  0009               	tblrd		*+
  3093  00123A  50F5               	movf	tablat,w,c
  3094  00123C  0100               	movlb	0	; () banked
  3095  00123E  5D6F               	subwf	sprintf@val& (0+255),w,b
  3096  001240  0009               	tblrd		*+
  3097  001242  50F5               	movf	tablat,w,c
  3098  001244  0100               	movlb	0	; () banked
  3099  001246  5970               	subwfb	(sprintf@val+1)& (0+255),w,b
  3100  001248  0009               	tblrd		*+
  3101  00124A  50F5               	movf	tablat,w,c
  3102  00124C  0100               	movlb	0	; () banked
  3103  00124E  5971               	subwfb	(sprintf@val+2)& (0+255),w,b
  3104  001250  0009               	tblrd		*+
  3105  001252  50F5               	movf	tablat,w,c
  3106  001254  0100               	movlb	0	; () banked
  3107  001256  5972               	subwfb	(sprintf@val+3)& (0+255),w,b
  3108  001258  A0D8               	btfss	status,0,c
  3109  00125A  D003               	goto	l2959
  3110                           
  3111                           ; BSR set to: 0
  3112                           
  3113                           ; BSR set to: 0
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;doprnt.c: 1307: break;
  3117  00125C  0100               	movlb	0	; () banked
  3118  00125E  2B77               	incf	sprintf@c& (0+255),f,b
  3119  001260  D7DD               	goto	l2947
  3120  001262                     l2959:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;doprnt.c: 1339: if(c < prec)
  3124  001262  0E80               	movlw	128
  3125  001264  0100               	movlb	0	; () banked
  3126  001266  BF77               	btfsc	sprintf@c& (0+255),7,b
  3127  001268  0E7F               	movlw	127
  3128  00126A  6E30               	movwf	??_sprintf& (0+255),c
  3129  00126C  0100               	movlb	0	; () banked
  3130  00126E  5175               	movf	sprintf@prec& (0+255),w,b
  3131  001270  0100               	movlb	0	; () banked
  3132  001272  5D77               	subwf	sprintf@c& (0+255),w,b
  3133  001274  0100               	movlb	0	; () banked
  3134  001276  5176               	movf	(sprintf@prec+1)& (0+255),w,b
  3135  001278  0A80               	xorlw	128
  3136  00127A  5830               	subwfb	??_sprintf& (0+255),w,c
  3137  00127C  B0D8               	btfsc	status,0,c
  3138  00127E  D003               	goto	l2963
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;doprnt.c: 1340: c = prec;
  3142  001280  C075  F077         	movff	sprintf@prec,sprintf@c
  3143  001284  D016               	goto	l2967
  3144  001286                     l2963:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;doprnt.c: 1341: else if(prec < c)
  3148  001286  0100               	movlb	0	; () banked
  3149  001288  5176               	movf	(sprintf@prec+1)& (0+255),w,b
  3150  00128A  0A80               	xorlw	128
  3151  00128C  6E30               	movwf	??_sprintf& (0+255),c
  3152  00128E  0100               	movlb	0	; () banked
  3153  001290  5177               	movf	sprintf@c& (0+255),w,b
  3154  001292  0100               	movlb	0	; () banked
  3155  001294  5D75               	subwf	sprintf@prec& (0+255),w,b
  3156  001296  0E80               	movlw	128
  3157  001298  0100               	movlb	0	; () banked
  3158  00129A  BF77               	btfsc	sprintf@c& (0+255),7,b
  3159  00129C  0E7F               	movlw	127
  3160  00129E  5830               	subwfb	??_sprintf& (0+255),w,c
  3161  0012A0  B0D8               	btfsc	status,0,c
  3162  0012A2  D007               	goto	l2967
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;doprnt.c: 1342: prec = c;
  3166  0012A4  0100               	movlb	0	; () banked
  3167  0012A6  5177               	movf	sprintf@c& (0+255),w,b
  3168  0012A8  0100               	movlb	0	; () banked
  3169  0012AA  6F75               	movwf	sprintf@prec& (0+255),b
  3170  0012AC  6B76               	clrf	(sprintf@prec+1)& (0+255),b
  3171  0012AE  BF75               	btfsc	sprintf@prec& (0+255),7,b
  3172  0012B0  0776               	decf	(sprintf@prec+1)& (0+255),f,b
  3173  0012B2                     l2967:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;doprnt.c: 1381: if(width > c)
  3177  0012B2  0E80               	movlw	128
  3178  0012B4  0100               	movlb	0	; () banked
  3179  0012B6  BF77               	btfsc	sprintf@c& (0+255),7,b
  3180  0012B8  0E7F               	movlw	127
  3181  0012BA  6E30               	movwf	??_sprintf& (0+255),c
  3182  0012BC  0100               	movlb	0	; () banked
  3183  0012BE  5173               	movf	sprintf@width& (0+255),w,b
  3184  0012C0  0100               	movlb	0	; () banked
  3185  0012C2  5D77               	subwf	sprintf@c& (0+255),w,b
  3186  0012C4  0100               	movlb	0	; () banked
  3187  0012C6  5174               	movf	(sprintf@width+1)& (0+255),w,b
  3188  0012C8  0A80               	xorlw	128
  3189  0012CA  5830               	subwfb	??_sprintf& (0+255),w,c
  3190  0012CC  B0D8               	btfsc	status,0,c
  3191  0012CE  D00B               	goto	l2971
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;doprnt.c: 1382: width -= c;
  3195  0012D0  0100               	movlb	0	; () banked
  3196  0012D2  5177               	movf	sprintf@c& (0+255),w,b
  3197  0012D4  0100               	movlb	0	; () banked
  3198  0012D6  5F73               	subwf	sprintf@width& (0+255),f,b
  3199  0012D8  0E00               	movlw	0
  3200  0012DA  0100               	movlb	0	; () banked
  3201  0012DC  BF77               	btfsc	sprintf@c& (0+255),7,b
  3202  0012DE  0EFF               	movlw	255
  3203  0012E0  0100               	movlb	0	; () banked
  3204  0012E2  5B74               	subwfb	(sprintf@width+1)& (0+255),f,b
  3205  0012E4  D005               	goto	l2973
  3206  0012E6                     l2971:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;doprnt.c: 1383: else
  3210                           ;doprnt.c: 1384: width = 0;
  3211  0012E6  0E00               	movlw	0
  3212  0012E8  0100               	movlb	0	; () banked
  3213  0012EA  6F74               	movwf	(sprintf@width+1)& (0+255),b
  3214  0012EC  0E00               	movlw	0
  3215  0012EE  6F73               	movwf	sprintf@width& (0+255),b
  3216  0012F0                     l2973:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;doprnt.c: 1422: {
  3220                           ;doprnt.c: 1424: if(width
  3221                           ;doprnt.c: 1428: )
  3222  0012F0  0100               	movlb	0	; () banked
  3223  0012F2  5173               	movf	sprintf@width& (0+255),w,b
  3224  0012F4  0100               	movlb	0	; () banked
  3225  0012F6  1174               	iorwf	(sprintf@width+1)& (0+255),w,b
  3226  0012F8  B4D8               	btfsc	status,2,c
  3227  0012FA  D053               	goto	l2987
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3231                           
  3232                           ; BSR set to: 0
  3233                           
  3234                           ;doprnt.c: 1429: do
  3235  0012FC  C060  FFD9         	movff	sprintf@sp,fsr2l
  3236  001300  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  3237  001304  0E20               	movlw	32
  3238  001306  6EDF               	movwf	indf2,c
  3239                           
  3240                           ; BSR set to: 0
  3241  001308  0100               	movlb	0	; () banked
  3242  00130A  4B60               	infsnz	sprintf@sp& (0+255),f,b
  3243  00130C  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;doprnt.c: 1431: while(--width);
  3247  00130E  0100               	movlb	0	; () banked
  3248  001310  0773               	decf	sprintf@width& (0+255),f,b
  3249  001312  A0D8               	btfss	status,0,c
  3250  001314  0774               	decf	(sprintf@width+1)& (0+255),f,b
  3251  001316  D7EC               	goto	l2973
  3252  001318                     l2981:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;doprnt.c: 1478: {
  3256                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3257  001318  C075  F030         	movff	sprintf@prec,??_sprintf
  3258  00131C  C076  F031         	movff	sprintf@prec+1,??_sprintf+1
  3259  001320  90D8               	bcf	status,0,c
  3260  001322  3630               	rlcf	??_sprintf,f,c
  3261  001324  3631               	rlcf	??_sprintf+1,f,c
  3262  001326  90D8               	bcf	status,0,c
  3263  001328  3630               	rlcf	??_sprintf,f,c
  3264  00132A  3631               	rlcf	??_sprintf+1,f,c
  3265  00132C  0E01               	movlw	low _dpowers
  3266  00132E  2430               	addwf	??_sprintf,w,c
  3267  001330  6EF6               	movwf	tblptrl,c
  3268  001332  0E08               	movlw	high _dpowers
  3269  001334  2031               	addwfc	??_sprintf+1,w,c
  3270  001336  6EF7               	movwf	tblptrh,c
  3271  001338                     	if	0	;There are less than 3 active tblptr bytes
  3272  001338                     	endif
  3273  001338  0009               	tblrd		*+
  3274  00133A  CFF5 F01E          	movff	tablat,___lldiv@divisor
  3275  00133E  0009               	tblrd		*+
  3276  001340  CFF5 F01F          	movff	tablat,___lldiv@divisor+1
  3277  001344  0009               	tblrd		*+
  3278  001346  CFF5 F020          	movff	tablat,___lldiv@divisor+2
  3279  00134A  000A               	tblrd		*-
  3280  00134C  CFF5 F021          	movff	tablat,___lldiv@divisor+3
  3281  001350  C06F  F01A         	movff	sprintf@val,___lldiv@dividend
  3282  001354  C070  F01B         	movff	sprintf@val+1,___lldiv@dividend+1
  3283  001358  C071  F01C         	movff	sprintf@val+2,___lldiv@dividend+2
  3284  00135C  C072  F01D         	movff	sprintf@val+3,___lldiv@dividend+3
  3285  001360  ECF4  F00E         	call	___lldiv	;wreg free
  3286  001364  C01A  F027         	movff	?___lldiv,___llmod@dividend
  3287  001368  C01B  F028         	movff	?___lldiv+1,___llmod@dividend+1
  3288  00136C  C01C  F029         	movff	?___lldiv+2,___llmod@dividend+2
  3289  001370  C01D  F02A         	movff	?___lldiv+3,___llmod@dividend+3
  3290  001374  0E0A               	movlw	10
  3291  001376  6E2B               	movwf	___llmod@divisor,c
  3292  001378  0E00               	movlw	0
  3293  00137A  6E2C               	movwf	___llmod@divisor+1,c
  3294  00137C  0E00               	movlw	0
  3295  00137E  6E2D               	movwf	___llmod@divisor+2,c
  3296  001380  0E00               	movlw	0
  3297  001382  6E2E               	movwf	___llmod@divisor+3,c
  3298  001384  EC74  F00F         	call	___llmod	;wreg free
  3299  001388  5027               	movf	?___llmod,w,c
  3300  00138A  0F30               	addlw	48
  3301  00138C  0100               	movlb	0	; () banked
  3302  00138E  6F77               	movwf	sprintf@c& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;doprnt.c: 1523: }
  3306                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3307  001390  C060  FFD9         	movff	sprintf@sp,fsr2l
  3308  001394  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  3309  001398  C077  FFDF         	movff	sprintf@c,indf2
  3310                           
  3311                           ; BSR set to: 0
  3312  00139C  0100               	movlb	0	; () banked
  3313  00139E  4B60               	infsnz	sprintf@sp& (0+255),f,b
  3314  0013A0  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  3315  0013A2                     l2987:
  3316                           
  3317                           ; BSR set to: 0
  3318  0013A2  0100               	movlb	0	; () banked
  3319  0013A4  0775               	decf	sprintf@prec& (0+255),f,b
  3320  0013A6  A0D8               	btfss	status,0,c
  3321  0013A8  0776               	decf	(sprintf@prec+1)& (0+255),f,b
  3322  0013AA  0100               	movlb	0	; () banked
  3323  0013AC  2975               	incf	sprintf@prec& (0+255),w,b
  3324  0013AE  E1B4               	bnz	l2981
  3325  0013B0  0100               	movlb	0	; () banked
  3326  0013B2  2976               	incf	(sprintf@prec+1)& (0+255),w,b
  3327  0013B4  A4D8               	btfss	status,2,c
  3328  0013B6  D7B0               	goto	l2981
  3329  0013B8                     l2989:
  3330                           
  3331                           ; BSR set to: 0
  3332  0013B8  C062  FFF6         	movff	sprintf@f,tblptrl
  3333  0013BC  C063  FFF7         	movff	sprintf@f+1,tblptrh
  3334  0013C0  0100               	movlb	0	; () banked
  3335  0013C2  4B62               	infsnz	sprintf@f& (0+255),f,b
  3336  0013C4  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  3337  0013C6                     	if	0	;tblptru may be non-zero
  3338  0013C6                     	endif
  3339  0013C6                     	if	0	;tblptru may be non-zero
  3340  0013C6                     	endif
  3341  0013C6  0008               	tblrd		*
  3342  0013C8  CFF5 F077          	movff	tablat,sprintf@c
  3343  0013CC  0100               	movlb	0	; () banked
  3344  0013CE  5177               	movf	sprintf@c& (0+255),w,b
  3345  0013D0  A4D8               	btfss	status,2,c
  3346  0013D2  D634               	goto	l2889
  3347  0013D4                     l2991:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;doprnt.c: 1538: *sp = 0;
  3351  0013D4  C060  FFD9         	movff	sprintf@sp,fsr2l
  3352  0013D8  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  3353  0013DC  0E00               	movlw	0
  3354  0013DE  6EDF               	movwf	indf2,c
  3355  0013E0  0012               	return	
  3356  0013E2                     __end_of_sprintf:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           intcon2	equ	0xFF1
  3366                           intcon3	equ	0xFF0
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           postdec1	equ	0xFE5
  3370                           fsr1l	equ	0xFE1
  3371                           indf2	equ	0xFDF
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _isdigit *****************
  3379 ;; Defined at:
  3380 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isdigit.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  c               1    wreg     unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  c               1   27[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0
  3395 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3396 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3397 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3398 ;;Total ram usage:        3 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    3
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_sprintf
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text5
  3409  0020FC                     __ptext5:
  3410                           	opt stack 0
  3411  0020FC                     _isdigit:
  3412                           	opt stack 25
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;incstack = 0
  3416                           ;isdigit@c stored from wreg
  3417  0020FC  6E1C               	movwf	isdigit@c,c
  3418  0020FE  0E00               	movlw	0
  3419  002100  6E1B               	movwf	_isdigit$880,c
  3420  002102  0E3A               	movlw	58
  3421  002104  601C               	cpfslt	isdigit@c,c
  3422  002106  D005               	goto	l1995
  3423  002108  0E2F               	movlw	47
  3424  00210A  641C               	cpfsgt	isdigit@c,c
  3425  00210C  D002               	goto	l1995
  3426  00210E  0E01               	movlw	1
  3427  002110  6E1B               	movwf	_isdigit$880,c
  3428  002112                     l1995:
  3429  002112  C01B  F01A         	movff	_isdigit$880,??_isdigit
  3430  002116  301A               	rrcf	??_isdigit,w,c
  3431  002118  0012               	return	
  3432  00211A                     __end_of_isdigit:
  3433                           	opt stack 0
  3434                           tblptru	equ	0xFF8
  3435                           tblptrh	equ	0xFF7
  3436                           tblptrl	equ	0xFF6
  3437                           tablat	equ	0xFF5
  3438                           prodh	equ	0xFF4
  3439                           prodl	equ	0xFF3
  3440                           intcon	equ	0xFF2
  3441                           intcon2	equ	0xFF1
  3442                           intcon3	equ	0xFF0
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postdec1	equ	0xFE5
  3446                           fsr1l	equ	0xFE1
  3447                           indf2	equ	0xFDF
  3448                           postinc2	equ	0xFDE
  3449                           postdec2	equ	0xFDD
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function ___wmul *****************
  3455 ;; Defined at:
  3456 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul16.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  multiplier      2   25[COMRAM] unsigned int 
  3459 ;;  multiplicand    2   27[COMRAM] unsigned int 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  product         2   29[COMRAM] unsigned int 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2   25[COMRAM] unsigned int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, prodl, prodh
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3471 ;;      Params:         4       0       0       0       0       0       0       0       0
  3472 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3474 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3475 ;;Total ram usage:        6 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_sprintf
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text6
  3486  00201E                     __ptext6:
  3487                           	opt stack 0
  3488  00201E                     ___wmul:
  3489                           	opt stack 25
  3490                           
  3491                           ;incstack = 0
  3492  00201E  501A               	movf	___wmul@multiplier,w,c
  3493  002020  021C               	mulwf	___wmul@multiplicand,c
  3494  002022  CFF3 F01E          	movff	prodl,___wmul@product
  3495  002026  CFF4 F01F          	movff	prodh,___wmul@product+1
  3496  00202A  501A               	movf	___wmul@multiplier,w,c
  3497  00202C  021D               	mulwf	___wmul@multiplicand+1,c
  3498  00202E  50F3               	movf	prodl,w,c
  3499  002030  261F               	addwf	___wmul@product+1,f,c
  3500  002032  501B               	movf	___wmul@multiplier+1,w,c
  3501  002034  021C               	mulwf	___wmul@multiplicand,c
  3502  002036  50F3               	movf	prodl,w,c
  3503  002038  261F               	addwf	___wmul@product+1,f,c
  3504  00203A  C01E  F01A         	movff	___wmul@product,?___wmul
  3505  00203E  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  3506  002042  0012               	return	
  3507  002044                     __end_of___wmul:
  3508                           	opt stack 0
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           intcon2	equ	0xFF1
  3517                           intcon3	equ	0xFF0
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           postdec1	equ	0xFE5
  3521                           fsr1l	equ	0xFE1
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           postdec2	equ	0xFDD
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function ___llmod *****************
  3530 ;; Defined at:
  3531 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/llmod.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  dividend        4   38[COMRAM] unsigned long 
  3534 ;;  divisor         4   42[COMRAM] unsigned long 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  counter         1   46[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  4   38[COMRAM] unsigned long 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         8       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        9 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    3
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_sprintf
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text7
  3561  001EE8                     __ptext7:
  3562                           	opt stack 0
  3563  001EE8                     ___llmod:
  3564                           	opt stack 25
  3565                           
  3566                           ;incstack = 0
  3567  001EE8  502B               	movf	___llmod@divisor,w,c
  3568  001EEA  102C               	iorwf	___llmod@divisor+1,w,c
  3569  001EEC  102D               	iorwf	___llmod@divisor+2,w,c
  3570  001EEE  102E               	iorwf	___llmod@divisor+3,w,c
  3571  001EF0  B4D8               	btfsc	status,2,c
  3572  001EF2  D024               	goto	l727
  3573  001EF4  0E01               	movlw	1
  3574  001EF6  6E2F               	movwf	___llmod@counter,c
  3575  001EF8  D006               	goto	l2103
  3576  001EFA                     l2101:
  3577  001EFA  90D8               	bcf	status,0,c
  3578  001EFC  362B               	rlcf	___llmod@divisor,f,c
  3579  001EFE  362C               	rlcf	___llmod@divisor+1,f,c
  3580  001F00  362D               	rlcf	___llmod@divisor+2,f,c
  3581  001F02  362E               	rlcf	___llmod@divisor+3,f,c
  3582  001F04  2A2F               	incf	___llmod@counter,f,c
  3583  001F06                     l2103:
  3584  001F06  AE2E               	btfss	___llmod@divisor+3,7,c
  3585  001F08  D7F8               	goto	l2101
  3586  001F0A                     l2105:
  3587  001F0A  502B               	movf	___llmod@divisor,w,c
  3588  001F0C  5C27               	subwf	___llmod@dividend,w,c
  3589  001F0E  502C               	movf	___llmod@divisor+1,w,c
  3590  001F10  5828               	subwfb	___llmod@dividend+1,w,c
  3591  001F12  502D               	movf	___llmod@divisor+2,w,c
  3592  001F14  5829               	subwfb	___llmod@dividend+2,w,c
  3593  001F16  502E               	movf	___llmod@divisor+3,w,c
  3594  001F18  582A               	subwfb	___llmod@dividend+3,w,c
  3595  001F1A  A0D8               	btfss	status,0,c
  3596  001F1C  D008               	goto	l2109
  3597  001F1E  502B               	movf	___llmod@divisor,w,c
  3598  001F20  5E27               	subwf	___llmod@dividend,f,c
  3599  001F22  502C               	movf	___llmod@divisor+1,w,c
  3600  001F24  5A28               	subwfb	___llmod@dividend+1,f,c
  3601  001F26  502D               	movf	___llmod@divisor+2,w,c
  3602  001F28  5A29               	subwfb	___llmod@dividend+2,f,c
  3603  001F2A  502E               	movf	___llmod@divisor+3,w,c
  3604  001F2C  5A2A               	subwfb	___llmod@dividend+3,f,c
  3605  001F2E                     l2109:
  3606  001F2E  90D8               	bcf	status,0,c
  3607  001F30  322E               	rrcf	___llmod@divisor+3,f,c
  3608  001F32  322D               	rrcf	___llmod@divisor+2,f,c
  3609  001F34  322C               	rrcf	___llmod@divisor+1,f,c
  3610  001F36  322B               	rrcf	___llmod@divisor,f,c
  3611  001F38  2E2F               	decfsz	___llmod@counter,f,c
  3612  001F3A  D7E7               	goto	l2105
  3613  001F3C                     l727:
  3614  001F3C  C027  F027         	movff	___llmod@dividend,?___llmod
  3615  001F40  C028  F028         	movff	___llmod@dividend+1,?___llmod+1
  3616  001F44  C029  F029         	movff	___llmod@dividend+2,?___llmod+2
  3617  001F48  C02A  F02A         	movff	___llmod@dividend+3,?___llmod+3
  3618  001F4C  0012               	return		;funcret
  3619  001F4E                     __end_of___llmod:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           intcon	equ	0xFF2
  3628                           intcon2	equ	0xFF1
  3629                           intcon3	equ	0xFF0
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function ___lldiv *****************
  3642 ;; Defined at:
  3643 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  dividend        4   25[COMRAM] unsigned long 
  3646 ;;  divisor         4   29[COMRAM] unsigned long 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  quotient        4   33[COMRAM] unsigned long 
  3649 ;;  counter         1   37[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  4   25[COMRAM] unsigned long 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3659 ;;      Params:         8       0       0       0       0       0       0       0       0
  3660 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3662 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3663 ;;Total ram usage:       13 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    3
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_sprintf
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text8
  3674  001DE8                     __ptext8:
  3675                           	opt stack 0
  3676  001DE8                     ___lldiv:
  3677                           	opt stack 25
  3678                           
  3679                           ;incstack = 0
  3680  001DE8  0E00               	movlw	0
  3681  001DEA  6E22               	movwf	___lldiv@quotient,c
  3682  001DEC  0E00               	movlw	0
  3683  001DEE  6E23               	movwf	___lldiv@quotient+1,c
  3684  001DF0  0E00               	movlw	0
  3685  001DF2  6E24               	movwf	___lldiv@quotient+2,c
  3686  001DF4  0E00               	movlw	0
  3687  001DF6  6E25               	movwf	___lldiv@quotient+3,c
  3688  001DF8  501E               	movf	___lldiv@divisor,w,c
  3689  001DFA  101F               	iorwf	___lldiv@divisor+1,w,c
  3690  001DFC  1020               	iorwf	___lldiv@divisor+2,w,c
  3691  001DFE  1021               	iorwf	___lldiv@divisor+3,w,c
  3692  001E00  B4D8               	btfsc	status,2,c
  3693  001E02  D02A               	goto	l717
  3694  001E04  0E01               	movlw	1
  3695  001E06  6E26               	movwf	___lldiv@counter,c
  3696  001E08  D006               	goto	l2083
  3697  001E0A                     l2081:
  3698  001E0A  90D8               	bcf	status,0,c
  3699  001E0C  361E               	rlcf	___lldiv@divisor,f,c
  3700  001E0E  361F               	rlcf	___lldiv@divisor+1,f,c
  3701  001E10  3620               	rlcf	___lldiv@divisor+2,f,c
  3702  001E12  3621               	rlcf	___lldiv@divisor+3,f,c
  3703  001E14  2A26               	incf	___lldiv@counter,f,c
  3704  001E16                     l2083:
  3705  001E16  AE21               	btfss	___lldiv@divisor+3,7,c
  3706  001E18  D7F8               	goto	l2081
  3707  001E1A                     l2085:
  3708  001E1A  90D8               	bcf	status,0,c
  3709  001E1C  3622               	rlcf	___lldiv@quotient,f,c
  3710  001E1E  3623               	rlcf	___lldiv@quotient+1,f,c
  3711  001E20  3624               	rlcf	___lldiv@quotient+2,f,c
  3712  001E22  3625               	rlcf	___lldiv@quotient+3,f,c
  3713  001E24  501E               	movf	___lldiv@divisor,w,c
  3714  001E26  5C1A               	subwf	___lldiv@dividend,w,c
  3715  001E28  501F               	movf	___lldiv@divisor+1,w,c
  3716  001E2A  581B               	subwfb	___lldiv@dividend+1,w,c
  3717  001E2C  5020               	movf	___lldiv@divisor+2,w,c
  3718  001E2E  581C               	subwfb	___lldiv@dividend+2,w,c
  3719  001E30  5021               	movf	___lldiv@divisor+3,w,c
  3720  001E32  581D               	subwfb	___lldiv@dividend+3,w,c
  3721  001E34  A0D8               	btfss	status,0,c
  3722  001E36  D009               	goto	l2093
  3723  001E38  501E               	movf	___lldiv@divisor,w,c
  3724  001E3A  5E1A               	subwf	___lldiv@dividend,f,c
  3725  001E3C  501F               	movf	___lldiv@divisor+1,w,c
  3726  001E3E  5A1B               	subwfb	___lldiv@dividend+1,f,c
  3727  001E40  5020               	movf	___lldiv@divisor+2,w,c
  3728  001E42  5A1C               	subwfb	___lldiv@dividend+2,f,c
  3729  001E44  5021               	movf	___lldiv@divisor+3,w,c
  3730  001E46  5A1D               	subwfb	___lldiv@dividend+3,f,c
  3731  001E48  8022               	bsf	___lldiv@quotient,0,c
  3732  001E4A                     l2093:
  3733  001E4A  90D8               	bcf	status,0,c
  3734  001E4C  3221               	rrcf	___lldiv@divisor+3,f,c
  3735  001E4E  3220               	rrcf	___lldiv@divisor+2,f,c
  3736  001E50  321F               	rrcf	___lldiv@divisor+1,f,c
  3737  001E52  321E               	rrcf	___lldiv@divisor,f,c
  3738  001E54  2E26               	decfsz	___lldiv@counter,f,c
  3739  001E56  D7E1               	goto	l2085
  3740  001E58                     l717:
  3741  001E58  C022  F01A         	movff	___lldiv@quotient,?___lldiv
  3742  001E5C  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
  3743  001E60  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
  3744  001E64  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
  3745  001E68  0012               	return		;funcret
  3746  001E6A                     __end_of___lldiv:
  3747                           	opt stack 0
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           prodh	equ	0xFF4
  3753                           prodl	equ	0xFF3
  3754                           intcon	equ	0xFF2
  3755                           intcon2	equ	0xFF1
  3756                           intcon3	equ	0xFF0
  3757                           postinc0	equ	0xFEE
  3758                           wreg	equ	0xFE8
  3759                           postdec1	equ	0xFE5
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           postinc2	equ	0xFDE
  3763                           postdec2	equ	0xFDD
  3764                           fsr2h	equ	0xFDA
  3765                           fsr2l	equ	0xFD9
  3766                           status	equ	0xFD8
  3767                           
  3768 ;; *************** function ___lltoft *****************
  3769 ;; Defined at:
  3770 ;;		line 35 in file "/opt/microchip/xc8/v1.35/sources/common/lltoft.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  c               4   33[COMRAM] unsigned long 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  exp             1   41[COMRAM] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  3   33[COMRAM] float 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3784 ;;      Params:         4       0       0       0       0       0       0       0       0
  3785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3786 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3787 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3788 ;;Total ram usage:        9 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		___ftpack
  3793 ;; This function is called by:
  3794 ;;		_ftoa
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text9
  3799  001F4E                     __ptext9:
  3800                           	opt stack 0
  3801  001F4E                     ___lltoft:
  3802                           	opt stack 25
  3803                           
  3804                           ;incstack = 0
  3805  001F4E  0E8E               	movlw	142
  3806  001F50  6E2A               	movwf	___lltoft@exp,c
  3807  001F52  D006               	goto	l2383
  3808  001F54                     l2381:
  3809  001F54  90D8               	bcf	status,0,c
  3810  001F56  3225               	rrcf	___lltoft@c+3,f,c
  3811  001F58  3224               	rrcf	___lltoft@c+2,f,c
  3812  001F5A  3223               	rrcf	___lltoft@c+1,f,c
  3813  001F5C  3222               	rrcf	___lltoft@c,f,c
  3814  001F5E  2A2A               	incf	___lltoft@exp,f,c
  3815  001F60                     l2383:
  3816  001F60  0E00               	movlw	0
  3817  001F62  1422               	andwf	___lltoft@c,w,c
  3818  001F64  6E26               	movwf	??___lltoft& (0+255),c
  3819  001F66  0E00               	movlw	0
  3820  001F68  1423               	andwf	___lltoft@c+1,w,c
  3821  001F6A  6E27               	movwf	(??___lltoft+1)& (0+255),c
  3822  001F6C  0E00               	movlw	0
  3823  001F6E  1424               	andwf	___lltoft@c+2,w,c
  3824  001F70  6E28               	movwf	(??___lltoft+2)& (0+255),c
  3825  001F72  0EFF               	movlw	255
  3826  001F74  1425               	andwf	___lltoft@c+3,w,c
  3827  001F76  6E29               	movwf	(??___lltoft+3)& (0+255),c
  3828  001F78  5026               	movf	??___lltoft,w,c
  3829  001F7A  1027               	iorwf	??___lltoft+1,w,c
  3830  001F7C  1028               	iorwf	??___lltoft+2,w,c
  3831  001F7E  1029               	iorwf	??___lltoft+3,w,c
  3832  001F80  A4D8               	btfss	status,2,c
  3833  001F82  D7E8               	goto	l2381
  3834  001F84  C022  F01A         	movff	___lltoft@c,___ftpack@arg
  3835  001F88  C023  F01B         	movff	___lltoft@c+1,___ftpack@arg+1
  3836  001F8C  C024  F01C         	movff	___lltoft@c+2,___ftpack@arg+2
  3837  001F90  C02A  F01D         	movff	___lltoft@exp,___ftpack@exp
  3838  001F94  0E00               	movlw	0
  3839  001F96  6E1E               	movwf	___ftpack@sign,c
  3840  001F98  ECFE  F00D         	call	___ftpack	;wreg free
  3841  001F9C  C01A  F022         	movff	?___ftpack,?___lltoft
  3842  001FA0  C01B  F023         	movff	?___ftpack+1,?___lltoft+1
  3843  001FA4  C01C  F024         	movff	?___ftpack+2,?___lltoft+2
  3844  001FA8  0012               	return	
  3845  001FAA                     __end_of___lltoft:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           intcon	equ	0xFF2
  3854                           intcon2	equ	0xFF1
  3855                           intcon3	equ	0xFF0
  3856                           postinc0	equ	0xFEE
  3857                           wreg	equ	0xFE8
  3858                           postdec1	equ	0xFE5
  3859                           fsr1l	equ	0xFE1
  3860                           indf2	equ	0xFDF
  3861                           postinc2	equ	0xFDE
  3862                           postdec2	equ	0xFDD
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function ___fttol *****************
  3868 ;; Defined at:
  3869 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  f1              3   48[COMRAM] float 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  lval            4    6[BANK0 ] unsigned long 
  3874 ;;  exp1            1   10[BANK0 ] unsigned char 
  3875 ;;  sign1           1    5[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  4   48[COMRAM] long 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         4       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3888 ;;      Totals:         4      11       0       0       0       0       0       0       0
  3889 ;;Total ram usage:       15 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    3
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_ftoa
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text10
  3900  0016C4                     __ptext10:
  3901                           	opt stack 0
  3902  0016C4                     ___fttol:
  3903                           	opt stack 26
  3904                           
  3905                           ;incstack = 0
  3906  0016C4  C033  F060         	movff	___fttol@f1+2,??___fttol
  3907  0016C8  0100               	movlb	0	; () banked
  3908  0016CA  6B61               	clrf	(??___fttol+1)& (0+255),b
  3909  0016CC  6B62               	clrf	(??___fttol+2)& (0+255),b
  3910  0016CE  3432               	rlcf	___fttol@f1+1,w,c
  3911  0016D0  0100               	movlb	0	; () banked
  3912  0016D2  3760               	rlcf	??___fttol& (0+255),f,b
  3913  0016D4  E301               	bnc	u3271
  3914  0016D6  8161               	bsf	(??___fttol+1)& (0+255),0,b
  3915  0016D8                     u3271:
  3916  0016D8  0100               	movlb	0	; () banked
  3917  0016DA  5160               	movf	??___fttol& (0+255),w,b
  3918  0016DC  0100               	movlb	0	; () banked
  3919  0016DE  6F6A               	movwf	___fttol@exp1& (0+255),b
  3920  0016E0  0100               	movlb	0	; () banked
  3921  0016E2  516A               	movf	___fttol@exp1& (0+255),w,b
  3922  0016E4  A4D8               	btfss	status,2,c
  3923  0016E6  D009               	goto	l3001
  3924                           
  3925                           ; BSR set to: 0
  3926  0016E8  0E00               	movlw	0
  3927  0016EA  6E31               	movwf	?___fttol,c
  3928  0016EC  0E00               	movlw	0
  3929  0016EE  6E32               	movwf	?___fttol+1,c
  3930  0016F0  0E00               	movlw	0
  3931  0016F2  6E33               	movwf	?___fttol+2,c
  3932  0016F4  0E00               	movlw	0
  3933  0016F6  6E34               	movwf	?___fttol+3,c
  3934                           
  3935                           ; BSR set to: 0
  3936  0016F8  0012               	return	
  3937  0016FA                     l3001:
  3938                           
  3939                           ; BSR set to: 0
  3940  0016FA  0E17               	movlw	23
  3941  0016FC  0100               	movlb	0	; () banked
  3942  0016FE  6F60               	movwf	??___fttol& (0+255),b
  3943  001700  C031  F061         	movff	___fttol@f1,??___fttol+1
  3944  001704  C032  F062         	movff	___fttol@f1+1,??___fttol+2
  3945  001708  C033  F063         	movff	___fttol@f1+2,??___fttol+3
  3946  00170C  0100               	movlb	0	; () banked
  3947  00170E  2960               	incf	??___fttol& (0+255),w,b
  3948  001710  0100               	movlb	0	; () banked
  3949  001712  6F64               	movwf	(??___fttol+4)& (0+255),b
  3950  001714  D005               	goto	u3290
  3951  001716                     u3295:
  3952  001716  0100               	movlb	0	; () banked
  3953  001718  90D8               	bcf	status,0,c
  3954  00171A  3363               	rrcf	(??___fttol+3)& (0+255),f,b
  3955  00171C  3362               	rrcf	(??___fttol+2)& (0+255),f,b
  3956  00171E  3361               	rrcf	(??___fttol+1)& (0+255),f,b
  3957  001720                     u3290:
  3958  001720  0100               	movlb	0	; () banked
  3959  001722  2F64               	decfsz	(??___fttol+4)& (0+255),f,b
  3960  001724  D7F8               	goto	u3295
  3961  001726  0100               	movlb	0	; () banked
  3962  001728  5161               	movf	(??___fttol+1)& (0+255),w,b
  3963  00172A  0100               	movlb	0	; () banked
  3964  00172C  6F65               	movwf	___fttol@sign1& (0+255),b
  3965                           
  3966                           ; BSR set to: 0
  3967  00172E  8E32               	bsf	___fttol@f1+1,7,c
  3968                           
  3969                           ; BSR set to: 0
  3970  001730  0EFF               	movlw	255
  3971  001732  1631               	andwf	___fttol@f1,f,c
  3972  001734  0EFF               	movlw	255
  3973  001736  1632               	andwf	___fttol@f1+1,f,c
  3974  001738  0E00               	movlw	0
  3975  00173A  1633               	andwf	___fttol@f1+2,f,c
  3976                           
  3977                           ; BSR set to: 0
  3978  00173C  5031               	movf	___fttol@f1,w,c
  3979  00173E  0100               	movlb	0	; () banked
  3980  001740  6F66               	movwf	___fttol@lval& (0+255),b
  3981  001742  5032               	movf	___fttol@f1+1,w,c
  3982  001744  0100               	movlb	0	; () banked
  3983  001746  6F67               	movwf	(___fttol@lval+1)& (0+255),b
  3984  001748  5033               	movf	___fttol@f1+2,w,c
  3985  00174A  0100               	movlb	0	; () banked
  3986  00174C  6F68               	movwf	(___fttol@lval+2)& (0+255),b
  3987  00174E  0100               	movlb	0	; () banked
  3988  001750  6B69               	clrf	(___fttol@lval+3)& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991  001752  0E8E               	movlw	142
  3992  001754  0100               	movlb	0	; () banked
  3993  001756  5F6A               	subwf	___fttol@exp1& (0+255),f,b
  3994                           
  3995                           ; BSR set to: 0
  3996  001758  0100               	movlb	0	; () banked
  3997  00175A  AF6A               	btfss	___fttol@exp1& (0+255),7,b
  3998  00175C  D019               	goto	l3023
  3999                           
  4000                           ; BSR set to: 0
  4001  00175E  0100               	movlb	0	; () banked
  4002  001760  516A               	movf	___fttol@exp1& (0+255),w,b
  4003  001762  0A80               	xorlw	128
  4004  001764  0F8F               	addlw	143
  4005  001766  B0D8               	btfsc	status,0,c
  4006  001768  D009               	goto	l3019
  4007                           
  4008                           ; BSR set to: 0
  4009  00176A  0E00               	movlw	0
  4010  00176C  6E31               	movwf	?___fttol,c
  4011  00176E  0E00               	movlw	0
  4012  001770  6E32               	movwf	?___fttol+1,c
  4013  001772  0E00               	movlw	0
  4014  001774  6E33               	movwf	?___fttol+2,c
  4015  001776  0E00               	movlw	0
  4016  001778  6E34               	movwf	?___fttol+3,c
  4017                           
  4018                           ; BSR set to: 0
  4019  00177A  0012               	return	
  4020  00177C                     l3019:
  4021                           
  4022                           ; BSR set to: 0
  4023  00177C  0100               	movlb	0	; () banked
  4024  00177E  90D8               	bcf	status,0,c
  4025  001780  3369               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4026  001782  3368               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4027  001784  3367               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4028  001786  3366               	rrcf	___fttol@lval& (0+255),f,b
  4029                           
  4030                           ; BSR set to: 0
  4031  001788  0100               	movlb	0	; () banked
  4032  00178A  3F6A               	incfsz	___fttol@exp1& (0+255),f,b
  4033  00178C  D7F7               	goto	l3019
  4034                           
  4035                           ; BSR set to: 0
  4036  00178E  D01A               	goto	l3033
  4037  001790                     l3023:
  4038                           
  4039                           ; BSR set to: 0
  4040  001790  0E17               	movlw	23
  4041  001792  0100               	movlb	0	; () banked
  4042  001794  656A               	cpfsgt	___fttol@exp1& (0+255),b
  4043  001796  D011               	goto	l3031
  4044                           
  4045                           ; BSR set to: 0
  4046  001798  0E00               	movlw	0
  4047  00179A  6E31               	movwf	?___fttol,c
  4048  00179C  0E00               	movlw	0
  4049  00179E  6E32               	movwf	?___fttol+1,c
  4050  0017A0  0E00               	movlw	0
  4051  0017A2  6E33               	movwf	?___fttol+2,c
  4052  0017A4  0E00               	movlw	0
  4053  0017A6  6E34               	movwf	?___fttol+3,c
  4054                           
  4055                           ; BSR set to: 0
  4056  0017A8  0012               	return	
  4057  0017AA                     l3029:
  4058                           
  4059                           ; BSR set to: 0
  4060  0017AA  0100               	movlb	0	; () banked
  4061  0017AC  90D8               	bcf	status,0,c
  4062  0017AE  3766               	rlcf	___fttol@lval& (0+255),f,b
  4063  0017B0  3767               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4064  0017B2  3768               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4065  0017B4  3769               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4066  0017B6  0100               	movlb	0	; () banked
  4067  0017B8  076A               	decf	___fttol@exp1& (0+255),f,b
  4068  0017BA                     l3031:
  4069                           
  4070                           ; BSR set to: 0
  4071  0017BA  0100               	movlb	0	; () banked
  4072  0017BC  516A               	movf	___fttol@exp1& (0+255),w,b
  4073  0017BE  0100               	movlb	0	; () banked
  4074  0017C0  A4D8               	btfss	status,2,c
  4075  0017C2  D7F3               	goto	l3029
  4076  0017C4                     l3033:
  4077                           
  4078                           ; BSR set to: 0
  4079  0017C4  0100               	movlb	0	; () banked
  4080  0017C6  5165               	movf	___fttol@sign1& (0+255),w,b
  4081  0017C8  0100               	movlb	0	; () banked
  4082  0017CA  B4D8               	btfsc	status,2,c
  4083  0017CC  D009               	goto	l3037
  4084                           
  4085                           ; BSR set to: 0
  4086  0017CE  0100               	movlb	0	; () banked
  4087  0017D0  1F69               	comf	(___fttol@lval+3)& (0+255),f,b
  4088  0017D2  1F68               	comf	(___fttol@lval+2)& (0+255),f,b
  4089  0017D4  1F67               	comf	(___fttol@lval+1)& (0+255),f,b
  4090  0017D6  6D66               	negf	___fttol@lval& (0+255),b
  4091  0017D8  0E00               	movlw	0
  4092  0017DA  2367               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4093  0017DC  2368               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4094  0017DE  2369               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4095  0017E0                     l3037:
  4096                           
  4097                           ; BSR set to: 0
  4098  0017E0  C066  F031         	movff	___fttol@lval,?___fttol
  4099  0017E4  C067  F032         	movff	___fttol@lval+1,?___fttol+1
  4100  0017E8  C068  F033         	movff	___fttol@lval+2,?___fttol+2
  4101  0017EC  C069  F034         	movff	___fttol@lval+3,?___fttol+3
  4102  0017F0  0012               	return	
  4103  0017F2                     __end_of___fttol:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           intcon2	equ	0xFF1
  4113                           intcon3	equ	0xFF0
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1l	equ	0xFE1
  4118                           indf2	equ	0xFDF
  4119                           postinc2	equ	0xFDE
  4120                           postdec2	equ	0xFDD
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function ___ftsub *****************
  4126 ;; Defined at:
  4127 ;;		line 20 in file "/opt/microchip/xc8/v1.35/sources/common/ftsub.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  f1              3   45[COMRAM] float 
  4130 ;;  f2              3   48[COMRAM] float 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  3   45[COMRAM] float 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4142 ;;      Params:         6       0       0       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4145 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4146 ;;Total ram usage:        6 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    5
  4149 ;; This function calls:
  4150 ;;		___ftadd
  4151 ;; This function is called by:
  4152 ;;		_ftoa
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text11
  4157  001FAA                     __ptext11:
  4158                           	opt stack 0
  4159  001FAA                     ___ftsub:
  4160                           	opt stack 24
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;incstack = 0
  4164  001FAA  5031               	movf	___ftsub@f2,w,c
  4165  001FAC  1032               	iorwf	___ftsub@f2+1,w,c
  4166  001FAE  1033               	iorwf	___ftsub@f2+2,w,c
  4167  001FB0  B4D8               	btfsc	status,2,c
  4168  001FB2  D006               	goto	l2325
  4169  001FB4  0E00               	movlw	0
  4170  001FB6  1A31               	xorwf	___ftsub@f2,f,c
  4171  001FB8  0E00               	movlw	0
  4172  001FBA  1A32               	xorwf	___ftsub@f2+1,f,c
  4173  001FBC  0E80               	movlw	128
  4174  001FBE  1A33               	xorwf	___ftsub@f2+2,f,c
  4175  001FC0                     l2325:
  4176  001FC0  C02E  F022         	movff	___ftsub@f1,___ftadd@f1
  4177  001FC4  C02F  F023         	movff	___ftsub@f1+1,___ftadd@f1+1
  4178  001FC8  C030  F024         	movff	___ftsub@f1+2,___ftadd@f1+2
  4179  001FCC  C031  F025         	movff	___ftsub@f2,___ftadd@f2
  4180  001FD0  C032  F026         	movff	___ftsub@f2+1,___ftadd@f2+1
  4181  001FD4  C033  F027         	movff	___ftsub@f2+2,___ftadd@f2+2
  4182  001FD8  ECF1  F009         	call	___ftadd	;wreg free
  4183  001FDC  C022  F02E         	movff	?___ftadd,?___ftsub
  4184  001FE0  C023  F02F         	movff	?___ftadd+1,?___ftsub+1
  4185  001FE4  C024  F030         	movff	?___ftadd+2,?___ftsub+2
  4186  001FE8  0012               	return	
  4187  001FEA                     __end_of___ftsub:
  4188                           	opt stack 0
  4189                           tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           prodh	equ	0xFF4
  4194                           prodl	equ	0xFF3
  4195                           intcon	equ	0xFF2
  4196                           intcon2	equ	0xFF1
  4197                           intcon3	equ	0xFF0
  4198                           postinc0	equ	0xFEE
  4199                           wreg	equ	0xFE8
  4200                           postdec1	equ	0xFE5
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postinc2	equ	0xFDE
  4204                           postdec2	equ	0xFDD
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function ___ftadd *****************
  4210 ;; Defined at:
  4211 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  f1              3   33[COMRAM] float 
  4214 ;;  f2              3   36[COMRAM] float 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  exp1            1   44[COMRAM] unsigned char 
  4217 ;;  exp2            1   43[COMRAM] unsigned char 
  4218 ;;  sign            1   42[COMRAM] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  3   33[COMRAM] float 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4228 ;;      Params:         6       0       0       0       0       0       0       0       0
  4229 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4230 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4231 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4232 ;;Total ram usage:       12 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    4
  4235 ;; This function calls:
  4236 ;;		___ftpack
  4237 ;; This function is called by:
  4238 ;;		___ftsub
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text12
  4243  0013E2                     __ptext12:
  4244                           	opt stack 0
  4245  0013E2                     ___ftadd:
  4246                           	opt stack 24
  4247                           
  4248                           ;incstack = 0
  4249  0013E2  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  4250  0013E6  6A29               	clrf	(??___ftadd+1)& (0+255),c
  4251  0013E8  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  4252  0013EA  3423               	rlcf	___ftadd@f1+1,w,c
  4253  0013EC  3628               	rlcf	??___ftadd& (0+255),f,c
  4254  0013EE  E301               	bnc	u1661
  4255  0013F0  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  4256  0013F2                     u1661:
  4257  0013F2  5028               	movf	??___ftadd,w,c
  4258  0013F4  6E2D               	movwf	___ftadd@exp1,c
  4259  0013F6  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  4260  0013FA  6A29               	clrf	(??___ftadd+1)& (0+255),c
  4261  0013FC  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  4262  0013FE  3426               	rlcf	___ftadd@f2+1,w,c
  4263  001400  3628               	rlcf	??___ftadd& (0+255),f,c
  4264  001402  E301               	bnc	u1671
  4265  001404  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  4266  001406                     u1671:
  4267  001406  5028               	movf	??___ftadd,w,c
  4268  001408  6E2C               	movwf	___ftadd@exp2,c
  4269  00140A  502D               	movf	___ftadd@exp1,w,c
  4270  00140C  B4D8               	btfsc	status,2,c
  4271  00140E  D00B               	goto	l602
  4272  001410  502C               	movf	___ftadd@exp2,w,c
  4273  001412  5C2D               	subwf	___ftadd@exp1,w,c
  4274  001414  B0D8               	btfsc	status,0,c
  4275  001416  D00E               	goto	l2013
  4276  001418  502D               	movf	___ftadd@exp1,w,c
  4277  00141A  0800               	sublw	0
  4278  00141C  242C               	addwf	___ftadd@exp2,w,c
  4279  00141E  6E28               	movwf	??___ftadd& (0+255),c
  4280  001420  0E18               	movlw	24
  4281  001422  6428               	cpfsgt	??___ftadd,c
  4282  001424  D007               	goto	l2013
  4283  001426                     l602:
  4284  001426  C025  F022         	movff	___ftadd@f2,?___ftadd
  4285  00142A  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  4286  00142E  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  4287  001432  0012               	return	
  4288  001434                     l2013:
  4289  001434  502C               	movf	___ftadd@exp2,w,c
  4290  001436  B4D8               	btfsc	status,2,c
  4291  001438  D00B               	goto	l606
  4292  00143A  502D               	movf	___ftadd@exp1,w,c
  4293  00143C  5C2C               	subwf	___ftadd@exp2,w,c
  4294  00143E  B0D8               	btfsc	status,0,c
  4295  001440  D00E               	goto	l2019
  4296  001442  502C               	movf	___ftadd@exp2,w,c
  4297  001444  0800               	sublw	0
  4298  001446  242D               	addwf	___ftadd@exp1,w,c
  4299  001448  6E28               	movwf	??___ftadd& (0+255),c
  4300  00144A  0E18               	movlw	24
  4301  00144C  6428               	cpfsgt	??___ftadd,c
  4302  00144E  D007               	goto	l2019
  4303  001450                     l606:
  4304  001450  C022  F022         	movff	___ftadd@f1,?___ftadd
  4305  001454  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  4306  001458  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  4307  00145C  0012               	return	
  4308  00145E                     l2019:
  4309  00145E  0E06               	movlw	6
  4310  001460  6E2B               	movwf	___ftadd@sign,c
  4311  001462  BE24               	btfsc	___ftadd@f1+2,7,c
  4312  001464  8E2B               	bsf	___ftadd@sign,7,c
  4313  001466  BE27               	btfsc	___ftadd@f2+2,7,c
  4314  001468  8C2B               	bsf	___ftadd@sign,6,c
  4315  00146A  8E23               	bsf	___ftadd@f1+1,7,c
  4316  00146C  0EFF               	movlw	255
  4317  00146E  1622               	andwf	___ftadd@f1,f,c
  4318  001470  0EFF               	movlw	255
  4319  001472  1623               	andwf	___ftadd@f1+1,f,c
  4320  001474  0E00               	movlw	0
  4321  001476  1624               	andwf	___ftadd@f1+2,f,c
  4322  001478  8E26               	bsf	___ftadd@f2+1,7,c
  4323  00147A  0EFF               	movlw	255
  4324  00147C  1625               	andwf	___ftadd@f2,f,c
  4325  00147E  0EFF               	movlw	255
  4326  001480  1626               	andwf	___ftadd@f2+1,f,c
  4327  001482  0E00               	movlw	0
  4328  001484  1627               	andwf	___ftadd@f2+2,f,c
  4329  001486  502C               	movf	___ftadd@exp2,w,c
  4330  001488  5C2D               	subwf	___ftadd@exp1,w,c
  4331  00148A  B0D8               	btfsc	status,0,c
  4332  00148C  D01B               	goto	l2045
  4333  00148E                     l2035:
  4334  00148E  90D8               	bcf	status,0,c
  4335  001490  3625               	rlcf	___ftadd@f2,f,c
  4336  001492  3626               	rlcf	___ftadd@f2+1,f,c
  4337  001494  3627               	rlcf	___ftadd@f2+2,f,c
  4338  001496  062C               	decf	___ftadd@exp2,f,c
  4339  001498  502D               	movf	___ftadd@exp1,w,c
  4340  00149A  182C               	xorwf	___ftadd@exp2,w,c
  4341  00149C  B4D8               	btfsc	status,2,c
  4342  00149E  D00D               	goto	l2043
  4343  0014A0  062B               	decf	___ftadd@sign,f,c
  4344  0014A2  C02B  F028         	movff	___ftadd@sign,??___ftadd
  4345  0014A6  0E07               	movlw	7
  4346  0014A8  1628               	andwf	??___ftadd,f,c
  4347  0014AA  B4D8               	btfsc	status,2,c
  4348  0014AC  D006               	goto	l2043
  4349  0014AE  D7EF               	goto	l2035
  4350  0014B0                     l2041:
  4351  0014B0  90D8               	bcf	status,0,c
  4352  0014B2  3224               	rrcf	___ftadd@f1+2,f,c
  4353  0014B4  3223               	rrcf	___ftadd@f1+1,f,c
  4354  0014B6  3222               	rrcf	___ftadd@f1,f,c
  4355  0014B8  2A2D               	incf	___ftadd@exp1,f,c
  4356  0014BA                     l2043:
  4357  0014BA  502C               	movf	___ftadd@exp2,w,c
  4358  0014BC  182D               	xorwf	___ftadd@exp1,w,c
  4359  0014BE  B4D8               	btfsc	status,2,c
  4360  0014C0  D01F               	goto	l617
  4361  0014C2  D7F6               	goto	l2041
  4362  0014C4                     l2045:
  4363  0014C4  502D               	movf	___ftadd@exp1,w,c
  4364  0014C6  5C2C               	subwf	___ftadd@exp2,w,c
  4365  0014C8  B0D8               	btfsc	status,0,c
  4366  0014CA  D01A               	goto	l617
  4367  0014CC                     l2047:
  4368  0014CC  90D8               	bcf	status,0,c
  4369  0014CE  3622               	rlcf	___ftadd@f1,f,c
  4370  0014D0  3623               	rlcf	___ftadd@f1+1,f,c
  4371  0014D2  3624               	rlcf	___ftadd@f1+2,f,c
  4372  0014D4  062D               	decf	___ftadd@exp1,f,c
  4373  0014D6  502D               	movf	___ftadd@exp1,w,c
  4374  0014D8  182C               	xorwf	___ftadd@exp2,w,c
  4375  0014DA  B4D8               	btfsc	status,2,c
  4376  0014DC  D00D               	goto	l2055
  4377  0014DE  062B               	decf	___ftadd@sign,f,c
  4378  0014E0  C02B  F028         	movff	___ftadd@sign,??___ftadd
  4379  0014E4  0E07               	movlw	7
  4380  0014E6  1628               	andwf	??___ftadd,f,c
  4381  0014E8  B4D8               	btfsc	status,2,c
  4382  0014EA  D006               	goto	l2055
  4383  0014EC  D7EF               	goto	l2047
  4384  0014EE                     l2053:
  4385  0014EE  90D8               	bcf	status,0,c
  4386  0014F0  3227               	rrcf	___ftadd@f2+2,f,c
  4387  0014F2  3226               	rrcf	___ftadd@f2+1,f,c
  4388  0014F4  3225               	rrcf	___ftadd@f2,f,c
  4389  0014F6  2A2C               	incf	___ftadd@exp2,f,c
  4390  0014F8                     l2055:
  4391  0014F8  502C               	movf	___ftadd@exp2,w,c
  4392  0014FA  182D               	xorwf	___ftadd@exp1,w,c
  4393  0014FC  A4D8               	btfss	status,2,c
  4394  0014FE  D7F7               	goto	l2053
  4395  001500                     l617:
  4396  001500  AE2B               	btfss	___ftadd@sign,7,c
  4397  001502  D00C               	goto	l626
  4398  001504  0EFF               	movlw	255
  4399  001506  1A22               	xorwf	___ftadd@f1,f,c
  4400  001508  0EFF               	movlw	255
  4401  00150A  1A23               	xorwf	___ftadd@f1+1,f,c
  4402  00150C  0EFF               	movlw	255
  4403  00150E  1A24               	xorwf	___ftadd@f1+2,f,c
  4404  001510  0E01               	movlw	1
  4405  001512  2622               	addwf	___ftadd@f1,f,c
  4406  001514  0E00               	movlw	0
  4407  001516  2223               	addwfc	___ftadd@f1+1,f,c
  4408  001518  0E00               	movlw	0
  4409  00151A  2224               	addwfc	___ftadd@f1+2,f,c
  4410  00151C                     l626:
  4411  00151C  AC2B               	btfss	___ftadd@sign,6,c
  4412  00151E  D00C               	goto	l2061
  4413  001520  0EFF               	movlw	255
  4414  001522  1A25               	xorwf	___ftadd@f2,f,c
  4415  001524  0EFF               	movlw	255
  4416  001526  1A26               	xorwf	___ftadd@f2+1,f,c
  4417  001528  0EFF               	movlw	255
  4418  00152A  1A27               	xorwf	___ftadd@f2+2,f,c
  4419  00152C  0E01               	movlw	1
  4420  00152E  2625               	addwf	___ftadd@f2,f,c
  4421  001530  0E00               	movlw	0
  4422  001532  2226               	addwfc	___ftadd@f2+1,f,c
  4423  001534  0E00               	movlw	0
  4424  001536  2227               	addwfc	___ftadd@f2+2,f,c
  4425  001538                     l2061:
  4426  001538  0E00               	movlw	0
  4427  00153A  6E2B               	movwf	___ftadd@sign,c
  4428  00153C  5022               	movf	___ftadd@f1,w,c
  4429  00153E  2625               	addwf	___ftadd@f2,f,c
  4430  001540  5023               	movf	___ftadd@f1+1,w,c
  4431  001542  2226               	addwfc	___ftadd@f2+1,f,c
  4432  001544  5024               	movf	___ftadd@f1+2,w,c
  4433  001546  2227               	addwfc	___ftadd@f2+2,f,c
  4434  001548  AE27               	btfss	___ftadd@f2+2,7,c
  4435  00154A  D00E               	goto	l2071
  4436  00154C  0EFF               	movlw	255
  4437  00154E  1A25               	xorwf	___ftadd@f2,f,c
  4438  001550  0EFF               	movlw	255
  4439  001552  1A26               	xorwf	___ftadd@f2+1,f,c
  4440  001554  0EFF               	movlw	255
  4441  001556  1A27               	xorwf	___ftadd@f2+2,f,c
  4442  001558  0E01               	movlw	1
  4443  00155A  2625               	addwf	___ftadd@f2,f,c
  4444  00155C  0E00               	movlw	0
  4445  00155E  2226               	addwfc	___ftadd@f2+1,f,c
  4446  001560  0E00               	movlw	0
  4447  001562  2227               	addwfc	___ftadd@f2+2,f,c
  4448  001564  0E01               	movlw	1
  4449  001566  6E2B               	movwf	___ftadd@sign,c
  4450  001568                     l2071:
  4451  001568  C025  F01A         	movff	___ftadd@f2,___ftpack@arg
  4452  00156C  C026  F01B         	movff	___ftadd@f2+1,___ftpack@arg+1
  4453  001570  C027  F01C         	movff	___ftadd@f2+2,___ftpack@arg+2
  4454  001574  C02D  F01D         	movff	___ftadd@exp1,___ftpack@exp
  4455  001578  C02B  F01E         	movff	___ftadd@sign,___ftpack@sign
  4456  00157C  ECFE  F00D         	call	___ftpack	;wreg free
  4457  001580  C01A  F022         	movff	?___ftpack,?___ftadd
  4458  001584  C01B  F023         	movff	?___ftpack+1,?___ftadd+1
  4459  001588  C01C  F024         	movff	?___ftpack+2,?___ftadd+2
  4460  00158C  0012               	return	
  4461  00158E                     __end_of___ftadd:
  4462                           	opt stack 0
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           intcon3	equ	0xFF0
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function ___ftneg *****************
  4484 ;; Defined at:
  4485 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  f1              3   25[COMRAM] float 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  3   25[COMRAM] float 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4499 ;;      Params:         3       0       0       0       0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4502 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    3
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_ftoa
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text13
  4514  0020B4                     __ptext13:
  4515                           	opt stack 0
  4516  0020B4                     ___ftneg:
  4517                           	opt stack 26
  4518                           
  4519                           ;incstack = 0
  4520  0020B4  501A               	movf	___ftneg@f1,w,c
  4521  0020B6  101B               	iorwf	___ftneg@f1+1,w,c
  4522  0020B8  101C               	iorwf	___ftneg@f1+2,w,c
  4523  0020BA  B4D8               	btfsc	status,2,c
  4524  0020BC  D006               	goto	l659
  4525  0020BE  0E00               	movlw	0
  4526  0020C0  1A1A               	xorwf	___ftneg@f1,f,c
  4527  0020C2  0E00               	movlw	0
  4528  0020C4  1A1B               	xorwf	___ftneg@f1+1,f,c
  4529  0020C6  0E80               	movlw	128
  4530  0020C8  1A1C               	xorwf	___ftneg@f1+2,f,c
  4531  0020CA                     l659:
  4532  0020CA  C01A  F01A         	movff	___ftneg@f1,?___ftneg
  4533  0020CE  C01B  F01B         	movff	___ftneg@f1+1,?___ftneg+1
  4534  0020D2  C01C  F01C         	movff	___ftneg@f1+2,?___ftneg+2
  4535  0020D6  0012               	return		;funcret
  4536  0020D8                     __end_of___ftneg:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           prodh	equ	0xFF4
  4543                           prodl	equ	0xFF3
  4544                           intcon	equ	0xFF2
  4545                           intcon2	equ	0xFF1
  4546                           intcon3	equ	0xFF0
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           postdec1	equ	0xFE5
  4550                           fsr1l	equ	0xFE1
  4551                           indf2	equ	0xFDF
  4552                           postinc2	equ	0xFDE
  4553                           postdec2	equ	0xFDD
  4554                           fsr2h	equ	0xFDA
  4555                           fsr2l	equ	0xFD9
  4556                           status	equ	0xFD8
  4557                           
  4558 ;; *************** function ___ftmul *****************
  4559 ;; Defined at:
  4560 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  f1              3   33[COMRAM] float 
  4563 ;;  f2              3   36[COMRAM] float 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  f3_as_produc    3   43[COMRAM] unsigned um
  4566 ;;  sign            1   47[COMRAM] unsigned char 
  4567 ;;  cntr            1   46[COMRAM] unsigned char 
  4568 ;;  exp             1   42[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  3   33[COMRAM] float 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4578 ;;      Params:         6       0       0       0       0       0       0       0       0
  4579 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4580 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4581 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:       15 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    4
  4585 ;; This function calls:
  4586 ;;		___ftpack
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;;		_ftoa
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text14
  4594  001A3C                     __ptext14:
  4595                           	opt stack 0
  4596  001A3C                     ___ftmul:
  4597                           	opt stack 25
  4598                           
  4599                           ;incstack = 0
  4600  001A3C  C024  F028         	movff	___ftmul@f1+2,??___ftmul
  4601  001A40  6A29               	clrf	(??___ftmul+1)& (0+255),c
  4602  001A42  6A2A               	clrf	(??___ftmul+2)& (0+255),c
  4603  001A44  3423               	rlcf	___ftmul@f1+1,w,c
  4604  001A46  3628               	rlcf	??___ftmul& (0+255),f,c
  4605  001A48  E301               	bnc	u2181
  4606  001A4A  8029               	bsf	(??___ftmul+1)& (0+255),0,c
  4607  001A4C                     u2181:
  4608  001A4C  5028               	movf	??___ftmul,w,c
  4609  001A4E  6E2B               	movwf	___ftmul@exp,c
  4610  001A50  502B               	movf	___ftmul@exp,w,c
  4611  001A52  A4D8               	btfss	status,2,c
  4612  001A54  D007               	goto	l2279
  4613  001A56  0E00               	movlw	0
  4614  001A58  6E22               	movwf	?___ftmul,c
  4615  001A5A  0E00               	movlw	0
  4616  001A5C  6E23               	movwf	?___ftmul+1,c
  4617  001A5E  0E00               	movlw	0
  4618  001A60  6E24               	movwf	?___ftmul+2,c
  4619  001A62  0012               	return	
  4620  001A64                     l2279:
  4621  001A64  C027  F028         	movff	___ftmul@f2+2,??___ftmul
  4622  001A68  6A29               	clrf	(??___ftmul+1)& (0+255),c
  4623  001A6A  6A2A               	clrf	(??___ftmul+2)& (0+255),c
  4624  001A6C  3426               	rlcf	___ftmul@f2+1,w,c
  4625  001A6E  3628               	rlcf	??___ftmul& (0+255),f,c
  4626  001A70  E301               	bnc	u2201
  4627  001A72  8029               	bsf	(??___ftmul+1)& (0+255),0,c
  4628  001A74                     u2201:
  4629  001A74  5028               	movf	??___ftmul,w,c
  4630  001A76  6E30               	movwf	___ftmul@sign,c
  4631  001A78  5030               	movf	___ftmul@sign,w,c
  4632  001A7A  A4D8               	btfss	status,2,c
  4633  001A7C  D007               	goto	l2285
  4634  001A7E  0E00               	movlw	0
  4635  001A80  6E22               	movwf	?___ftmul,c
  4636  001A82  0E00               	movlw	0
  4637  001A84  6E23               	movwf	?___ftmul+1,c
  4638  001A86  0E00               	movlw	0
  4639  001A88  6E24               	movwf	?___ftmul+2,c
  4640  001A8A  0012               	return	
  4641  001A8C                     l2285:
  4642  001A8C  5030               	movf	___ftmul@sign,w,c
  4643  001A8E  0F7B               	addlw	123
  4644  001A90  262B               	addwf	___ftmul@exp,f,c
  4645  001A92  C024  F030         	movff	___ftmul@f1+2,___ftmul@sign
  4646  001A96  5027               	movf	___ftmul@f2+2,w,c
  4647  001A98  1A30               	xorwf	___ftmul@sign,f,c
  4648  001A9A  0E80               	movlw	128
  4649  001A9C  1630               	andwf	___ftmul@sign,f,c
  4650  001A9E  8E23               	bsf	___ftmul@f1+1,7,c
  4651  001AA0  8E26               	bsf	___ftmul@f2+1,7,c
  4652  001AA2  0EFF               	movlw	255
  4653  001AA4  1625               	andwf	___ftmul@f2,f,c
  4654  001AA6  0EFF               	movlw	255
  4655  001AA8  1626               	andwf	___ftmul@f2+1,f,c
  4656  001AAA  0E00               	movlw	0
  4657  001AAC  1627               	andwf	___ftmul@f2+2,f,c
  4658  001AAE  0E00               	movlw	0
  4659  001AB0  6E2C               	movwf	___ftmul@f3_as_product,c
  4660  001AB2  0E00               	movlw	0
  4661  001AB4  6E2D               	movwf	___ftmul@f3_as_product+1,c
  4662  001AB6  0E00               	movlw	0
  4663  001AB8  6E2E               	movwf	___ftmul@f3_as_product+2,c
  4664  001ABA  0E07               	movlw	7
  4665  001ABC  6E2F               	movwf	___ftmul@cntr,c
  4666  001ABE                     l2299:
  4667  001ABE  A022               	btfss	___ftmul@f1,0,c
  4668  001AC0  D006               	goto	l2303
  4669  001AC2  5025               	movf	___ftmul@f2,w,c
  4670  001AC4  262C               	addwf	___ftmul@f3_as_product,f,c
  4671  001AC6  5026               	movf	___ftmul@f2+1,w,c
  4672  001AC8  222D               	addwfc	___ftmul@f3_as_product+1,f,c
  4673  001ACA  5027               	movf	___ftmul@f2+2,w,c
  4674  001ACC  222E               	addwfc	___ftmul@f3_as_product+2,f,c
  4675  001ACE                     l2303:
  4676  001ACE  90D8               	bcf	status,0,c
  4677  001AD0  3224               	rrcf	___ftmul@f1+2,f,c
  4678  001AD2  3223               	rrcf	___ftmul@f1+1,f,c
  4679  001AD4  3222               	rrcf	___ftmul@f1,f,c
  4680  001AD6  90D8               	bcf	status,0,c
  4681  001AD8  3625               	rlcf	___ftmul@f2,f,c
  4682  001ADA  3626               	rlcf	___ftmul@f2+1,f,c
  4683  001ADC  3627               	rlcf	___ftmul@f2+2,f,c
  4684  001ADE  2E2F               	decfsz	___ftmul@cntr,f,c
  4685  001AE0  D7EE               	goto	l2299
  4686  001AE2  0E09               	movlw	9
  4687  001AE4  6E2F               	movwf	___ftmul@cntr,c
  4688  001AE6                     l2309:
  4689  001AE6  A022               	btfss	___ftmul@f1,0,c
  4690  001AE8  D006               	goto	l2313
  4691  001AEA  5025               	movf	___ftmul@f2,w,c
  4692  001AEC  262C               	addwf	___ftmul@f3_as_product,f,c
  4693  001AEE  5026               	movf	___ftmul@f2+1,w,c
  4694  001AF0  222D               	addwfc	___ftmul@f3_as_product+1,f,c
  4695  001AF2  5027               	movf	___ftmul@f2+2,w,c
  4696  001AF4  222E               	addwfc	___ftmul@f3_as_product+2,f,c
  4697  001AF6                     l2313:
  4698  001AF6  90D8               	bcf	status,0,c
  4699  001AF8  3224               	rrcf	___ftmul@f1+2,f,c
  4700  001AFA  3223               	rrcf	___ftmul@f1+1,f,c
  4701  001AFC  3222               	rrcf	___ftmul@f1,f,c
  4702  001AFE  90D8               	bcf	status,0,c
  4703  001B00  322E               	rrcf	___ftmul@f3_as_product+2,f,c
  4704  001B02  322D               	rrcf	___ftmul@f3_as_product+1,f,c
  4705  001B04  322C               	rrcf	___ftmul@f3_as_product,f,c
  4706  001B06  2E2F               	decfsz	___ftmul@cntr,f,c
  4707  001B08  D7EE               	goto	l2309
  4708  001B0A  C02C  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
  4709  001B0E  C02D  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4710  001B12  C02E  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4711  001B16  C02B  F01D         	movff	___ftmul@exp,___ftpack@exp
  4712  001B1A  C030  F01E         	movff	___ftmul@sign,___ftpack@sign
  4713  001B1E  ECFE  F00D         	call	___ftpack	;wreg free
  4714  001B22  C01A  F022         	movff	?___ftpack,?___ftmul
  4715  001B26  C01B  F023         	movff	?___ftpack+1,?___ftmul+1
  4716  001B2A  C01C  F024         	movff	?___ftpack+2,?___ftmul+2
  4717  001B2E  0012               	return	
  4718  001B30                     __end_of___ftmul:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           intcon2	equ	0xFF1
  4728                           intcon3	equ	0xFF0
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           postdec1	equ	0xFE5
  4732                           fsr1l	equ	0xFE1
  4733                           indf2	equ	0xFDF
  4734                           postinc2	equ	0xFDE
  4735                           postdec2	equ	0xFDD
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function ___ftpack *****************
  4741 ;; Defined at:
  4742 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  arg             3   25[COMRAM] unsigned um
  4745 ;;  exp             1   28[COMRAM] unsigned char 
  4746 ;;  sign            1   29[COMRAM] unsigned char 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  3   25[COMRAM] float 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4758 ;;      Params:         5       0       0       0       0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4760 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4761 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4762 ;;Total ram usage:        8 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    3
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		___ftadd
  4769 ;;		___ftmul
  4770 ;;		___lltoft
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text15
  4775  001BFC                     __ptext15:
  4776                           	opt stack 0
  4777  001BFC                     ___ftpack:
  4778                           	opt stack 25
  4779                           
  4780                           ;incstack = 0
  4781  001BFC  501D               	movf	___ftpack@exp,w,c
  4782  001BFE  B4D8               	btfsc	status,2,c
  4783  001C00  D005               	goto	l1955
  4784  001C02  501A               	movf	___ftpack@arg,w,c
  4785  001C04  101B               	iorwf	___ftpack@arg+1,w,c
  4786  001C06  101C               	iorwf	___ftpack@arg+2,w,c
  4787  001C08  A4D8               	btfss	status,2,c
  4788  001C0A  D00C               	goto	l1961
  4789  001C0C                     l1955:
  4790  001C0C  0E00               	movlw	0
  4791  001C0E  6E1A               	movwf	?___ftpack,c
  4792  001C10  0E00               	movlw	0
  4793  001C12  6E1B               	movwf	?___ftpack+1,c
  4794  001C14  0E00               	movlw	0
  4795  001C16  6E1C               	movwf	?___ftpack+2,c
  4796  001C18  0012               	return	
  4797  001C1A                     l1959:
  4798  001C1A  2A1D               	incf	___ftpack@exp,f,c
  4799  001C1C  90D8               	bcf	status,0,c
  4800  001C1E  321C               	rrcf	___ftpack@arg+2,f,c
  4801  001C20  321B               	rrcf	___ftpack@arg+1,f,c
  4802  001C22  321A               	rrcf	___ftpack@arg,f,c
  4803  001C24                     l1961:
  4804  001C24  0E00               	movlw	0
  4805  001C26  141A               	andwf	___ftpack@arg,w,c
  4806  001C28  6E1F               	movwf	??___ftpack& (0+255),c
  4807  001C2A  0E00               	movlw	0
  4808  001C2C  141B               	andwf	___ftpack@arg+1,w,c
  4809  001C2E  6E20               	movwf	(??___ftpack+1)& (0+255),c
  4810  001C30  0EFE               	movlw	254
  4811  001C32  141C               	andwf	___ftpack@arg+2,w,c
  4812  001C34  6E21               	movwf	(??___ftpack+2)& (0+255),c
  4813  001C36  501F               	movf	??___ftpack,w,c
  4814  001C38  1020               	iorwf	??___ftpack+1,w,c
  4815  001C3A  1021               	iorwf	??___ftpack+2,w,c
  4816  001C3C  B4D8               	btfsc	status,2,c
  4817  001C3E  D00C               	goto	l1967
  4818  001C40  D7EC               	goto	l1959
  4819  001C42                     l1963:
  4820  001C42  2A1D               	incf	___ftpack@exp,f,c
  4821  001C44  0E01               	movlw	1
  4822  001C46  261A               	addwf	___ftpack@arg,f,c
  4823  001C48  0E00               	movlw	0
  4824  001C4A  221B               	addwfc	___ftpack@arg+1,f,c
  4825  001C4C  0E00               	movlw	0
  4826  001C4E  221C               	addwfc	___ftpack@arg+2,f,c
  4827  001C50  90D8               	bcf	status,0,c
  4828  001C52  321C               	rrcf	___ftpack@arg+2,f,c
  4829  001C54  321B               	rrcf	___ftpack@arg+1,f,c
  4830  001C56  321A               	rrcf	___ftpack@arg,f,c
  4831  001C58                     l1967:
  4832  001C58  0E00               	movlw	0
  4833  001C5A  141A               	andwf	___ftpack@arg,w,c
  4834  001C5C  6E1F               	movwf	??___ftpack& (0+255),c
  4835  001C5E  0E00               	movlw	0
  4836  001C60  141B               	andwf	___ftpack@arg+1,w,c
  4837  001C62  6E20               	movwf	(??___ftpack+1)& (0+255),c
  4838  001C64  0EFF               	movlw	255
  4839  001C66  141C               	andwf	___ftpack@arg+2,w,c
  4840  001C68  6E21               	movwf	(??___ftpack+2)& (0+255),c
  4841  001C6A  501F               	movf	??___ftpack,w,c
  4842  001C6C  1020               	iorwf	??___ftpack+1,w,c
  4843  001C6E  1021               	iorwf	??___ftpack+2,w,c
  4844  001C70  B4D8               	btfsc	status,2,c
  4845  001C72  D006               	goto	l1971
  4846  001C74  D7E6               	goto	l1963
  4847  001C76                     l1969:
  4848  001C76  061D               	decf	___ftpack@exp,f,c
  4849  001C78  90D8               	bcf	status,0,c
  4850  001C7A  361A               	rlcf	___ftpack@arg,f,c
  4851  001C7C  361B               	rlcf	___ftpack@arg+1,f,c
  4852  001C7E  361C               	rlcf	___ftpack@arg+2,f,c
  4853  001C80                     l1971:
  4854  001C80  BE1B               	btfsc	___ftpack@arg+1,7,c
  4855  001C82  D003               	goto	l579
  4856  001C84  0E02               	movlw	2
  4857  001C86  601D               	cpfslt	___ftpack@exp,c
  4858  001C88  D7F6               	goto	l1969
  4859  001C8A                     l579:
  4860  001C8A  A01D               	btfss	___ftpack@exp,0,c
  4861  001C8C  9E1B               	bcf	___ftpack@arg+1,7,c
  4862  001C8E  90D8               	bcf	status,0,c
  4863  001C90  321D               	rrcf	___ftpack@exp,f,c
  4864  001C92  501D               	movf	___ftpack@exp,w,c
  4865  001C94  121C               	iorwf	___ftpack@arg+2,f,c
  4866  001C96  501E               	movf	___ftpack@sign,w,c
  4867  001C98  A4D8               	btfss	status,2,c
  4868  001C9A  8E1C               	bsf	___ftpack@arg+2,7,c
  4869  001C9C  C01A  F01A         	movff	___ftpack@arg,?___ftpack
  4870  001CA0  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
  4871  001CA4  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
  4872  001CA8  0012               	return	
  4873  001CAA                     __end_of___ftpack:
  4874                           	opt stack 0
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           prodh	equ	0xFF4
  4880                           prodl	equ	0xFF3
  4881                           intcon	equ	0xFF2
  4882                           intcon2	equ	0xFF1
  4883                           intcon3	equ	0xFF0
  4884                           postinc0	equ	0xFEE
  4885                           wreg	equ	0xFE8
  4886                           postdec1	equ	0xFE5
  4887                           fsr1l	equ	0xFE1
  4888                           indf2	equ	0xFDF
  4889                           postinc2	equ	0xFDE
  4890                           postdec2	equ	0xFDD
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function ___ftge *****************
  4896 ;; Defined at:
  4897 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/ftge.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  ff1             3   25[COMRAM] float 
  4900 ;;  ff2             3   28[COMRAM] float 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;		None               void
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4912 ;;      Params:         6       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4914 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4915 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4916 ;;Total ram usage:        9 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text16
  4927  001D58                     __ptext16:
  4928                           	opt stack 0
  4929  001D58                     ___ftge:
  4930                           	opt stack 27
  4931                           
  4932                           ;incstack = 0
  4933  001D58  AE1C               	btfss	___ftge@ff1+2,7,c
  4934  001D5A  D016               	goto	l2503
  4935  001D5C  C01A  F020         	movff	___ftge@ff1,??___ftge
  4936  001D60  C01B  F021         	movff	___ftge@ff1+1,??___ftge+1
  4937  001D64  C01C  F022         	movff	___ftge@ff1+2,??___ftge+2
  4938  001D68  1E20               	comf	??___ftge,f,c
  4939  001D6A  1E21               	comf	??___ftge+1,f,c
  4940  001D6C  1E22               	comf	??___ftge+2,f,c
  4941  001D6E  2A20               	incf	??___ftge,f,c
  4942  001D70  0E00               	movlw	0
  4943  001D72  2221               	addwfc	??___ftge+1,f,c
  4944  001D74  2222               	addwfc	??___ftge+2,f,c
  4945  001D76  0E00               	movlw	0
  4946  001D78  2420               	addwf	??___ftge,w,c
  4947  001D7A  6E1A               	movwf	___ftge@ff1,c
  4948  001D7C  0E00               	movlw	0
  4949  001D7E  2021               	addwfc	??___ftge+1,w,c
  4950  001D80  6E1B               	movwf	___ftge@ff1+1,c
  4951  001D82  0E80               	movlw	128
  4952  001D84  2022               	addwfc	??___ftge+2,w,c
  4953  001D86  6E1C               	movwf	___ftge@ff1+2,c
  4954  001D88                     l2503:
  4955  001D88  AE1F               	btfss	___ftge@ff2+2,7,c
  4956  001D8A  D016               	goto	l2507
  4957  001D8C  C01D  F020         	movff	___ftge@ff2,??___ftge
  4958  001D90  C01E  F021         	movff	___ftge@ff2+1,??___ftge+1
  4959  001D94  C01F  F022         	movff	___ftge@ff2+2,??___ftge+2
  4960  001D98  1E20               	comf	??___ftge,f,c
  4961  001D9A  1E21               	comf	??___ftge+1,f,c
  4962  001D9C  1E22               	comf	??___ftge+2,f,c
  4963  001D9E  2A20               	incf	??___ftge,f,c
  4964  001DA0  0E00               	movlw	0
  4965  001DA2  2221               	addwfc	??___ftge+1,f,c
  4966  001DA4  2222               	addwfc	??___ftge+2,f,c
  4967  001DA6  0E00               	movlw	0
  4968  001DA8  2420               	addwf	??___ftge,w,c
  4969  001DAA  6E1D               	movwf	___ftge@ff2,c
  4970  001DAC  0E00               	movlw	0
  4971  001DAE  2021               	addwfc	??___ftge+1,w,c
  4972  001DB0  6E1E               	movwf	___ftge@ff2+1,c
  4973  001DB2  0E80               	movlw	128
  4974  001DB4  2022               	addwfc	??___ftge+2,w,c
  4975  001DB6  6E1F               	movwf	___ftge@ff2+2,c
  4976  001DB8                     l2507:
  4977  001DB8  0E00               	movlw	0
  4978  001DBA  1A1A               	xorwf	___ftge@ff1,f,c
  4979  001DBC  0E00               	movlw	0
  4980  001DBE  1A1B               	xorwf	___ftge@ff1+1,f,c
  4981  001DC0  0E80               	movlw	128
  4982  001DC2  1A1C               	xorwf	___ftge@ff1+2,f,c
  4983  001DC4  0E00               	movlw	0
  4984  001DC6  1A1D               	xorwf	___ftge@ff2,f,c
  4985  001DC8  0E00               	movlw	0
  4986  001DCA  1A1E               	xorwf	___ftge@ff2+1,f,c
  4987  001DCC  0E80               	movlw	128
  4988  001DCE  1A1F               	xorwf	___ftge@ff2+2,f,c
  4989  001DD0  501D               	movf	___ftge@ff2,w,c
  4990  001DD2  5C1A               	subwf	___ftge@ff1,w,c
  4991  001DD4  501E               	movf	___ftge@ff2+1,w,c
  4992  001DD6  581B               	subwfb	___ftge@ff1+1,w,c
  4993  001DD8  501F               	movf	___ftge@ff2+2,w,c
  4994  001DDA  581C               	subwfb	___ftge@ff1+2,w,c
  4995  001DDC  B0D8               	btfsc	status,0,c
  4996  001DDE  D002               	goto	l2513
  4997  001DE0  90D8               	bcf	status,0,c
  4998  001DE2  0012               	return	
  4999  001DE4                     l2513:
  5000  001DE4  80D8               	bsf	status,0,c
  5001  001DE6  0012               	return	
  5002  001DE8                     __end_of___ftge:
  5003                           	opt stack 0
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           intcon2	equ	0xFF1
  5012                           intcon3	equ	0xFF0
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           postdec1	equ	0xFE5
  5016                           fsr1l	equ	0xFE1
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _UART_Write_Text *****************
  5025 ;; Defined at:
  5026 ;;		line 55 in file "uart.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  text            2   26[COMRAM] PTR unsigned char 
  5029 ;;		 -> NULL(0), ftoa@buf(17), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  i               2   28[COMRAM] int 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5041 ;;      Params:         2       0       0       0       0       0       0       0       0
  5042 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5044 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        4 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    4
  5048 ;; This function calls:
  5049 ;;		_UART_Write
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text17
  5056  001FEA                     __ptext17:
  5057                           	opt stack 0
  5058  001FEA                     _UART_Write_Text:
  5059                           	opt stack 26
  5060                           
  5061                           ;uart.c: 57: int i;
  5062                           ;uart.c: 58: for(i=0;text[i]!='\0';i++)
  5063                           
  5064                           ;incstack = 0
  5065  001FEA  0E00               	movlw	0
  5066  001FEC  6E1E               	movwf	UART_Write_Text@i+1,c
  5067  001FEE  0E00               	movlw	0
  5068  001FF0  6E1D               	movwf	UART_Write_Text@i,c
  5069  001FF2  D00B               	goto	l2489
  5070  001FF4                     l2485:
  5071                           
  5072                           ;uart.c: 59: UART_Write(text[i]);
  5073  001FF4  501D               	movf	UART_Write_Text@i,w,c
  5074  001FF6  241B               	addwf	UART_Write_Text@text,w,c
  5075  001FF8  6ED9               	movwf	fsr2l,c
  5076  001FFA  501E               	movf	UART_Write_Text@i+1,w,c
  5077  001FFC  201C               	addwfc	UART_Write_Text@text+1,w,c
  5078  001FFE  6EDA               	movwf	fsr2h,c
  5079  002000  50DF               	movf	indf2,w,c
  5080  002002  ECAF  F010         	call	_UART_Write
  5081  002006  4A1D               	infsnz	UART_Write_Text@i,f,c
  5082  002008  2A1E               	incf	UART_Write_Text@i+1,f,c
  5083  00200A                     l2489:
  5084  00200A  501D               	movf	UART_Write_Text@i,w,c
  5085  00200C  241B               	addwf	UART_Write_Text@text,w,c
  5086  00200E  6ED9               	movwf	fsr2l,c
  5087  002010  501E               	movf	UART_Write_Text@i+1,w,c
  5088  002012  201C               	addwfc	UART_Write_Text@text+1,w,c
  5089  002014  6EDA               	movwf	fsr2h,c
  5090  002016  50DF               	movf	indf2,w,c
  5091  002018  B4D8               	btfsc	status,2,c
  5092  00201A  0012               	return	
  5093  00201C  D7EB               	goto	l2485
  5094  00201E                     __end_of_UART_Write_Text:
  5095                           	opt stack 0
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           intcon2	equ	0xFF1
  5104                           intcon3	equ	0xFF0
  5105                           postinc0	equ	0xFEE
  5106                           wreg	equ	0xFE8
  5107                           postdec1	equ	0xFE5
  5108                           fsr1l	equ	0xFE1
  5109                           indf2	equ	0xFDF
  5110                           postinc2	equ	0xFDE
  5111                           postdec2	equ	0xFDD
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           status	equ	0xFD8
  5115                           
  5116 ;; *************** function _UART_Write *****************
  5117 ;; Defined at:
  5118 ;;		line 49 in file "uart.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  data            1    wreg     unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  data            1   25[COMRAM] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		wreg
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0
  5133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5136 ;;Total ram usage:        1 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    3
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;;		_UART_Write_Text
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text18
  5148  00215E                     __ptext18:
  5149                           	opt stack 0
  5150  00215E                     _UART_Write:
  5151                           	opt stack 26
  5152                           
  5153                           ;incstack = 0
  5154                           ;UART_Write@data stored from wreg
  5155  00215E  6E1A               	movwf	UART_Write@data,c
  5156  002160                     l297:
  5157  002160  A2AC               	btfss	4012,1,c	;volatile
  5158  002162  D7FE               	goto	l297
  5159                           
  5160                           ;uart.c: 52: TXREG = data;
  5161  002164  C01A  FFAD         	movff	UART_Write@data,4013	;volatile
  5162  002168  0012               	return		;funcret
  5163  00216A                     __end_of_UART_Write:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           intcon2	equ	0xFF1
  5173                           intcon3	equ	0xFF0
  5174                           postinc0	equ	0xFEE
  5175                           wreg	equ	0xFE8
  5176                           postdec1	equ	0xFE5
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           postinc2	equ	0xFDE
  5180                           postdec2	equ	0xFDD
  5181                           fsr2h	equ	0xFDA
  5182                           fsr2l	equ	0xFD9
  5183                           status	equ	0xFD8
  5184                           
  5185 ;; *************** function _UART_Init *****************
  5186 ;; Defined at:
  5187 ;;		line 3 in file "uart.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  baudrate        4   39[COMRAM] const long 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  x               2   51[COMRAM] unsigned int 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5201 ;;      Params:         4       0       0       0       0       0       0       0       0
  5202 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5203 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5204 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5205 ;;Total ram usage:       14 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    4
  5208 ;; This function calls:
  5209 ;;		___aldiv
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text19
  5216  0017F2                     __ptext19:
  5217                           	opt stack 0
  5218  0017F2                     _UART_Init:
  5219                           	opt stack 26
  5220                           
  5221                           ;uart.c: 5: unsigned int x;
  5222                           ;uart.c: 6: x = (48000000 - baudrate*64)/(baudrate*64);
  5223                           
  5224                           ;incstack = 0
  5225  0017F2  C028  F02C         	movff	UART_Init@baudrate,??_UART_Init
  5226  0017F6  C029  F02D         	movff	UART_Init@baudrate+1,??_UART_Init+1
  5227  0017FA  C02A  F02E         	movff	UART_Init@baudrate+2,??_UART_Init+2
  5228  0017FE  C02B  F02F         	movff	UART_Init@baudrate+3,??_UART_Init+3
  5229  001802  0E06               	movlw	6
  5230  001804                     u2435:
  5231  001804  90D8               	bcf	status,0,c
  5232  001806  362C               	rlcf	??_UART_Init,f,c
  5233  001808  362D               	rlcf	??_UART_Init+1,f,c
  5234  00180A  362E               	rlcf	??_UART_Init+2,f,c
  5235  00180C  362F               	rlcf	??_UART_Init+3,f,c
  5236  00180E  2EE8               	decfsz	wreg,f,c
  5237  001810  D7F9               	goto	u2435
  5238  001812  1E2C               	comf	??_UART_Init,f,c
  5239  001814  1E2D               	comf	??_UART_Init+1,f,c
  5240  001816  1E2E               	comf	??_UART_Init+2,f,c
  5241  001818  1E2F               	comf	??_UART_Init+3,f,c
  5242  00181A  2A2C               	incf	??_UART_Init,f,c
  5243  00181C  0E00               	movlw	0
  5244  00181E  222D               	addwfc	??_UART_Init+1,f,c
  5245  001820  222E               	addwfc	??_UART_Init+2,f,c
  5246  001822  222F               	addwfc	??_UART_Init+3,f,c
  5247  001824  0E00               	movlw	0
  5248  001826  242C               	addwf	??_UART_Init,w,c
  5249  001828  6E1A               	movwf	___aldiv@dividend,c
  5250  00182A  0E6C               	movlw	108
  5251  00182C  202D               	addwfc	??_UART_Init+1,w,c
  5252  00182E  6E1B               	movwf	___aldiv@dividend+1,c
  5253  001830  0EDC               	movlw	220
  5254  001832  202E               	addwfc	??_UART_Init+2,w,c
  5255  001834  6E1C               	movwf	___aldiv@dividend+2,c
  5256  001836  0E02               	movlw	2
  5257  001838  202F               	addwfc	??_UART_Init+3,w,c
  5258  00183A  6E1D               	movwf	___aldiv@dividend+3,c
  5259  00183C  C028  F030         	movff	UART_Init@baudrate,??_UART_Init+4
  5260  001840  C029  F031         	movff	UART_Init@baudrate+1,??_UART_Init+5
  5261  001844  C02A  F032         	movff	UART_Init@baudrate+2,??_UART_Init+6
  5262  001848  C02B  F033         	movff	UART_Init@baudrate+3,??_UART_Init+7
  5263  00184C  0E06               	movlw	6
  5264  00184E                     u2445:
  5265  00184E  90D8               	bcf	status,0,c
  5266  001850  3630               	rlcf	??_UART_Init+4,f,c
  5267  001852  3631               	rlcf	??_UART_Init+5,f,c
  5268  001854  3632               	rlcf	??_UART_Init+6,f,c
  5269  001856  3633               	rlcf	??_UART_Init+7,f,c
  5270  001858  2EE8               	decfsz	wreg,f,c
  5271  00185A  D7F9               	goto	u2445
  5272  00185C  C030  F01E         	movff	??_UART_Init+4,___aldiv@divisor
  5273  001860  C031  F01F         	movff	??_UART_Init+5,___aldiv@divisor+1
  5274  001864  C032  F020         	movff	??_UART_Init+6,___aldiv@divisor+2
  5275  001868  C033  F021         	movff	??_UART_Init+7,___aldiv@divisor+3
  5276  00186C  EC98  F00D         	call	___aldiv	;wreg free
  5277  001870  C01A  F034         	movff	?___aldiv,UART_Init@x
  5278  001874  C01B  F035         	movff	?___aldiv+1,UART_Init@x+1
  5279                           
  5280                           ;uart.c: 7: if(x>255)
  5281  001878  0435               	decf	UART_Init@x+1,w,c
  5282  00187A  A0D8               	btfss	status,0,c
  5283  00187C  D044               	goto	l2453
  5284                           
  5285                           ;uart.c: 8: {
  5286                           ;uart.c: 9: x = (48000000 - baudrate*16)/(baudrate*16);
  5287  00187E  C028  F02C         	movff	UART_Init@baudrate,??_UART_Init
  5288  001882  C029  F02D         	movff	UART_Init@baudrate+1,??_UART_Init+1
  5289  001886  C02A  F02E         	movff	UART_Init@baudrate+2,??_UART_Init+2
  5290  00188A  C02B  F02F         	movff	UART_Init@baudrate+3,??_UART_Init+3
  5291  00188E  0E04               	movlw	4
  5292  001890                     u2465:
  5293  001890  90D8               	bcf	status,0,c
  5294  001892  362C               	rlcf	??_UART_Init,f,c
  5295  001894  362D               	rlcf	??_UART_Init+1,f,c
  5296  001896  362E               	rlcf	??_UART_Init+2,f,c
  5297  001898  362F               	rlcf	??_UART_Init+3,f,c
  5298  00189A  2EE8               	decfsz	wreg,f,c
  5299  00189C  D7F9               	goto	u2465
  5300  00189E  1E2C               	comf	??_UART_Init,f,c
  5301  0018A0  1E2D               	comf	??_UART_Init+1,f,c
  5302  0018A2  1E2E               	comf	??_UART_Init+2,f,c
  5303  0018A4  1E2F               	comf	??_UART_Init+3,f,c
  5304  0018A6  2A2C               	incf	??_UART_Init,f,c
  5305  0018A8  0E00               	movlw	0
  5306  0018AA  222D               	addwfc	??_UART_Init+1,f,c
  5307  0018AC  222E               	addwfc	??_UART_Init+2,f,c
  5308  0018AE  222F               	addwfc	??_UART_Init+3,f,c
  5309  0018B0  0E00               	movlw	0
  5310  0018B2  242C               	addwf	??_UART_Init,w,c
  5311  0018B4  6E1A               	movwf	___aldiv@dividend,c
  5312  0018B6  0E6C               	movlw	108
  5313  0018B8  202D               	addwfc	??_UART_Init+1,w,c
  5314  0018BA  6E1B               	movwf	___aldiv@dividend+1,c
  5315  0018BC  0EDC               	movlw	220
  5316  0018BE  202E               	addwfc	??_UART_Init+2,w,c
  5317  0018C0  6E1C               	movwf	___aldiv@dividend+2,c
  5318  0018C2  0E02               	movlw	2
  5319  0018C4  202F               	addwfc	??_UART_Init+3,w,c
  5320  0018C6  6E1D               	movwf	___aldiv@dividend+3,c
  5321  0018C8  C028  F030         	movff	UART_Init@baudrate,??_UART_Init+4
  5322  0018CC  C029  F031         	movff	UART_Init@baudrate+1,??_UART_Init+5
  5323  0018D0  C02A  F032         	movff	UART_Init@baudrate+2,??_UART_Init+6
  5324  0018D4  C02B  F033         	movff	UART_Init@baudrate+3,??_UART_Init+7
  5325  0018D8  0E04               	movlw	4
  5326  0018DA                     u2475:
  5327  0018DA  90D8               	bcf	status,0,c
  5328  0018DC  3630               	rlcf	??_UART_Init+4,f,c
  5329  0018DE  3631               	rlcf	??_UART_Init+5,f,c
  5330  0018E0  3632               	rlcf	??_UART_Init+6,f,c
  5331  0018E2  3633               	rlcf	??_UART_Init+7,f,c
  5332  0018E4  2EE8               	decfsz	wreg,f,c
  5333  0018E6  D7F9               	goto	u2475
  5334  0018E8  C030  F01E         	movff	??_UART_Init+4,___aldiv@divisor
  5335  0018EC  C031  F01F         	movff	??_UART_Init+5,___aldiv@divisor+1
  5336  0018F0  C032  F020         	movff	??_UART_Init+6,___aldiv@divisor+2
  5337  0018F4  C033  F021         	movff	??_UART_Init+7,___aldiv@divisor+3
  5338  0018F8  EC98  F00D         	call	___aldiv	;wreg free
  5339  0018FC  C01A  F034         	movff	?___aldiv,UART_Init@x
  5340  001900  C01B  F035         	movff	?___aldiv+1,UART_Init@x+1
  5341                           
  5342                           ;uart.c: 10: BRGH = 1;
  5343  001904  84AC               	bsf	4012,2,c	;volatile
  5344  001906                     l2453:
  5345                           
  5346                           ;uart.c: 11: }
  5347                           ;uart.c: 12: if(x<256)
  5348  001906  0435               	decf	UART_Init@x+1,w,c
  5349  001908  B0D8               	btfsc	status,0,c
  5350  00190A  0012               	return	
  5351                           
  5352                           ;uart.c: 13: {
  5353                           ;uart.c: 14: SPBRG = x;
  5354  00190C  C034  FFAF         	movff	UART_Init@x,4015	;volatile
  5355                           
  5356                           ;uart.c: 15: SYNC = 0;
  5357  001910  98AC               	bcf	4012,4,c	;volatile
  5358                           
  5359                           ;uart.c: 16: SPEN = 1;
  5360  001912  8EAB               	bsf	4011,7,c	;volatile
  5361                           
  5362                           ;uart.c: 17: TRISC7 = 1;
  5363  001914  8E94               	bsf	3988,7,c	;volatile
  5364                           
  5365                           ;uart.c: 18: TRISC6 = 1;
  5366  001916  8C94               	bsf	3988,6,c	;volatile
  5367                           
  5368                           ;uart.c: 19: CREN = 1;
  5369  001918  88AB               	bsf	4011,4,c	;volatile
  5370                           
  5371                           ;uart.c: 20: TXEN = 1;
  5372  00191A  8AAC               	bsf	4012,5,c	;volatile
  5373                           
  5374                           ;uart.c: 21: return 1;
  5375                           ;	Return value of _UART_Init is never used
  5376  00191C  0012               	return	
  5377  00191E                     __end_of_UART_Init:
  5378                           	opt stack 0
  5379                           tblptru	equ	0xFF8
  5380                           tblptrh	equ	0xFF7
  5381                           tblptrl	equ	0xFF6
  5382                           tablat	equ	0xFF5
  5383                           prodh	equ	0xFF4
  5384                           prodl	equ	0xFF3
  5385                           intcon	equ	0xFF2
  5386                           intcon2	equ	0xFF1
  5387                           intcon3	equ	0xFF0
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           postdec1	equ	0xFE5
  5391                           fsr1l	equ	0xFE1
  5392                           indf2	equ	0xFDF
  5393                           postinc2	equ	0xFDE
  5394                           postdec2	equ	0xFDD
  5395                           fsr2h	equ	0xFDA
  5396                           fsr2l	equ	0xFD9
  5397                           status	equ	0xFD8
  5398                           
  5399 ;; *************** function ___aldiv *****************
  5400 ;; Defined at:
  5401 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/aldiv.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  dividend        4   25[COMRAM] long 
  5404 ;;  divisor         4   29[COMRAM] long 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  quotient        4   35[COMRAM] long 
  5407 ;;  sign            1   34[COMRAM] unsigned char 
  5408 ;;  counter         1   33[COMRAM] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  4   25[COMRAM] long 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         8       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:       14 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    3
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_UART_Init
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text20
  5433  001B30                     __ptext20:
  5434                           	opt stack 0
  5435  001B30                     ___aldiv:
  5436                           	opt stack 26
  5437                           
  5438                           ;incstack = 0
  5439  001B30  0E00               	movlw	0
  5440  001B32  6E23               	movwf	___aldiv@sign,c
  5441  001B34  AE21               	btfss	___aldiv@divisor+3,7,c
  5442  001B36  D00A               	goto	l2237
  5443  001B38  1E21               	comf	___aldiv@divisor+3,f,c
  5444  001B3A  1E20               	comf	___aldiv@divisor+2,f,c
  5445  001B3C  1E1F               	comf	___aldiv@divisor+1,f,c
  5446  001B3E  6C1E               	negf	___aldiv@divisor,c
  5447  001B40  0E00               	movlw	0
  5448  001B42  221F               	addwfc	___aldiv@divisor+1,f,c
  5449  001B44  2220               	addwfc	___aldiv@divisor+2,f,c
  5450  001B46  2221               	addwfc	___aldiv@divisor+3,f,c
  5451  001B48  0E01               	movlw	1
  5452  001B4A  6E23               	movwf	___aldiv@sign,c
  5453  001B4C                     l2237:
  5454  001B4C  AE1D               	btfss	___aldiv@dividend+3,7,c
  5455  001B4E  D00A               	goto	l2243
  5456  001B50  1E1D               	comf	___aldiv@dividend+3,f,c
  5457  001B52  1E1C               	comf	___aldiv@dividend+2,f,c
  5458  001B54  1E1B               	comf	___aldiv@dividend+1,f,c
  5459  001B56  6C1A               	negf	___aldiv@dividend,c
  5460  001B58  0E00               	movlw	0
  5461  001B5A  221B               	addwfc	___aldiv@dividend+1,f,c
  5462  001B5C  221C               	addwfc	___aldiv@dividend+2,f,c
  5463  001B5E  221D               	addwfc	___aldiv@dividend+3,f,c
  5464  001B60  0E01               	movlw	1
  5465  001B62  1A23               	xorwf	___aldiv@sign,f,c
  5466  001B64                     l2243:
  5467  001B64  0E00               	movlw	0
  5468  001B66  6E24               	movwf	___aldiv@quotient,c
  5469  001B68  0E00               	movlw	0
  5470  001B6A  6E25               	movwf	___aldiv@quotient+1,c
  5471  001B6C  0E00               	movlw	0
  5472  001B6E  6E26               	movwf	___aldiv@quotient+2,c
  5473  001B70  0E00               	movlw	0
  5474  001B72  6E27               	movwf	___aldiv@quotient+3,c
  5475  001B74  501E               	movf	___aldiv@divisor,w,c
  5476  001B76  101F               	iorwf	___aldiv@divisor+1,w,c
  5477  001B78  1020               	iorwf	___aldiv@divisor+2,w,c
  5478  001B7A  1021               	iorwf	___aldiv@divisor+3,w,c
  5479  001B7C  B4D8               	btfsc	status,2,c
  5480  001B7E  D02A               	goto	l2265
  5481  001B80  0E01               	movlw	1
  5482  001B82  6E22               	movwf	___aldiv@counter,c
  5483  001B84  D006               	goto	l2251
  5484  001B86                     l2249:
  5485  001B86  90D8               	bcf	status,0,c
  5486  001B88  361E               	rlcf	___aldiv@divisor,f,c
  5487  001B8A  361F               	rlcf	___aldiv@divisor+1,f,c
  5488  001B8C  3620               	rlcf	___aldiv@divisor+2,f,c
  5489  001B8E  3621               	rlcf	___aldiv@divisor+3,f,c
  5490  001B90  2A22               	incf	___aldiv@counter,f,c
  5491  001B92                     l2251:
  5492  001B92  AE21               	btfss	___aldiv@divisor+3,7,c
  5493  001B94  D7F8               	goto	l2249
  5494  001B96                     l2253:
  5495  001B96  90D8               	bcf	status,0,c
  5496  001B98  3624               	rlcf	___aldiv@quotient,f,c
  5497  001B9A  3625               	rlcf	___aldiv@quotient+1,f,c
  5498  001B9C  3626               	rlcf	___aldiv@quotient+2,f,c
  5499  001B9E  3627               	rlcf	___aldiv@quotient+3,f,c
  5500  001BA0  501E               	movf	___aldiv@divisor,w,c
  5501  001BA2  5C1A               	subwf	___aldiv@dividend,w,c
  5502  001BA4  501F               	movf	___aldiv@divisor+1,w,c
  5503  001BA6  581B               	subwfb	___aldiv@dividend+1,w,c
  5504  001BA8  5020               	movf	___aldiv@divisor+2,w,c
  5505  001BAA  581C               	subwfb	___aldiv@dividend+2,w,c
  5506  001BAC  5021               	movf	___aldiv@divisor+3,w,c
  5507  001BAE  581D               	subwfb	___aldiv@dividend+3,w,c
  5508  001BB0  A0D8               	btfss	status,0,c
  5509  001BB2  D009               	goto	l2261
  5510  001BB4  501E               	movf	___aldiv@divisor,w,c
  5511  001BB6  5E1A               	subwf	___aldiv@dividend,f,c
  5512  001BB8  501F               	movf	___aldiv@divisor+1,w,c
  5513  001BBA  5A1B               	subwfb	___aldiv@dividend+1,f,c
  5514  001BBC  5020               	movf	___aldiv@divisor+2,w,c
  5515  001BBE  5A1C               	subwfb	___aldiv@dividend+2,f,c
  5516  001BC0  5021               	movf	___aldiv@divisor+3,w,c
  5517  001BC2  5A1D               	subwfb	___aldiv@dividend+3,f,c
  5518  001BC4  8024               	bsf	___aldiv@quotient,0,c
  5519  001BC6                     l2261:
  5520  001BC6  90D8               	bcf	status,0,c
  5521  001BC8  3221               	rrcf	___aldiv@divisor+3,f,c
  5522  001BCA  3220               	rrcf	___aldiv@divisor+2,f,c
  5523  001BCC  321F               	rrcf	___aldiv@divisor+1,f,c
  5524  001BCE  321E               	rrcf	___aldiv@divisor,f,c
  5525  001BD0  2E22               	decfsz	___aldiv@counter,f,c
  5526  001BD2  D7E1               	goto	l2253
  5527  001BD4                     l2265:
  5528  001BD4  5023               	movf	___aldiv@sign,w,c
  5529  001BD6  B4D8               	btfsc	status,2,c
  5530  001BD8  D008               	goto	l2269
  5531  001BDA  1E27               	comf	___aldiv@quotient+3,f,c
  5532  001BDC  1E26               	comf	___aldiv@quotient+2,f,c
  5533  001BDE  1E25               	comf	___aldiv@quotient+1,f,c
  5534  001BE0  6C24               	negf	___aldiv@quotient,c
  5535  001BE2  0E00               	movlw	0
  5536  001BE4  2225               	addwfc	___aldiv@quotient+1,f,c
  5537  001BE6  2226               	addwfc	___aldiv@quotient+2,f,c
  5538  001BE8  2227               	addwfc	___aldiv@quotient+3,f,c
  5539  001BEA                     l2269:
  5540  001BEA  C024  F01A         	movff	___aldiv@quotient,?___aldiv
  5541  001BEE  C025  F01B         	movff	___aldiv@quotient+1,?___aldiv+1
  5542  001BF2  C026  F01C         	movff	___aldiv@quotient+2,?___aldiv+2
  5543  001BF6  C027  F01D         	movff	___aldiv@quotient+3,?___aldiv+3
  5544  001BFA  0012               	return	
  5545  001BFC                     __end_of___aldiv:
  5546                           	opt stack 0
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           intcon2	equ	0xFF1
  5555                           intcon3	equ	0xFF0
  5556                           postinc0	equ	0xFEE
  5557                           wreg	equ	0xFE8
  5558                           postdec1	equ	0xFE5
  5559                           fsr1l	equ	0xFE1
  5560                           indf2	equ	0xFDF
  5561                           postinc2	equ	0xFDE
  5562                           postdec2	equ	0xFDD
  5563                           fsr2h	equ	0xFDA
  5564                           fsr2l	equ	0xFD9
  5565                           status	equ	0xFD8
  5566                           
  5567 ;; *************** function _InitPWMG *****************
  5568 ;; Defined at:
  5569 ;;		line 684 in file "TABLEAU_2.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    4
  5590 ;; This function calls:
  5591 ;;		_SetPWMDutyD
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text21
  5598  00211A                     __ptext21:
  5599                           	opt stack 0
  5600  00211A                     _InitPWMG:
  5601                           	opt stack 26
  5602                           
  5603                           ;TABLEAU_2.c: 686: TRISC1 = 0x00;
  5604                           
  5605                           ;incstack = 0
  5606  00211A  9294               	bcf	3988,1,c	;volatile
  5607                           
  5608                           ;TABLEAU_2.c: 687: CCP2CON = 0x0C;
  5609  00211C  0E0C               	movlw	12
  5610  00211E  6EBA               	movwf	4026,c	;volatile
  5611                           
  5612                           ;TABLEAU_2.c: 689: PR2 = 0xFF;
  5613  002120  68CB               	setf	4043,c	;volatile
  5614                           
  5615                           ;TABLEAU_2.c: 690: T2CON = 0x01;
  5616  002122  0E01               	movlw	1
  5617  002124  6ECA               	movwf	4042,c	;volatile
  5618                           
  5619                           ;TABLEAU_2.c: 691: SetPWMDutyD(0);
  5620  002126  0E00               	movlw	0
  5621  002128  6E1B               	movwf	SetPWMDutyD@DutyCycle+1,c
  5622  00212A  0E00               	movlw	0
  5623  00212C  6E1A               	movwf	SetPWMDutyD@DutyCycle,c
  5624  00212E  EC22  F010         	call	_SetPWMDutyD	;wreg free
  5625                           
  5626                           ;TABLEAU_2.c: 693: T2CON |= 0x04;
  5627  002132  84CA               	bsf	4042,2,c	;volatile
  5628  002134  0012               	return		;funcret
  5629  002136                     __end_of_InitPWMG:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           intcon2	equ	0xFF1
  5639                           intcon3	equ	0xFF0
  5640                           postinc0	equ	0xFEE
  5641                           wreg	equ	0xFE8
  5642                           postdec1	equ	0xFE5
  5643                           fsr1l	equ	0xFE1
  5644                           indf2	equ	0xFDF
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           fsr2h	equ	0xFDA
  5648                           fsr2l	equ	0xFD9
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function _SetPWMDutyD *****************
  5652 ;; Defined at:
  5653 ;;		line 696 in file "TABLEAU_2.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  DutyCycle       2   25[COMRAM] unsigned int 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;		None               void
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5667 ;;      Params:         2       0       0       0       0       0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5669 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5670 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5671 ;;Total ram usage:        4 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    3
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_main
  5678 ;;		_InitPWMG
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text22
  5683  002044                     __ptext22:
  5684                           	opt stack 0
  5685  002044                     _SetPWMDutyD:
  5686                           	opt stack 27
  5687                           
  5688                           ;TABLEAU_2.c: 698: CCPR1L = DutyCycle >> 2;
  5689                           
  5690                           ;incstack = 0
  5691  002044  C01A  F01C         	movff	SetPWMDutyD@DutyCycle,??_SetPWMDutyD
  5692  002048  C01B  F01D         	movff	SetPWMDutyD@DutyCycle+1,??_SetPWMDutyD+1
  5693  00204C  90D8               	bcf	status,0,c
  5694  00204E  321D               	rrcf	??_SetPWMDutyD+1,f,c
  5695  002050  321C               	rrcf	??_SetPWMDutyD,f,c
  5696  002052  90D8               	bcf	status,0,c
  5697  002054  321D               	rrcf	??_SetPWMDutyD+1,f,c
  5698  002056  321C               	rrcf	??_SetPWMDutyD,f,c
  5699  002058  501C               	movf	??_SetPWMDutyD,w,c
  5700  00205A  6EBE               	movwf	4030,c	;volatile
  5701                           
  5702                           ;TABLEAU_2.c: 699: CCP1CON &= 0xCF;
  5703  00205C  0ECF               	movlw	207
  5704  00205E  16BD               	andwf	4029,f,c	;volatile
  5705                           
  5706                           ;TABLEAU_2.c: 700: CCP1CON |= (0x30 & (DutyCycle << 4));
  5707  002060  381A               	swapf	SetPWMDutyD@DutyCycle,w,c
  5708  002062  0BF0               	andlw	240
  5709  002064  0B30               	andlw	48
  5710  002066  12BD               	iorwf	4029,f,c	;volatile
  5711  002068  0012               	return		;funcret
  5712  00206A                     __end_of_SetPWMDutyD:
  5713                           	opt stack 0
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           prodh	equ	0xFF4
  5719                           prodl	equ	0xFF3
  5720                           intcon	equ	0xFF2
  5721                           intcon2	equ	0xFF1
  5722                           intcon3	equ	0xFF0
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           postdec1	equ	0xFE5
  5726                           fsr1l	equ	0xFE1
  5727                           indf2	equ	0xFDF
  5728                           postinc2	equ	0xFDE
  5729                           postdec2	equ	0xFDD
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734 ;; *************** function _InitPWMD *****************
  5735 ;; Defined at:
  5736 ;;		line 671 in file "TABLEAU_2.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;		None               void
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    4
  5757 ;; This function calls:
  5758 ;;		_SetPWMDutyG
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text23
  5765  002136                     __ptext23:
  5766                           	opt stack 0
  5767  002136                     _InitPWMD:
  5768                           	opt stack 26
  5769                           
  5770                           ;TABLEAU_2.c: 673: TRISC2 = 0x00;
  5771                           
  5772                           ;incstack = 0
  5773  002136  9494               	bcf	3988,2,c	;volatile
  5774                           
  5775                           ;TABLEAU_2.c: 674: CCP1CON = 0x0C;
  5776  002138  0E0C               	movlw	12
  5777  00213A  6EBD               	movwf	4029,c	;volatile
  5778                           
  5779                           ;TABLEAU_2.c: 676: PR2 = 0xFF;
  5780  00213C  68CB               	setf	4043,c	;volatile
  5781                           
  5782                           ;TABLEAU_2.c: 677: T2CON = 0x01;
  5783  00213E  0E01               	movlw	1
  5784  002140  6ECA               	movwf	4042,c	;volatile
  5785                           
  5786                           ;TABLEAU_2.c: 679: SetPWMDutyG(0);
  5787  002142  0E00               	movlw	0
  5788  002144  6E1B               	movwf	SetPWMDutyG@DutyCycle+1,c
  5789  002146  0E00               	movlw	0
  5790  002148  6E1A               	movwf	SetPWMDutyG@DutyCycle,c
  5791  00214A  EC35  F010         	call	_SetPWMDutyG	;wreg free
  5792                           
  5793                           ;TABLEAU_2.c: 681: T2CON |= 0x04;
  5794  00214E  84CA               	bsf	4042,2,c	;volatile
  5795  002150  0012               	return		;funcret
  5796  002152                     __end_of_InitPWMD:
  5797                           	opt stack 0
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           intcon2	equ	0xFF1
  5806                           intcon3	equ	0xFF0
  5807                           postinc0	equ	0xFEE
  5808                           wreg	equ	0xFE8
  5809                           postdec1	equ	0xFE5
  5810                           fsr1l	equ	0xFE1
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _SetPWMDutyG *****************
  5819 ;; Defined at:
  5820 ;;		line 703 in file "TABLEAU_2.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  DutyCycle       2   25[COMRAM] unsigned int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5834 ;;      Params:         2       0       0       0       0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5836 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5837 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5838 ;;Total ram usage:        4 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    3
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;;		_InitPWMD
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text24
  5850  00206A                     __ptext24:
  5851                           	opt stack 0
  5852  00206A                     _SetPWMDutyG:
  5853                           	opt stack 27
  5854                           
  5855                           ;TABLEAU_2.c: 705: CCPR2L = DutyCycle >> 2;
  5856                           
  5857                           ;incstack = 0
  5858  00206A  C01A  F01C         	movff	SetPWMDutyG@DutyCycle,??_SetPWMDutyG
  5859  00206E  C01B  F01D         	movff	SetPWMDutyG@DutyCycle+1,??_SetPWMDutyG+1
  5860  002072  90D8               	bcf	status,0,c
  5861  002074  321D               	rrcf	??_SetPWMDutyG+1,f,c
  5862  002076  321C               	rrcf	??_SetPWMDutyG,f,c
  5863  002078  90D8               	bcf	status,0,c
  5864  00207A  321D               	rrcf	??_SetPWMDutyG+1,f,c
  5865  00207C  321C               	rrcf	??_SetPWMDutyG,f,c
  5866  00207E  501C               	movf	??_SetPWMDutyG,w,c
  5867  002080  6EBB               	movwf	4027,c	;volatile
  5868                           
  5869                           ;TABLEAU_2.c: 706: CCP2CON &= 0xCF;
  5870  002082  0ECF               	movlw	207
  5871  002084  16BA               	andwf	4026,f,c	;volatile
  5872                           
  5873                           ;TABLEAU_2.c: 707: CCP2CON |= (0x30 & (DutyCycle << 4));
  5874  002086  381A               	swapf	SetPWMDutyG@DutyCycle,w,c
  5875  002088  0BF0               	andlw	240
  5876  00208A  0B30               	andlw	48
  5877  00208C  12BA               	iorwf	4026,f,c	;volatile
  5878  00208E  0012               	return		;funcret
  5879  002090                     __end_of_SetPWMDutyG:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           intcon2	equ	0xFF1
  5889                           intcon3	equ	0xFF0
  5890                           postinc0	equ	0xFEE
  5891                           wreg	equ	0xFE8
  5892                           postdec1	equ	0xFE5
  5893                           fsr1l	equ	0xFE1
  5894                           indf2	equ	0xFDF
  5895                           postinc2	equ	0xFDE
  5896                           postdec2	equ	0xFDD
  5897                           fsr2h	equ	0xFDA
  5898                           fsr2l	equ	0xFD9
  5899                           status	equ	0xFD8
  5900                           
  5901 ;; *************** function _CHECK *****************
  5902 ;; Defined at:
  5903 ;;		line 710 in file "TABLEAU_2.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;		None               void
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5919 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5920 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5921 ;;Total ram usage:       14 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    2
  5924 ;; This function calls:
  5925 ;;		___lwtoft
  5926 ;; This function is called by:
  5927 ;;		Interrupt level 2
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	intcode
  5932  000008                     __pintcode:
  5933                           	opt stack 0
  5934  000008                     _CHECK:
  5935                           	opt stack 24
  5936                           
  5937                           ;incstack = 0
  5938  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5939  00000A  CFFA F00C          	movff	pclath,??_CHECK
  5940  00000E  CFFB F00D          	movff	pclatu,??_CHECK+1
  5941  000012  EDC7  F00A         	call	int_func,f	;refresh shadow registers
  5942                           pclatu	equ	0xFFB
  5943                           pclath	equ	0xFFA
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           intcon2	equ	0xFF1
  5952                           intcon3	equ	0xFF0
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           postdec1	equ	0xFE5
  5956                           fsr1l	equ	0xFE1
  5957                           indf2	equ	0xFDF
  5958                           postinc2	equ	0xFDE
  5959                           postdec2	equ	0xFDD
  5960                           fsr2h	equ	0xFDA
  5961                           fsr2l	equ	0xFD9
  5962                           status	equ	0xFD8
  5963                           
  5964                           	psect	intcode_body
  5965  00158E                     __pintcode_body:
  5966                           	opt stack 24
  5967  00158E                     int_func:
  5968                           	opt stack 24
  5969  00158E  0006               	pop		; remove dummy address from shadow register refresh
  5970  001590  CFE9 F00E          	movff	fsr0l,??_CHECK+2
  5971  001594  CFEA F00F          	movff	fsr0h,??_CHECK+3
  5972  001598  CFE1 F010          	movff	fsr1l,??_CHECK+4
  5973  00159C  CFE2 F011          	movff	fsr1h,??_CHECK+5
  5974  0015A0  CFD9 F012          	movff	fsr2l,??_CHECK+6
  5975  0015A4  CFDA F013          	movff	fsr2h,??_CHECK+7
  5976  0015A8  CFF3 F014          	movff	prodl,??_CHECK+8
  5977  0015AC  CFF4 F015          	movff	prodh,??_CHECK+9
  5978  0015B0  CFF6 F016          	movff	tblptrl,??_CHECK+10
  5979  0015B4  CFF7 F017          	movff	tblptrh,??_CHECK+11
  5980  0015B8  CFF8 F018          	movff	tblptru,??_CHECK+12
  5981  0015BC  CFF5 F019          	movff	tablat,??_CHECK+13
  5982                           
  5983                           ;TABLEAU_2.c: 713: if (TMR1IF == 1)
  5984  0015C0  A09E               	btfss	3998,0,c	;volatile
  5985  0015C2  D03B               	goto	i2l223
  5986                           
  5987                           ;TABLEAU_2.c: 714: {
  5988                           ;TABLEAU_2.c: 715: ((void)(TMR1H=((0xFF00)>>8),TMR1L=((0xFF00)&0xFF)));
  5989  0015C4  68CF               	setf	4047,c	;volatile
  5990  0015C6  0E00               	movlw	0
  5991  0015C8  6ECE               	movwf	4046,c	;volatile
  5992                           
  5993                           ;TABLEAU_2.c: 716: clk_count++;
  5994  0015CA  4A36               	infsnz	_clk_count,f,c
  5995  0015CC  2A37               	incf	_clk_count+1,f,c
  5996                           
  5997                           ;TABLEAU_2.c: 717: count_s0++;
  5998  0015CE  4A38               	infsnz	_count_s0,f,c
  5999  0015D0  2A39               	incf	_count_s0+1,f,c
  6000                           
  6001                           ;TABLEAU_2.c: 718: count_s1++;
  6002  0015D2  4A3A               	infsnz	_count_s1,f,c
  6003  0015D4  2A3B               	incf	_count_s1+1,f,c
  6004                           
  6005                           ;TABLEAU_2.c: 719: count_s2++;
  6006  0015D6  4A3C               	infsnz	_count_s2,f,c
  6007  0015D8  2A3D               	incf	_count_s2+1,f,c
  6008                           
  6009                           ;TABLEAU_2.c: 720: if (count_s0 == counts0_limit)
  6010  0015DA  503F               	movf	_counts0_limit,w,c
  6011  0015DC  1838               	xorwf	_count_s0,w,c
  6012  0015DE  E112               	bnz	i2l2847
  6013  0015E0  5040               	movf	_counts0_limit+1,w,c
  6014  0015E2  1839               	xorwf	_count_s0+1,w,c
  6015  0015E4  A4D8               	btfss	status,2,c
  6016  0015E6  D00E               	goto	i2l2847
  6017                           
  6018                           ;TABLEAU_2.c: 721: {
  6019                           ;TABLEAU_2.c: 722: PORTDbits.RD1 = 1;
  6020  0015E8  8283               	bsf	3971,1,c	;volatile
  6021                           
  6022                           ;TABLEAU_2.c: 723: PORTDbits.RD2 = 1;
  6023  0015EA  8483               	bsf	3971,2,c	;volatile
  6024                           
  6025                           ;TABLEAU_2.c: 724: count_s0 = 0;
  6026  0015EC  0E00               	movlw	0
  6027  0015EE  6E39               	movwf	_count_s0+1,c
  6028  0015F0  0E00               	movlw	0
  6029  0015F2  6E38               	movwf	_count_s0,c
  6030                           
  6031                           ;TABLEAU_2.c: 725: count_s1 = 0;
  6032  0015F4  0E00               	movlw	0
  6033  0015F6  6E3B               	movwf	_count_s1+1,c
  6034  0015F8  0E00               	movlw	0
  6035  0015FA  6E3A               	movwf	_count_s1,c
  6036                           
  6037                           ;TABLEAU_2.c: 726: count_s2 = 0;
  6038  0015FC  0E00               	movlw	0
  6039  0015FE  6E3D               	movwf	_count_s2+1,c
  6040  001600  0E00               	movlw	0
  6041  001602  6E3C               	movwf	_count_s2,c
  6042  001604                     i2l2847:
  6043                           
  6044                           ;TABLEAU_2.c: 727: }
  6045                           ;TABLEAU_2.c: 728: if (count_s1 == counts1_limit)
  6046  001604  5041               	movf	_counts1_limit,w,c
  6047  001606  183A               	xorwf	_count_s1,w,c
  6048  001608  E104               	bnz	i2l2851
  6049  00160A  5042               	movf	_counts1_limit+1,w,c
  6050  00160C  183B               	xorwf	_count_s1+1,w,c
  6051  00160E  B4D8               	btfsc	status,2,c
  6052                           
  6053                           ;TABLEAU_2.c: 729: {
  6054                           ;TABLEAU_2.c: 730: PORTDbits.RD1 = 0;
  6055  001610  9283               	bcf	3971,1,c	;volatile
  6056  001612                     i2l2851:
  6057                           
  6058                           ;TABLEAU_2.c: 732: }
  6059                           ;TABLEAU_2.c: 733: if (count_s2 == counts2_limit)
  6060  001612  5043               	movf	_counts2_limit,w,c
  6061  001614  183C               	xorwf	_count_s2,w,c
  6062  001616  E104               	bnz	i2l2855
  6063  001618  5044               	movf	_counts2_limit+1,w,c
  6064  00161A  183D               	xorwf	_count_s2+1,w,c
  6065  00161C  B4D8               	btfsc	status,2,c
  6066                           
  6067                           ;TABLEAU_2.c: 734: {
  6068                           ;TABLEAU_2.c: 735: PORTDbits.RD2 = 0;
  6069  00161E  9483               	bcf	3971,2,c	;volatile
  6070  001620                     i2l2855:
  6071                           
  6072                           ;TABLEAU_2.c: 737: }
  6073                           ;TABLEAU_2.c: 738: if (clk_count == 23531)
  6074  001620  0EEB               	movlw	235
  6075  001622  1836               	xorwf	_clk_count,w,c
  6076  001624  E109               	bnz	i2l227
  6077  001626  0E5B               	movlw	91
  6078  001628  1837               	xorwf	_clk_count+1,w,c
  6079  00162A  A4D8               	btfss	status,2,c
  6080  00162C  D005               	goto	i2l227
  6081                           
  6082                           ;TABLEAU_2.c: 739: {
  6083                           ;TABLEAU_2.c: 740: clk_second++;
  6084  00162E  2A3E               	incf	_clk_second,f,c
  6085                           
  6086                           ;TABLEAU_2.c: 741: if (clk_second == 90)
  6087  001630  0E5A               	movlw	90
  6088  001632  183E               	xorwf	_clk_second,w,c
  6089  001634  B4D8               	btfsc	status,2,c
  6090  001636  D7FF               	goto	i2l230
  6091  001638                     i2l227:
  6092                           
  6093                           ;TABLEAU_2.c: 744: }
  6094                           ;TABLEAU_2.c: 745: }
  6095                           ;TABLEAU_2.c: 746: TMR1IF = 0;
  6096  001638  909E               	bcf	3998,0,c	;volatile
  6097  00163A                     i2l223:
  6098                           
  6099                           ;TABLEAU_2.c: 749: }
  6100                           ;TABLEAU_2.c: 750: if (INT0IF == 1)
  6101  00163A  A2F2               	btfss	intcon,1,c	;volatile
  6102  00163C  D004               	goto	i2l2865
  6103                           
  6104                           ;TABLEAU_2.c: 751: {
  6105                           ;TABLEAU_2.c: 753: countg++;
  6106  00163E  0100               	movlb	0	; () banked
  6107  001640  4B92               	infsnz	_countg& (0+255),f,b
  6108  001642  2B93               	incf	(_countg+1)& (0+255),f,b
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;TABLEAU_2.c: 754: INT0IF = 0;
  6112  001644  92F2               	bcf	intcon,1,c	;volatile
  6113  001646                     i2l2865:
  6114                           
  6115                           ;TABLEAU_2.c: 756: }
  6116                           ;TABLEAU_2.c: 759: if (INT1IF == 1)
  6117  001646  A0F0               	btfss	intcon3,0,c	;volatile
  6118  001648  D004               	goto	i2l2871
  6119                           
  6120                           ;TABLEAU_2.c: 760: {
  6121                           ;TABLEAU_2.c: 761: countd++;
  6122  00164A  0100               	movlb	0	; () banked
  6123  00164C  4B90               	infsnz	_countd& (0+255),f,b
  6124  00164E  2B91               	incf	(_countd+1)& (0+255),f,b
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;TABLEAU_2.c: 762: INT1IF = 0;
  6128  001650  90F0               	bcf	intcon3,0,c	;volatile
  6129  001652                     i2l2871:
  6130                           
  6131                           ;TABLEAU_2.c: 763: }
  6132                           ;TABLEAU_2.c: 764: if (INT2IF == 1)
  6133  001652  A2F0               	btfss	intcon3,1,c	;volatile
  6134  001654  D019               	goto	i2l237
  6135                           
  6136                           ;TABLEAU_2.c: 765: {
  6137                           ;TABLEAU_2.c: 766: if (INTEDG2 == 1)
  6138  001656  A8F1               	btfss	intcon2,4,c	;volatile
  6139  001658  D006               	goto	i2l2879
  6140                           
  6141                           ;TABLEAU_2.c: 767: {
  6142                           ;TABLEAU_2.c: 768: TMR0 = 0;
  6143  00165A  0E00               	movlw	0
  6144  00165C  6ED7               	movwf	4055,c	;volatile
  6145  00165E  0E00               	movlw	0
  6146  001660  6ED6               	movwf	4054,c	;volatile
  6147                           
  6148                           ;TABLEAU_2.c: 769: INTEDG2 = 0;
  6149  001662  98F1               	bcf	intcon2,4,c	;volatile
  6150                           
  6151                           ;TABLEAU_2.c: 771: }
  6152  001664  D010               	goto	i2l2885
  6153  001666                     i2l2879:
  6154                           
  6155                           ;TABLEAU_2.c: 772: else
  6156                           ;TABLEAU_2.c: 773: {
  6157                           ;TABLEAU_2.c: 774: inter = (TMR0);
  6158  001666  CFD6 F009          	movff	4054,___lwtoft@c	;volatile
  6159  00166A  CFD7 F00A          	movff	4055,___lwtoft@c+1	;volatile
  6160  00166E  EC6C  F010         	call	___lwtoft	;wreg free
  6161  001672  C009  F08B         	movff	?___lwtoft,_inter
  6162  001676  C00A  F08C         	movff	?___lwtoft+1,_inter+1
  6163  00167A  C00B  F08D         	movff	?___lwtoft+2,_inter+2
  6164                           
  6165                           ;TABLEAU_2.c: 784: INTEDG2 = 1;
  6166  00167E  88F1               	bsf	intcon2,4,c	;volatile
  6167                           
  6168                           ;TABLEAU_2.c: 785: new_value = 1;
  6169  001680  0E01               	movlw	1
  6170  001682  0100               	movlb	0	; () banked
  6171  001684  6F98               	movwf	_new_value& (0+255),b
  6172  001686                     i2l2885:
  6173                           
  6174                           ;TABLEAU_2.c: 786: }
  6175                           ;TABLEAU_2.c: 787: INT2IF = 0;
  6176  001686  92F0               	bcf	intcon3,1,c	;volatile
  6177  001688                     i2l237:
  6178  001688  C019  FFF5         	movff	??_CHECK+13,tablat
  6179  00168C  C018  FFF8         	movff	??_CHECK+12,tblptru
  6180  001690  C017  FFF7         	movff	??_CHECK+11,tblptrh
  6181  001694  C016  FFF6         	movff	??_CHECK+10,tblptrl
  6182  001698  C015  FFF4         	movff	??_CHECK+9,prodh
  6183  00169C  C014  FFF3         	movff	??_CHECK+8,prodl
  6184  0016A0  C013  FFDA         	movff	??_CHECK+7,fsr2h
  6185  0016A4  C012  FFD9         	movff	??_CHECK+6,fsr2l
  6186  0016A8  C011  FFE2         	movff	??_CHECK+5,fsr1h
  6187  0016AC  C010  FFE1         	movff	??_CHECK+4,fsr1l
  6188  0016B0  C00F  FFEA         	movff	??_CHECK+3,fsr0h
  6189  0016B4  C00E  FFE9         	movff	??_CHECK+2,fsr0l
  6190  0016B8  C00D  FFFB         	movff	??_CHECK+1,pclatu
  6191  0016BC  C00C  FFFA         	movff	??_CHECK,pclath
  6192  0016C0  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6193  0016C2  0011               	retfie		f
  6194  0016C4                     __end_of_CHECK:
  6195                           	opt stack 0
  6196                           pclatu	equ	0xFFB
  6197                           pclath	equ	0xFFA
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           intcon	equ	0xFF2
  6205                           intcon2	equ	0xFF1
  6206                           intcon3	equ	0xFF0
  6207                           postinc0	equ	0xFEE
  6208                           fsr0h	equ	0xFEA
  6209                           fsr0l	equ	0xFE9
  6210                           wreg	equ	0xFE8
  6211                           postdec1	equ	0xFE5
  6212                           fsr1h	equ	0xFE2
  6213                           fsr1l	equ	0xFE1
  6214                           indf2	equ	0xFDF
  6215                           postinc2	equ	0xFDE
  6216                           postdec2	equ	0xFDD
  6217                           fsr2h	equ	0xFDA
  6218                           fsr2l	equ	0xFD9
  6219                           status	equ	0xFD8
  6220                           
  6221 ;; *************** function ___lwtoft *****************
  6222 ;; Defined at:
  6223 ;;		line 28 in file "/opt/microchip/xc8/v1.35/sources/common/lwtoft.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  c               2    8[COMRAM] unsigned int 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  3    8[COMRAM] float 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6237 ;;      Params:         3       0       0       0       0       0       0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6240 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6241 ;;Total ram usage:        3 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    1
  6244 ;; This function calls:
  6245 ;;		i2___ftpack
  6246 ;; This function is called by:
  6247 ;;		_CHECK
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text26
  6252  0020D8                     __ptext26:
  6253                           	opt stack 0
  6254  0020D8                     ___lwtoft:
  6255                           	opt stack 24
  6256                           
  6257                           ;incstack = 0
  6258  0020D8  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
  6259  0020DC  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
  6260  0020E0  6A03               	clrf	i2___ftpack@arg+2,c
  6261  0020E2  0E8E               	movlw	142
  6262  0020E4  6E04               	movwf	i2___ftpack@exp,c
  6263  0020E6  0E00               	movlw	0
  6264  0020E8  6E05               	movwf	i2___ftpack@sign,c
  6265  0020EA  EC55  F00E         	call	i2___ftpack	;wreg free
  6266  0020EE  C001  F009         	movff	?i2___ftpack,?___lwtoft
  6267  0020F2  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
  6268  0020F6  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
  6269  0020FA  0012               	return	
  6270  0020FC                     __end_of___lwtoft:
  6271                           	opt stack 0
  6272                           pclatu	equ	0xFFB
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           intcon2	equ	0xFF1
  6282                           intcon3	equ	0xFF0
  6283                           postinc0	equ	0xFEE
  6284                           fsr0h	equ	0xFEA
  6285                           fsr0l	equ	0xFE9
  6286                           wreg	equ	0xFE8
  6287                           postdec1	equ	0xFE5
  6288                           fsr1h	equ	0xFE2
  6289                           fsr1l	equ	0xFE1
  6290                           indf2	equ	0xFDF
  6291                           postinc2	equ	0xFDE
  6292                           postdec2	equ	0xFDD
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function i2___ftpack *****************
  6298 ;; Defined at:
  6299 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  arg             3    0[COMRAM] unsigned um
  6302 ;;  exp             1    3[COMRAM] unsigned char 
  6303 ;;  sign            1    4[COMRAM] unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  3    0[COMRAM] float 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6315 ;;      Params:         5       0       0       0       0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6317 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6318 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6319 ;;Total ram usage:        8 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		___lwtoft
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text27
  6329  001CAA                     __ptext27:
  6330                           	opt stack 0
  6331  001CAA                     i2___ftpack:
  6332                           	opt stack 24
  6333                           
  6334                           ;incstack = 0
  6335  001CAA  5004               	movf	i2___ftpack@exp,w,c
  6336  001CAC  B4D8               	btfsc	status,2,c
  6337  001CAE  D005               	goto	i2l2393
  6338  001CB0  5001               	movf	i2___ftpack@arg,w,c
  6339  001CB2  1002               	iorwf	i2___ftpack@arg+1,w,c
  6340  001CB4  1003               	iorwf	i2___ftpack@arg+2,w,c
  6341  001CB6  A4D8               	btfss	status,2,c
  6342  001CB8  D00C               	goto	i2l2399
  6343  001CBA                     i2l2393:
  6344  001CBA  0E00               	movlw	0
  6345  001CBC  6E01               	movwf	?i2___ftpack,c
  6346  001CBE  0E00               	movlw	0
  6347  001CC0  6E02               	movwf	?i2___ftpack+1,c
  6348  001CC2  0E00               	movlw	0
  6349  001CC4  6E03               	movwf	?i2___ftpack+2,c
  6350  001CC6  0012               	return	
  6351  001CC8                     i2l2397:
  6352  001CC8  2A04               	incf	i2___ftpack@exp,f,c
  6353  001CCA  90D8               	bcf	status,0,c
  6354  001CCC  3203               	rrcf	i2___ftpack@arg+2,f,c
  6355  001CCE  3202               	rrcf	i2___ftpack@arg+1,f,c
  6356  001CD0  3201               	rrcf	i2___ftpack@arg,f,c
  6357  001CD2                     i2l2399:
  6358  001CD2  0E00               	movlw	0
  6359  001CD4  1401               	andwf	i2___ftpack@arg,w,c
  6360  001CD6  6E06               	movwf	??i2___ftpack& (0+255),c
  6361  001CD8  0E00               	movlw	0
  6362  001CDA  1402               	andwf	i2___ftpack@arg+1,w,c
  6363  001CDC  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  6364  001CDE  0EFE               	movlw	254
  6365  001CE0  1403               	andwf	i2___ftpack@arg+2,w,c
  6366  001CE2  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  6367  001CE4  5006               	movf	??i2___ftpack,w,c
  6368  001CE6  1007               	iorwf	??i2___ftpack+1,w,c
  6369  001CE8  1008               	iorwf	??i2___ftpack+2,w,c
  6370  001CEA  B4D8               	btfsc	status,2,c
  6371  001CEC  D00C               	goto	i2l2405
  6372  001CEE  D7EC               	goto	i2l2397
  6373  001CF0                     i2l2401:
  6374  001CF0  2A04               	incf	i2___ftpack@exp,f,c
  6375  001CF2  0E01               	movlw	1
  6376  001CF4  2601               	addwf	i2___ftpack@arg,f,c
  6377  001CF6  0E00               	movlw	0
  6378  001CF8  2202               	addwfc	i2___ftpack@arg+1,f,c
  6379  001CFA  0E00               	movlw	0
  6380  001CFC  2203               	addwfc	i2___ftpack@arg+2,f,c
  6381  001CFE  90D8               	bcf	status,0,c
  6382  001D00  3203               	rrcf	i2___ftpack@arg+2,f,c
  6383  001D02  3202               	rrcf	i2___ftpack@arg+1,f,c
  6384  001D04  3201               	rrcf	i2___ftpack@arg,f,c
  6385  001D06                     i2l2405:
  6386  001D06  0E00               	movlw	0
  6387  001D08  1401               	andwf	i2___ftpack@arg,w,c
  6388  001D0A  6E06               	movwf	??i2___ftpack& (0+255),c
  6389  001D0C  0E00               	movlw	0
  6390  001D0E  1402               	andwf	i2___ftpack@arg+1,w,c
  6391  001D10  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  6392  001D12  0EFF               	movlw	255
  6393  001D14  1403               	andwf	i2___ftpack@arg+2,w,c
  6394  001D16  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  6395  001D18  5006               	movf	??i2___ftpack,w,c
  6396  001D1A  1007               	iorwf	??i2___ftpack+1,w,c
  6397  001D1C  1008               	iorwf	??i2___ftpack+2,w,c
  6398  001D1E  B4D8               	btfsc	status,2,c
  6399  001D20  D006               	goto	i2l2409
  6400  001D22  D7E6               	goto	i2l2401
  6401  001D24                     i2l2407:
  6402  001D24  0604               	decf	i2___ftpack@exp,f,c
  6403  001D26  90D8               	bcf	status,0,c
  6404  001D28  3601               	rlcf	i2___ftpack@arg,f,c
  6405  001D2A  3602               	rlcf	i2___ftpack@arg+1,f,c
  6406  001D2C  3603               	rlcf	i2___ftpack@arg+2,f,c
  6407  001D2E                     i2l2409:
  6408  001D2E  BE02               	btfsc	i2___ftpack@arg+1,7,c
  6409  001D30  D003               	goto	i2l579
  6410  001D32  0E02               	movlw	2
  6411  001D34  6004               	cpfslt	i2___ftpack@exp,c
  6412  001D36  D7F6               	goto	i2l2407
  6413  001D38                     i2l579:
  6414  001D38  A004               	btfss	i2___ftpack@exp,0,c
  6415  001D3A  9E02               	bcf	i2___ftpack@arg+1,7,c
  6416  001D3C  90D8               	bcf	status,0,c
  6417  001D3E  3204               	rrcf	i2___ftpack@exp,f,c
  6418  001D40  5004               	movf	i2___ftpack@exp,w,c
  6419  001D42  1203               	iorwf	i2___ftpack@arg+2,f,c
  6420  001D44  5005               	movf	i2___ftpack@sign,w,c
  6421  001D46  A4D8               	btfss	status,2,c
  6422  001D48  8E03               	bsf	i2___ftpack@arg+2,7,c
  6423  001D4A  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  6424  001D4E  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  6425  001D52  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  6426  001D56  0012               	return	
  6427  001D58                     __end_ofi2___ftpack:
  6428                           	opt stack 0
  6429                           pclatu	equ	0xFFB
  6430                           pclath	equ	0xFFA
  6431                           tblptru	equ	0xFF8
  6432                           tblptrh	equ	0xFF7
  6433                           tblptrl	equ	0xFF6
  6434                           tablat	equ	0xFF5
  6435                           prodh	equ	0xFF4
  6436                           prodl	equ	0xFF3
  6437                           intcon	equ	0xFF2
  6438                           intcon2	equ	0xFF1
  6439                           intcon3	equ	0xFF0
  6440                           postinc0	equ	0xFEE
  6441                           fsr0h	equ	0xFEA
  6442                           fsr0l	equ	0xFE9
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           fsr1h	equ	0xFE2
  6446                           fsr1l	equ	0xFE1
  6447                           indf2	equ	0xFDF
  6448                           postinc2	equ	0xFDE
  6449                           postdec2	equ	0xFDD
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           pclatu	equ	0xFFB
  6454                           pclath	equ	0xFFA
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           intcon2	equ	0xFF1
  6463                           intcon3	equ	0xFF0
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           postdec1	equ	0xFE5
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478                           	psect	rparam
  6479  0000                     pclatu	equ	0xFFB
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           intcon2	equ	0xFF1
  6489                           intcon3	equ	0xFF0
  6490                           postinc0	equ	0xFEE
  6491                           fsr0h	equ	0xFEA
  6492                           fsr0l	equ	0xFE9
  6493                           wreg	equ	0xFE8
  6494                           postdec1	equ	0xFE5
  6495                           fsr1h	equ	0xFE2
  6496                           fsr1l	equ	0xFE1
  6497                           indf2	equ	0xFDF
  6498                           postinc2	equ	0xFDE
  6499                           postdec2	equ	0xFDD
  6500                           fsr2h	equ	0xFDA
  6501                           fsr2l	equ	0xFD9
  6502                           status	equ	0xFD8
  6503                           
  6504                           	psect	temp
  6505  000046                     btemp:
  6506                           	opt stack 0
  6507  000046                     	ds	1
  6508  0000                     int$flags	set	btemp
  6509                           pclatu	equ	0xFFB
  6510                           pclath	equ	0xFFA
  6511                           tblptru	equ	0xFF8
  6512                           tblptrh	equ	0xFF7
  6513                           tblptrl	equ	0xFF6
  6514                           tablat	equ	0xFF5
  6515                           prodh	equ	0xFF4
  6516                           prodl	equ	0xFF3
  6517                           intcon	equ	0xFF2
  6518                           intcon2	equ	0xFF1
  6519                           intcon3	equ	0xFF0
  6520                           postinc0	equ	0xFEE
  6521                           fsr0h	equ	0xFEA
  6522                           fsr0l	equ	0xFE9
  6523                           wreg	equ	0xFE8
  6524                           postdec1	equ	0xFE5
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           postinc2	equ	0xFDE
  6529                           postdec2	equ	0xFDD
  6530                           fsr2h	equ	0xFDA
  6531                           fsr2l	equ	0xFD9
  6532                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    40
    Data        9
    BSS         342
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      69
    BANK0           160     43      81
    BANK1           256      0     200
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 2
		 -> status(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    buf	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _ftoa->___fttol
    _sprintf->___llmod
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv
    _InitPWMG->_SetPWMDutyD
    _InitPWMD->_SetPWMDutyG

Critical Paths under _CHECK in COMRAM

    _CHECK->___lwtoft
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_ftoa
    _ftoa->_sprintf

Critical Paths under _CHECK in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CHECK in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CHECK in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CHECK in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CHECK in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CHECK in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CHECK in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CHECK in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   21273
                                             39 BANK0      4     4      0
                           _InitPWMD
                           _InitPWMG
                        _SetPWMDutyD
                        _SetPWMDutyG
                          _UART_Init
                         _UART_Write
                    _UART_Write_Text
                             ___ftge
                            ___ftmul
                               _ftoa
                          _in_config
                          _sendPulse
 ---------------------------------------------------------------------------------
 (1) _sendPulse                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _in_config                                            2     1      1     940
                                             25 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                15    10      5   11823
                                             24 BANK0     15    10      5
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             37    25     12    2547
                                             47 COMRAM     4     4      0
                                              0 BANK0     24    12     12
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             25 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     415
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     287
                                             38 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2125
                                             33 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     525
                                             48 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3359
                                             45 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3062
                                             33 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     109
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2676
                                             33 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     264
                                             25 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     2      2     176
                                             26 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     776
                                             39 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     556
                                             25 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _InitPWMG                                             0     0      0    1132
                        _SetPWMDutyD
 ---------------------------------------------------------------------------------
 (1) _SetPWMDutyD                                          4     2      2    1132
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitPWMD                                             0     0      0    1132
                        _SetPWMDutyG
 ---------------------------------------------------------------------------------
 (1) _SetPWMDutyG                                          4     2      2    1132
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CHECK                                               14    14      0     395
                                             11 COMRAM    14    14      0
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             3     0      3     395
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftpack                                           8     3      5     309
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPWMD
     _SetPWMDutyG
   _InitPWMG
     _SetPWMDutyD
   _SetPWMDutyD
   _SetPWMDutyG
   _UART_Init
     ___aldiv
   _UART_Write
   _UART_Write_Text
     _UART_Write
   ___ftge
   ___ftmul
     ___ftpack
   _ftoa
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _in_config
   _sendPulse

 _CHECK (ROOT)
   ___lwtoft
     i2___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      51       5       50.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     35      45       1       73.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C2      20        0.0%
DATA                 0      0     1C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed May  4 19:23:08 2016

                       _N 00AF                         _i 0094               __CFG_BOR$ON 000000  
     ___wmul@multiplicand 001C               __CFG_BORV$3 000000                i2___ftpack 1CAA  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000              ___ftadd@exp1 002D              ___ftadd@exp2 002C  
            ___ftadd@sign 002B                       l240 209E                       l242 20AE  
                     l335 11A6                       l602 1426                       l606 1450  
                     l297 2160                       l617 1500                       l626 151C  
                     l717 1E58                       l727 1F3C                       l579 1C8A  
                     l659 20CA              __CFG_CPB$OFF 000000                       _PR2 000FCB  
            __CFG_CPD$OFF 000000                       _PSA 007EAB                       _buf 008E  
                     wreg 000FE8              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    l2013 1434                      l2101 1EFA                      l2103 1F06  
                    l2041 14B0                      l3001 16FA                      l2105 1F0A  
                    l2043 14BA                      l2035 148E                      l2019 145E  
                    l2061 1538                      l2053 14EE                      l2045 14C4  
                    l2109 1F2E                      l2303 1ACE                      l2071 1568  
                    l2055 14F8                      l2047 14CC                      l3031 17BA  
                    l3023 1790                      l2313 1AF6                      l3033 17C4  
                    l2081 1E0A                      l3113 0994                      l2251 1B92  
                    l2243 1B64                      l3019 177C                      l2083 1E16  
                    l3131 0A20                      l2261 1BC6                      l2253 1B96  
                    l2237 1B4C                      l2309 1AE6                      l2325 1FC0  
                    l3037 17E0                      l3029 17AA                      l2093 1E4A  
                    l2085 1E1A                      l3221 0C68                      l3213 0C48  
                    l3205 0BFE                      l3141 0A6C                      l3109 096C  
                    l2503 1D88                      l3215 0C5E                      l3207 0C14  
                    l3151 0AC8                      l3119 09B4                      l2249 1B86  
                    l2265 1BD4                      l2513 1DE4                      l3049 195E  
                    l3241 0D0A                      l3233 0CC0                      l3225 0C6A  
                    l3153 0ADE                      l2507 1DB8                      l3235 0CD6  
                    l3171 0B34                      l2269 1BEA                      l2453 1906  
                    l2285 1A8C                      l2381 1F54                      l3325 0F32  
                    l3317 0EE8                      l3309 0E92                      l3261 0D78  
                    l3253 0D22                      l2279 1A64                      l2383 1F60  
                    l3319 0EFE                      l3263 0D8E                      l3159 0B14  
                    l3353 0FEA                      l3345 0FA0                      l3337 0F4A  
                    l3281 0DDA                      l3185 0B7E                      l3169 0B2C  
                    l2299 1ABE                      l3347 0FB6                      l3291 0E46  
                    l2485 1FF4                      l2901 1088                      l3269 0DC2  
                    l3197 0BA8                      l3365 1018                      l2495 20A2  
                    l2489 200A                      l1961 1C24                      l2921 1160  
                    l3297 0E7A                      l3289 0E30                      l1971 1C80  
                    l1963 1C42                      l1955 1C0C                      l2923 116C  
                    l2915 110E                      l2925 1172                      l2909 10EA  
                    l1967 1C58                      l1959 1C1A                      l2935 11C8  
                    l2919 114A                      l1969 1C76                      l2945 1216  
                    l2929 117A                      l1995 2112                      l2971 12E6  
                    l2963 1286                      l2947 121C                      l2981 1318  
                    l2973 12F0                      l2967 12B2                      l2959 1262  
                    l2991 13D4                      l2895 105A                      l2889 103C  
                    l2987 13A2                      l2989 13B8                      STR_1 0829  
                    _BRGH 007D62                      _CREN 007D5C                      _T0CS 007EAD  
                    u2201 1A74                      u2181 1A4C                      u2435 1804  
                    u2445 184E                      u1661 13F2                      u1671 1406  
                    u3271 16D8                      u3360 0974                      u2465 1890  
                    u3290 1720                      u2475 18DA                      u3366 0976  
                    u3295 1716                      _PEIE 007F96                      u3807 2156  
                    _RCIF 007CF5                      u3797 0B96                      _TMR0 000FD6  
                    _SPEN 007D5F                      _TRMT 007D61                      _TXEN 007D65  
                    _SYNC 007D64                      _main 0836                      _ftoa 191E  
            ___ftpack@arg 001A              ___ftpack@exp 001D                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr0l 000FE9                      fsr2h 000FDA  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
                    btemp 0046                      pclat 000FFA                      prodh 000FF4  
                    prodl 000FF3                      start 0016             __CFG_IESO$OFF 000000  
           __CFG_MCLRE$ON 000000              ___ftmul@cntr 002F              ___param_bank 000010  
            ___ftmul@sign 0030   __end_of_UART_Write_Text 201E              ___fttol@exp1 006A  
            ___fttol@lval 0066             __CFG_PLLDIV$5 000000            __CFG_CCP2MX$ON 000000  
         __end_of___aldiv 1BFC                     ?_main 0001                     ?_ftoa 0078  
                   _CHECK 0008           __end_of___ftadd 158E           __end_of___ftneg 20D8  
         __end_of___lldiv 1E6A           __end_of___ftmul 1B30           __end_of___llmod 1F4E  
         __end_of___ftsub 1FEA           __end_of___fttol 17F2                     _T2CON 000FCA  
                   _T0PS0 007EA8                     _T0PS1 007EA9                     _T0PS2 007EAA  
                   i2l230 1636                     i2l223 163A                     i2l227 1638  
                   i2l237 1688                     i2l579 1D38                     _RCREG 000FAE  
                   _TMR1H 000FCF                     _TMR1L 000FCE                     _SPBRG 000FAF  
                   _PORTB 000F81             __CFG_USBDIV$1 000000                     _TXREG 000FAD  
           __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000              ___lltoft@exp 002A  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000               ?_UART_Write 0001  
      __size_of_UART_Init 012C             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000           __end_of_dpowers 0829  
                   _inter 008B           __end_of_isdigit 211A             ___ftpack@sign 001E  
                   ftoa@f 0078                     ftoa@l 0081            __pbitbssCOMRAM 0228  
                   tablat 000FF5             ??_SetPWMDutyD 001C             ??_SetPWMDutyG 001C  
                   status 000FD8           __end_of_sprintf 13E2            __CFG_ICPRT$OFF 000000  
          _pulse_controle 0096             _counts0_limit 003F             _counts1_limit 0041  
           _counts2_limit 0043           __initialization 1E6A              __end_of_main 102E  
            __end_of_ftoa 1A3C          __end_of_InitPWMD 2152          __end_of_InitPWMG 2136  
             ?i2___ftpack 0001                    ??_main 0087                    ??_ftoa 0035  
           ___fttol@sign1 0065                    ?_CHECK 0001             __activetblptr 000002  
        ___llmod@dividend 0027                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
                  _T08BIT 007EAE          __end_of___ftpack 1CAA          __end_of___lltoft 1FAA  
                  _INT0IE 007F94                    _INT0IF 007F91                    _INT1IE 007F83  
                  _INT1IF 007F80                    _INT2IF 007F81                    i2l2401 1CF0  
                  i2l2405 1D06                    i2l2407 1D24                    i2l2409 1D2E  
                  i2l2393 1CBA                    i2l2397 1CC8                    i2l2399 1CD2  
                  i2l2851 1612                    i2l2871 1652                    i2l2855 1620  
                  i2l2847 1604                    i2l2865 1646                    i2l2885 1686  
                  i2l2879 1666          __end_of___lwtoft 20FC                    _TMR1IE 007CE8  
                  _TMR1IF 007CF0                    _TMR1IP 007CF8                    _TRISC1 007CA1  
                  _TRISC2 007CA2                    _TRISC6 007CA6                    _TRISC7 007CA7  
          __CFG_XINST$OFF 000000       __end_of_SetPWMDutyD 206A       __end_of_SetPWMDutyG 2090  
       __end_of_UART_Init 191E                    ___ftge 1D58       __size_of_UART_Write 000C  
               ??___aldiv 0022                    ___wmul 201E                 ??___ftadd 0028  
          __CFG_STVREN$ON 000000          ?_UART_Write_Text 001B                 ??___ftneg 001D  
               ??___lldiv 0022                 ??___ftmul 0028                 ??___llmod 002F  
               ??___ftsub 0034                 ??___fttol 0060                    _countd 0090  
                  _countg 0092                    clear_0 1E70                    clear_1 1E7C  
                  clear_2 1E88                    clear_3 1E96                    _status 00AA  
                  main@jj 0089                    ftoa@cp 0085     ___ftmul@f3_as_product 002C  
            __pdataCOMRAM 003F                 ??_isdigit 001A              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_sprintf 0030                __accesstop 0060   __end_of__initialization 1EDA  
         __CFG_PBADEN$OFF 000000                ___ftadd@f1 0022                ___ftadd@f2 0025  
     __size_ofi2___ftpack 00AE                ___ftge@ff1 001A                ___ftge@ff2 001D  
           __end_of_CHECK 16C4             ___rparam_used 000001                ___ftneg@f1 001A  
          i2___ftpack@arg 0001            i2___ftpack@exp 0004                ___ftmul@f1 0022  
              ___ftmul@f2 0025                ___ftsub@f1 002E                ___ftsub@f2 0031  
              ___fttol@f1 0031            __pcstackCOMRAM 0001              __pidataBANK0 2170  
              ___lltoft@c 0022                ___lwtoft@c 0009                   ??_CHECK 000C  
            sprintf@width 0073        __size_of_in_config 0024                __pbssBANK0 008B  
              __pbssBANK1 0100                __pbssBANK2 0200                 ?_InitPWMD 0001  
               ?_InitPWMG 0001               _SetPWMDutyD 2044               _SetPWMDutyG 206A  
                 ?___ftge 001A                   ?___wmul 001A        __size_of_sendPulse 000C  
              _clk_second 003E                   _CCP1CON 000FBD                   _CCP2CON 000FBA  
               ?___ftpack 001A                 ?___lltoft 0022                 ?___lwtoft 0009  
                 _INTEDG0 007F8E                   _INTEDG1 007F8D                   _INTEDG2 007F8C  
            ??_UART_Write 001A                ??_InitPWMD 001E                ??_InitPWMG 001E  
         __CFG_VREGEN$OFF 000000                   __Hparam 0000                   __Lparam 0000  
                 ___aldiv 1B30           __size_of___ftge 0090                   ___ftadd 13E2  
                 ___ftneg 20B4                   ___lldiv 1DE8           __size_of___wmul 0026  
      __end_of_UART_Write 216A                   ___ftmul 1A3C                   ___llmod 1EE8  
                 ___ftsub 1FAA                   ___fttol 16C4              __psmallconst 0800  
       __end_of_in_config 20B4                   __pcinit 1E6A              ??i2___ftpack 0006  
              ??___ftpack 001F                   __ramtop 0800                ??___lltoft 0026  
                 __ptext0 0836                   __ptext1 2152                   __ptext2 2090  
                 __ptext3 191E                   __ptext4 102E                   __ptext5 20FC  
                 __ptext6 201E                   __ptext7 1EE8                   __ptext8 1DE8  
                 __ptext9 1F4E                _tab_para_d 0200                _tab_para_g 0164  
              ??___lwtoft 000C                 _T1CONbits 000FCD                   _dpowers 0801  
                 _isdigit 20FC          ___aldiv@dividend 001A                   _sprintf 102E  
          __pintcode_body 158E      end_of_initialization 1EDA                   ftoa@buf 0099  
       __end_of_sendPulse 215E                   ftoa@rem 007D             __Lmediumconst 0000  
                 int_func 158E        __end_ofi2___ftpack 1D58           ___lldiv@divisor 001E  
         ___lldiv@counter 0026          ___aldiv@quotient 0024                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _UART_Init 17F2                 _PORTBbits 000F81                 _PORTCbits 000F82  
               _PORTDbits 000F83            UART_Write@data 001A                 _TRISBbits 000F93  
               _TRISDbits 000F95           i2___ftpack@sign 0005               ___ftmul@exp 002B  
          __end_of___ftge 1DE8            __end_of___wmul 2044                ?_UART_Init 0028  
           __pidataCOMRAM 216A           in_config@gauche 001B  __size_of_UART_Write_Text 0034  
         in_config@droite 001A       start_initialization 1E6A                ftoa@status 007B  
            ?_SetPWMDutyD 001A              ?_SetPWMDutyG 001A           ___llmod@divisor 002B  
       __size_of_InitPWMD 001C         __size_of_InitPWMG 001C           ___llmod@counter 002F  
                ??___ftge 0020                  ??___wmul 001E               __pdataBANK0 00AC  
        __CFG_LPT1OSC$OFF 000000         __size_of___ftpack 00AE         __size_of___lltoft 005C  
             __pbssCOMRAM 0036         __size_of___lwtoft 0024             __pcstackBANK0 0060  
             sprintf@flag 006C               sprintf@prec 0075                 __pnvBANK0 00AF  
               __pintcode 0008                 _clk_count 0036                  ?___aldiv 001A  
                ?___ftadd 0022                  ?___ftneg 001A                  ?___lldiv 001A  
                ?___ftmul 0022                  ?___llmod 0027                  ?___ftsub 002E  
                ?___fttol 0031               ??_UART_Init 002C            __size_of_CHECK 16BC  
             __smallconst 0800                 _in_config 2090                  ?_isdigit 0001  
                ?_sprintf 0060                UART_Init@x 0034         ??_UART_Write_Text 001D  
         ___aldiv@divisor 001E                 _new_value 0098           ___aldiv@counter 0022  
          ___wmul@product 001E      SetPWMDutyD@DutyCycle 001A                 _sendPulse 2152  
        __CFG_WDTPS$32768 000000         UART_Init@baudrate 0028         ___wmul@multiplier 001A  
              ?_in_config 001A      SetPWMDutyG@DutyCycle 001A                 copy_data0 1ECE  
                _InitPWMD 2136                  _InitPWMG 211A                ?_sendPulse 0001  
    __size_of_SetPWMDutyD 0026      __size_of_SetPWMDutyG 0026                  __Hrparam 0000  
                __Lrparam 0000          __size_of___aldiv 00CC          __size_of___ftadd 01AC  
        __size_of___ftneg 0024          __size_of___lldiv 0082          __size_of___ftmul 00F4  
        __size_of___llmod 0066          __size_of___ftsub 0040          __size_of___fttol 012E  
                ___ftpack 1BFC                  ___lltoft 1F4E               _isdigit$880 001B  
                ___lwtoft 20D8                sprintf@val 006F          __size_of_isdigit 001E  
             _tab_command 0100                  __ptext10 16C4                  __ptext11 1FAA  
                __ptext20 1B30                  __ptext12 13E2                  __ptext21 211A  
                __ptext13 20B4                  __ptext22 2044                  __ptext14 1A3C  
                __ptext23 2136                  __ptext15 1BFC                  __ptext24 206A  
                __ptext16 1D58                  __ptext17 1FEA                  __ptext26 20D8  
                __ptext18 215E                  __ptext27 1CAA                  __ptext19 17F2  
                _distance 00AC          __size_of_sprintf 03B4                  _count_s0 0038  
                _count_s1 003A                  _count_s2 003C       UART_Write_Text@text 001B  
           __size_of_main 07F8             __size_of_ftoa 011E                  int$flags 0046  
   __CFG_CPUDIV$OSC1_PLL2 000000               ??_in_config 001B                _INTCONbits 000FF2  
                isdigit@c 001C                  intlevel2 0000                 sprintf@ap 006D  
               sprintf@sp 0060          ___lldiv@dividend 001A               ??_sendPulse 001A  
         _UART_Write_Text 1FEA                  sprintf@c 0077                  sprintf@f 0062  
        ___lldiv@quotient 0022              ___aldiv@sign 0023                _UART_Write 215E  
      __CFG_FOSC$HSPLL_HS 000000          UART_Write_Text@i 001D               _positionok1 0228  
             _positionok2 0229  
