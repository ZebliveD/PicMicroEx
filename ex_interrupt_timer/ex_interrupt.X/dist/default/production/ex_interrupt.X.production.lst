

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb  7 18:45:09 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.40
    15                           ; Generated 01/12/2016 GMT
    16                           ; 
    17                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _INTCONbits	set	4082
    49  0000                     _LATB	set	3978
    50  0000                     _PORTB	set	3969
    51  0000                     _T1CONbits	set	4045
    52  0000                     _TMR1H	set	4047
    53  0000                     _TMR1L	set	4046
    54  0000                     _TRISB	set	3987
    55  0000                     _IPEN	set	32391
    56  0000                     _PEIE	set	32662
    57  0000                     _TMR1IE	set	31976
    58  0000                     _TMR1IF	set	31984
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  0000BA                     __pcinit:
    64                           	opt stack 0
    65  0000BA                     start_initialization:
    66                           	opt stack 0
    67  0000BA                     __initialization:
    68                           	opt stack 0
    69  0000BA                     end_of_initialization:
    70                           	opt stack 0
    71  0000BA                     __end_of__initialization:
    72                           	opt stack 0
    73  0000BA  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  0000BC  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  0000BE  0100               	movlb	0
    76  0000C0  EF4B  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt stack 0
    81  000001                     ??_CHECK:
    82                           
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	14
    85  00000F                     
    86                           ; 1 bytes @ 0xE
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 13 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called:    1
   112 ;; This function calls:
   113 ;;		Nothing
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  000096                     __ptext0:
   121                           	opt stack 0
   122  000096                     _main:
   123                           	opt stack 30
   124                           
   125                           ;main.c: 17: TRISB=0x00;
   126                           
   127                           ;incstack = 0
   128  000096  0E00               	movlw	0
   129  000098  6E93               	movwf	3987,c	;volatile
   130                           
   131                           ;main.c: 18: PORTB = 0x00;
   132  00009A  0E00               	movlw	0
   133  00009C  6E81               	movwf	3969,c	;volatile
   134                           
   135                           ;main.c: 23: IPEN = 0;
   136  00009E  9ED0               	bcf	4048,7,c	;volatile
   137                           
   138                           ;main.c: 30: INTCONbits.GIE = 1;
   139  0000A0  8EF2               	bsf	intcon,7,c	;volatile
   140                           
   141                           ;main.c: 33: PEIE = 1;
   142  0000A2  8CF2               	bsf	intcon,6,c	;volatile
   143                           
   144                           ;main.c: 35: TMR1IE = 1;
   145  0000A4  809D               	bsf	3997,0,c	;volatile
   146                           
   147                           ;main.c: 37: T1CONbits.RD16 = 1;
   148  0000A6  8ECD               	bsf	4045,7,c	;volatile
   149                           
   150                           ;main.c: 47: T1CONbits.T1CKPS0 = 1;
   151  0000A8  88CD               	bsf	4045,4,c	;volatile
   152                           
   153                           ;main.c: 48: T1CONbits.T1CKPS1 = 0;
   154  0000AA  9ACD               	bcf	4045,5,c	;volatile
   155                           
   156                           ;main.c: 50: T1CONbits.T1OSCEN = 0;
   157  0000AC  96CD               	bcf	4045,3,c	;volatile
   158                           
   159                           ;main.c: 54: T1CONbits.TMR1CS = 0;
   160  0000AE  92CD               	bcf	4045,1,c	;volatile
   161                           
   162                           ;main.c: 56: T1CONbits.TMR1ON = 1;
   163  0000B0  80CD               	bsf	4045,0,c	;volatile
   164                           
   165                           ;main.c: 58: ((void)(TMR1H=((0xFF00)>>8),TMR1L=((0xFF00)&0xFF)));
   166  0000B2  68CF               	setf	4047,c	;volatile
   167  0000B4  0E00               	movlw	0
   168  0000B6  6ECE               	movwf	4046,c	;volatile
   169  0000B8                     l25:
   170  0000B8  D7FF               	goto	l25
   171  0000BA                     __end_of_main:
   172                           	opt stack 0
   173                           intcon	equ	0xFF2
   174                           
   175 ;; *************** function _CHECK *****************
   176 ;; Defined at:
   177 ;;		line 65 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   191 ;;      Params:         0       0       0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0
   193 ;;      Temps:         14       0       0       0       0       0       0       0       0
   194 ;;      Totals:        14       0       0       0       0       0       0       0       0
   195 ;;Total ram usage:       14 bytes
   196 ;; Hardware stack levels used:    1
   197 ;; This function calls:
   198 ;;		Nothing
   199 ;; This function is called by:
   200 ;;		Interrupt level 2
   201 ;; This function uses a non-reentrant model
   202 ;;
   203                           
   204                           	psect	intcode
   205  000008                     __pintcode:
   206                           	opt stack 0
   207  000008                     _CHECK:
   208                           	opt stack 30
   209                           
   210                           ;incstack = 0
   211  000008  820F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   212  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   213                           intcon	equ	0xFF2
   214                           
   215                           	psect	intcode_body
   216  000012                     __pintcode_body:
   217                           	opt stack 30
   218  000012                     int_func:
   219                           	opt stack 30
   220  000012  0006               	pop		; remove dummy address from shadow register refresh
   221  000014  CFFA F001          	movff	pclath,??_CHECK
   222  000018  CFFB F002          	movff	pclatu,??_CHECK+1
   223  00001C  CFE9 F003          	movff	fsr0l,??_CHECK+2
   224  000020  CFEA F004          	movff	fsr0h,??_CHECK+3
   225  000024  CFE1 F005          	movff	fsr1l,??_CHECK+4
   226  000028  CFE2 F006          	movff	fsr1h,??_CHECK+5
   227  00002C  CFD9 F007          	movff	fsr2l,??_CHECK+6
   228  000030  CFDA F008          	movff	fsr2h,??_CHECK+7
   229  000034  CFF3 F009          	movff	prodl,??_CHECK+8
   230  000038  CFF4 F00A          	movff	prodh,??_CHECK+9
   231  00003C  CFF6 F00B          	movff	tblptrl,??_CHECK+10
   232  000040  CFF7 F00C          	movff	tblptrh,??_CHECK+11
   233  000044  CFF8 F00D          	movff	tblptru,??_CHECK+12
   234  000048  CFF5 F00E          	movff	tablat,??_CHECK+13
   235                           
   236                           ;main.c: 68: if (TMR1IF == 1)
   237  00004C  A09E               	btfss	3998,0,c	;volatile
   238  00004E  D005               	goto	i2l32
   239                           
   240                           ;main.c: 69: {
   241                           ;main.c: 70: ((void)(TMR1H=((0xFF00)>>8),TMR1L=((0xFF00)&0xFF)));
   242  000050  68CF               	setf	4047,c	;volatile
   243  000052  0E00               	movlw	0
   244  000054  6ECE               	movwf	4046,c	;volatile
   245                           
   246                           ;main.c: 73: LATB = ~LATB ;
   247  000056  1E8A               	comf	3978,f,c	;volatile
   248                           
   249                           ;main.c: 75: TMR1IF = 0;
   250  000058  909E               	bcf	3998,0,c	;volatile
   251  00005A                     i2l32:
   252  00005A  C00E  FFF5         	movff	??_CHECK+13,tablat
   253  00005E  C00D  FFF8         	movff	??_CHECK+12,tblptru
   254  000062  C00C  FFF7         	movff	??_CHECK+11,tblptrh
   255  000066  C00B  FFF6         	movff	??_CHECK+10,tblptrl
   256  00006A  C00A  FFF4         	movff	??_CHECK+9,prodh
   257  00006E  C009  FFF3         	movff	??_CHECK+8,prodl
   258  000072  C008  FFDA         	movff	??_CHECK+7,fsr2h
   259  000076  C007  FFD9         	movff	??_CHECK+6,fsr2l
   260  00007A  C006  FFE2         	movff	??_CHECK+5,fsr1h
   261  00007E  C005  FFE1         	movff	??_CHECK+4,fsr1l
   262  000082  C004  FFEA         	movff	??_CHECK+3,fsr0h
   263  000086  C003  FFE9         	movff	??_CHECK+2,fsr0l
   264  00008A  C002  FFFB         	movff	??_CHECK+1,pclatu
   265  00008E  C001  FFFA         	movff	??_CHECK,pclath
   266  000092  920F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   267  000094  0011               	retfie		f
   268  000096                     __end_of_CHECK:
   269                           	opt stack 0
   270  0000                     pclatu	equ	0xFFB
   271                           pclath	equ	0xFFA
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           prodh	equ	0xFF4
   277                           prodl	equ	0xFF3
   278                           intcon	equ	0xFF2
   279                           fsr0h	equ	0xFEA
   280                           fsr0l	equ	0xFE9
   281                           fsr1h	equ	0xFE2
   282                           fsr1l	equ	0xFE1
   283                           fsr2h	equ	0xFDA
   284                           fsr2l	equ	0xFD9
   285                           pclatu	equ	0xFFB
   286                           pclath	equ	0xFFA
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           prodh	equ	0xFF4
   292                           prodl	equ	0xFF3
   293                           intcon	equ	0xFF2
   294                           fsr0h	equ	0xFEA
   295                           fsr0l	equ	0xFE9
   296                           fsr1h	equ	0xFE2
   297                           fsr1l	equ	0xFE1
   298                           fsr2h	equ	0xFDA
   299                           fsr2l	equ	0xFD9
   300                           
   301                           	psect	rparam
   302  0000                     pclatu	equ	0xFFB
   303                           pclath	equ	0xFFA
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           prodh	equ	0xFF4
   309                           prodl	equ	0xFF3
   310                           intcon	equ	0xFF2
   311                           fsr0h	equ	0xFEA
   312                           fsr0l	equ	0xFE9
   313                           fsr1h	equ	0xFE2
   314                           fsr1l	equ	0xFE1
   315                           fsr2h	equ	0xFDA
   316                           fsr2l	equ	0xFD9
   317                           
   318                           	psect	temp
   319  00000F                     btemp:
   320                           	opt stack 0
   321  00000F                     	ds	1
   322  0000                     int$flags	set	btemp
   323                           pclatu	equ	0xFFB
   324                           pclath	equ	0xFFA
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           prodh	equ	0xFF4
   330                           prodl	equ	0xFF3
   331                           intcon	equ	0xFF2
   332                           fsr0h	equ	0xFEA
   333                           fsr0l	equ	0xFE9
   334                           fsr1h	equ	0xFE2
   335                           fsr1l	equ	0xFE1
   336                           fsr2h	equ	0xFDA
   337                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _CHECK in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CHECK in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CHECK in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CHECK in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CHECK in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CHECK in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CHECK in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CHECK in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CHECK in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _CHECK                                               14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _CHECK (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      E       E       1       14.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb  7 18:45:09 2017

                     l25 00B8                     _LATB 000F8A                     _IPEN 007E87  
                   _PEIE 007F96                     i2l32 005A                     _main 0096  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 000F                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ?_main 0001  
                  _CHECK 0008                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _PORTB 000F81                    _TRISB 000F93                    pclath 000FFA  
                  tablat 000FF5          __initialization 00BA             __end_of_main 00BA  
                 ??_main 000F                   ?_CHECK 0001            __activetblptr 000000  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 00BA            __end_of_CHECK 0096            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  ??_CHECK 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00BA                  __ramtop 0800  
                __ptext0 0096                _T1CONbits 000FCD           __pintcode_body 0012  
   end_of_initialization 00BA                  int_func 0012      start_initialization 00BA  
              __pintcode 0008           __size_of_CHECK 008E                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0024                 int$flags 000F  
             _INTCONbits 000FF2                 intlevel2 0000  
